{
  "apis": [
    {
      "path": "/admin/api/users/{user_id}/access_tokens.json",
      "responseClass": "access_token",
      "operations": [
        {
          "deprecated": true,
          "httpMethod": "POST",
          "summary": "Access Token Create",
          "description": "[Deprecated API] Use \"Personal Access Tokens Create\". Creates an access token. Make sure to copy your new personal access token now. You will not be able to see it again as it is not stored for security reasons.",
          "group": "access_token",
          "parameters": [
            {
              "name": "user_id",
              "description": "ID of the user.",
              "dataType": "integer",
              "paramType": "path",
              "required": true
            },
            {
              "name": "name",
              "description": "Name of the access token.",
              "dataType": "string",
              "required": true,
              "paramType": "query"
            },
            {
              "name": "permission",
              "description": "Permission of the access token. It must be either 'ro' (read only) or 'rw' (read and write).",
              "dataType": "string",
              "required": true,
              "paramType": "query"
            },
            {
              "name": "scopes",
              "defaultName": "scopes[]",
              "description": "Scope of the access token. URL-encoded array containing one or more of the possible values. The possible values are, for a master user [\"account_management\", \"stats\"], and for a tenant user [\"finance\", \"account_management\", \"stats\"]",
              "dataType": "custom",
              "allowMultiple": true,
              "required": true,
              "paramType": "query"
            },
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/account/authentication_providers.xml",
      "responseClass": "authentication_provider",
      "operations": [
        {
          "httpMethod": "POST",
          "summary": "Authentication Provider Admin Portal Create",
          "description": "Creates an authentication provider for the admin portal.",
          "group": "authentication_provider",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "kind",
              "description": "The kind of authentication provider which can be either 'auth0' or 'keycloak'. Use 'keycloak' for Red Hat Single Sign-On.",
              "dataType": "string",
              "required": true,
              "paramType": "query"
            },
            {
              "name": "name",
              "description": "Name of the authentication provider.",
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "system_name",
              "description": "System Name of the authentication provider.",
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "client_id",
              "description": "Client ID of the authentication provider.",
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "client_secret",
              "description": "Client Secret of the authentication provider.",
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "site",
              "description": "Site o Realm of the authentication provider.",
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "skip_ssl_certificate_verification",
              "description": "Skip SSL certificate verification. False by default.",
              "dataType": "boolean",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "published",
              "description": "Published authentication provider. False by default",
              "dataType": "boolean",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/account/authentication_providers/{id}.xml",
      "responseClass": "authentication_provider",
      "operations": [
        {
          "httpMethod": "PUT",
          "summary": "Authentication Provider Admin Portal Update",
          "description": "Updates an authentication provider for the admin portal.",
          "group": "authentication_provider",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "id",
              "description": "ID of the authentication provider.",
              "dataType": "string",
              "required": true,
              "paramType": "path"
            },
            {
              "name": "client_id",
              "description": "Client ID of the authentication provider.",
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "client_secret",
              "description": "Client Secret of the authentication provider.",
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "site",
              "description": "Site o Realm of the authentication provider.",
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "skip_ssl_certificate_verification",
              "description": "Skip SSL certificate verification. False by default.",
              "dataType": "boolean",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "published",
              "description": "Published authentication provider. False by default",
              "dataType": "boolean",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/account/authentication_providers.xml",
      "responseClass": "List[authentication_provider]",
      "operations": [
        {
          "httpMethod": "GET",
          "summary": "Authentication Providers Admin Portal List",
          "description": "Returns the list of all the authentication providers for the admin portal.",
          "group": "authentication_provider",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/account/authentication_providers/{id}.xml",
      "responseClass": "authentication_provider",
      "operations": [
        {
          "httpMethod": "GET",
          "summary": "Authentication Provider Admin Portal Read",
          "description": "Read an authentication provider for the admin portal.",
          "group": "authentication_provider",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "id",
              "description": "ID of the authentication provider.",
              "dataType": "string",
              "required": true,
              "paramType": "path"
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/account/proxy_configs/{environment}.json",
      "responseClass": "proxy_config",
      "operations": [
        {
          "httpMethod": "GET",
          "summary": "Proxy Configs List (Provider)",
          "description": "Returns the Proxy Configs of the provider",
          "group": "proxy_config",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "environment",
              "description": "Gateway environment. Must be 'sandbox' or 'production'",
              "dataType": "string",
              "required": true,
              "paramType": "path",
              "threescale_name": "environment"
            },
            {
              "name": "host",
              "description": "Filter by host",
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "version",
              "description": "Filter by version",
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/features.xml",
      "responseClass": "List[feature]",
      "operations": [
        {
          "httpMethod": "GET",
          "summary": "Account Features List",
          "description": "Returns the list of the features available to accounts. Account features are globally scoped.",
          "group": "account_feature",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            }
          ]
        },
        {
          "httpMethod": "POST",
          "summary": "Account Feature Create",
          "description": "Create an account feature. The features of the account are globally scoped. Creating a feature does not associate the feature with an account plan.",
          "group": "account_feature",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "name",
              "description": "Name of the feature.",
              "dataType": "string",
              "allowMultiple": false,
              "required": true,
              "paramType": "query"
            },
            {
              "name": "system_name",
              "description": "System Name of the object to be created. System names cannot be modified after creation, they are used as the key to identify the objects.",
              "dataType": "string",
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/features/{id}.xml",
      "responseClass": "feature",
      "description": "Returns an account feature.",
      "operations": [
        {
          "httpMethod": "GET",
          "summary": "Account Feature Read",
          "description": "Returns an account feature.",
          "group": "account_feature",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "id",
              "description": "ID of the feature.",
              "dataType": "int",
              "required": true,
              "paramType": "path"
            }
          ]
        },
        {
          "httpMethod": "PUT",
          "summary": "Account Feature Update",
          "description": "Updates an account feature.",
          "group": "account_feature",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "id",
              "description": "ID of the feature.",
              "dataType": "int",
              "required": true,
              "paramType": "path"
            },
            {
              "name": "name",
              "description": "Name of the feature.",
              "dataType": "string",
              "allowMultiple": false,
              "required": true,
              "paramType": "query"
            }
          ]
        },
        {
          "httpMethod": "DELETE",
          "summary": "Account Feature Delete",
          "description": "Deletes an account feature.",
          "group": "account_feature",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "id",
              "description": "ID of the feature.",
              "dataType": "int",
              "required": true,
              "paramType": "path"
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/account_plans/{account_plan_id}/features.xml",
      "responseClass": "List[feature]",
      "operations": [
        {
          "httpMethod": "GET",
          "summary": "Account Plan Features List",
          "description": "Returns the list of the features associated to an account plan.",
          "group": "account_plan_feature",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "account_plan_id",
              "description": "ID of the account plan.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "account_plan_ids"
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/account_plans/{account_plan_id}/features/{id}.xml",
      "responseClass": "List[feature]",
      "operations": [
        {
          "httpMethod": "POST",
          "summary": "Account Plan Features Create",
          "description": "Associate an account feature to an account plan.",
          "group": "account_plan_feature",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "account_plan_id",
              "description": "ID of the account plan.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "account_plan_ids"
            },
            {
              "name": "id",
              "description": "ID of the feature.",
              "dataType": "int",
              "required": true,
              "paramType": "path"
            }
          ]
        },
        {
          "httpMethod": "DELETE",
          "summary": "Account Plan Features Delete",
          "description": "Deletes the association of an account feature to an account plan.",
          "group": "account_plan_feature",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "account_plan_id",
              "description": "ID of the account plan.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "account_plan_ids"
            },
            {
              "name": "id",
              "description": "ID of the feature.",
              "dataType": "int",
              "required": true,
              "paramType": "path"
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/account_plans.xml",
      "responseClass": "List[account_plan]",
      "operations": [
        {
          "httpMethod": "GET",
          "summary": "Account Plan List",
          "description": "Returns the list of all available account plans.",
          "group": "account_plan",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            }
          ]
        },
        {
          "httpMethod": "POST",
          "summary": "Account Plan Create",
          "description": "Creates an account plan.",
          "group": "account_plan",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "name",
              "description": "Name of the account plan.",
              "dataType": "string",
              "required": true,
              "paramType": "query"
            },
            {
              "name": "approval_required",
              "description": "Set the 'Accounts require approval?' to 'true' or 'false'",
              "dataType": "boolean",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "system_name",
              "description": "System Name of the object to be created. System names cannot be modified after creation, they are used as the key to identify the objects.",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "state_event",
              "description": "State event of the account plan. It can be 'publish' or 'hide'",
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/account_plans/{id}.xml",
      "responseClass": "account_plan",
      "operations": [
        {
          "httpMethod": "GET",
          "summary": "Account Plan Read",
          "description": "Returns the account plan by ID.",
          "group": "account_plan",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "id",
              "description": "ID of the account plan.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "account_plan_ids"
            }
          ]
        },
        {
          "httpMethod": "PUT",
          "summary": "Account Plan Update",
          "description": "Updates an account plan.",
          "group": "account_plan",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "id",
              "description": "ID of the account plan.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "account_plan_ids"
            },
            {
              "name": "name",
              "description": "Name of the account plan.",
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "approval_required",
              "description": "Set the 'Accounts require approval?' to 'true' or 'false'",
              "dataType": "boolean",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "state_event",
              "description": "State event of the account plan. It can be 'publish' or 'hide'",
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        },
        {
          "httpMethod": "DELETE",
          "summary": "Account Plan Delete",
          "description": "Deletes an account plan.",
          "group": "account_plan",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "id",
              "description": "ID of the account plan.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "account_plan_ids"
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/account_plans/{id}/default.xml",
      "responseClass": "account_plan",
      "operations": [
        {
          "httpMethod": "PUT",
          "summary": "Account Plan set to Default",
          "description": "Set the account plan to be the default one. The default account plan is used unless another account plan is passed explicitly, for instance on the signup express.",
          "group": "account_plan",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "id",
              "description": "ID of the account plan.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "account_plan_ids"
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/accounts.xml",
      "responseClass": "List[account]",
      "operations": [
        {
          "httpMethod": "GET",
          "summary": "Account List",
          "description": "Returns the list of buyer accounts (the accounts that consume your API). Filters by state are available and the results can be paginated.",
          "group": "account",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "state",
              "description": "Account state.",
              "dataType": "string",
              "paramType": "query",
              "required": false,
              "defaultValue": "",
              "allowableValues": {
                "values": [
                  "pending",
                  "approved",
                  "rejected"
                ],
                "valueType": "LIST"
              }
            },
            {
              "name": "page",
              "description": "Page in the paginated list. Defaults to 1.",
              "dataType": "int",
              "paramType": "query",
              "defaultValue": "1"
            },
            {
              "name": "per_page",
              "description": "Number of results per page. Default and max is 500.",
              "dataType": "int",
              "paramType": "query",
              "defaultValue": "500"
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/accounts/find.xml",
      "responseClass": "account",
      "operations": [
        {
          "httpMethod": "GET",
          "summary": "Account Find",
          "description": "Find an account by the username or email of its users (username takes precendence over email).",
          "group": "account",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "username",
              "description": "Username of the account user.",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "email",
              "description": "Email of the account user.",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "user_id",
              "description": "ID of the account user.",
              "dataType": "integer",
              "paramType": "query"
            },
            {
              "name": "buyer_provider_key",
              "description": "[Master API] Provider key of the account.",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "buyer_service_token",
              "description": "[Master API] Service token of the account service.",
              "dataType": "string",
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/accounts/{id}.xml",
      "responseClass": "account",
      "operations": [
        {
          "httpMethod": "GET",
          "summary": "Account Read",
          "description": "Returns a buyer account.",
          "group": "account",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "id",
              "description": "ID of the account.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "account_ids"
            }
          ]
        },
        {
          "httpMethod": "PUT",
          "summary": "Account Update",
          "description": "Updates a buyer account by ID. You can modify all the fields on the account, including custom fields defined in the fields definition section of your admin portal.",
          "group": "account",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "id",
              "description": "ID of the account.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "account_ids"
            },
            {
              "name": "org_name",
              "description": "Organization name of the account.",
              "dataType": "string",
              "allowMultiple": false,
              "required": false,
              "paramType": "query"
            },
            {
              "name": "monthly_billing_enabled",
              "description": "Updates monthly billing status.",
              "dataType": "boolean",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "monthly_charging_enabled",
              "description": "Updates monthly charging status.",
              "dataType": "boolean",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "additional_fields",
              "dataType": "custom",
              "paramType": "query",
              "allowMultiple": true,
              "description": "Additional fields have to be defined by name and value (i.e &name=value). You can add as many as you want. Additional fields are the custom fields declared in 'Settings >> Fields Definitions' on your API Admin Portal. Typical examples are 'url', 'country', etc. Please check your Fields Definitions to get the list of all your custom fields."
            }
          ]
        },
        {
          "httpMethod": "DELETE",
          "summary": "Account Delete ",
          "description": "Deletes a buyer account. Deleting an account removes all users, applications and service subscriptions to the account.",
          "group": "account",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "id",
              "description": "ID of the account.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "account_ids"
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/accounts/{id}/change_plan.xml",
      "responseClass": "account",
      "operations": [
        {
          "httpMethod": "PUT",
          "summary": "Account Change Plan",
          "description": "Changes the account plan for the buyer account.",
          "group": "account",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "id",
              "description": "ID of the account.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "account_ids"
            },
            {
              "name": "plan_id",
              "description": "ID of the target account plan",
              "dataType": "int",
              "allowMultiple": false,
              "required": true,
              "paramType": "query",
              "threescale_name": "account_plan_ids"
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/accounts/{id}/approve.xml",
      "responseClass": "account",
      "description": "Approves a partner account.",
      "operations": [
        {
          "httpMethod": "PUT",
          "summary": "Account Approve",
          "description": "Approves the account (changes the state to live). Accounts need to be approved explicitly via this API after creation. The state can also be updated by PUT on /admin/api/accounts/{id}.xml",
          "group": "account",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "id",
              "description": "ID of the account.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "account_ids"
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/accounts/{id}/reject.xml",
      "responseClass": "account",
      "operations": [
        {
          "httpMethod": "PUT",
          "summary": "Account Reject",
          "description": "Rejects the account (changes the state to rejected). An account can be rejected after creation, the workflow for account creation can have a validation process that ends in approving or rejecting the account submission. The state can also be updated by PUT on /admin/api/accounts/{id}.xml",
          "group": "account",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "id",
              "description": "ID of the account.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "account_ids"
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/accounts/{id}/make_pending.xml",
      "responseClass": "account",
      "operations": [
        {
          "httpMethod": "PUT",
          "summary": "Account Reset to Pending",
          "description": "Resets the state of the account to pending so that it can be approved or rejected again.",
          "group": "account",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "id",
              "description": "ID of the account.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "account_ids"
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/active_docs.json",
      "responseClass": "active_doc",
      "operations": [
        {
          "httpMethod": "GET",
          "summary": "ActiveDocs Spec List",
          "description": "Lists all ActiveDocs specs",
          "group": "active_docs",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/active_docs.json",
      "responseClass": "active_doc",
      "operations": [
        {
          "httpMethod": "POST",
          "summary": "ActiveDocs Spec Create",
          "description": "Creates a new ActiveDocs spec",
          "group": "active_docs",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "name",
              "description": "Name of the ActiveDocs spec",
              "required": true,
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "system_name",
              "description": "System Name of the ActiveDocs spec. Only ASCII letters, numbers, dashes and underscores are allowed. If blank, 'system_name' will be generated from the 'name' parameter",
              "required": false,
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "service_id",
              "description": "Service ID of the ActiveDocs spec",
              "dataType": "int",
              "paramType": "query",
              "required": false
            },
            {
              "name": "body",
              "description": "ActiveDocs specification in JSON format (based on Swagger)",
              "dataType": "string",
              "required": true,
              "paramType": "query"
            },
            {
              "name": "description",
              "description": "Description of the ActiveDocs spec",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "published",
              "description": "Set to 'true' to publish the spec on the developer portal, or 'false' to hide it. The default value is 'false'",
              "dataType": "boolean",
              "paramType": "query"
            },
            {
              "name": "skip_swagger_validations",
              "description": "Set to 'true' to skip validation of the Swagger specification, or 'false' to validate the spec. The default value is 'false'",
              "dataType": "boolean",
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/active_docs/{id}.json",
      "responseClass": "active_doc",
      "operations": [
        {
          "httpMethod": "GET",
          "summary": "ActiveDocs Spec Read",
          "description": "Returns the ActiveDocs spec by ID",
          "group": "active_docs",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "id",
              "description": "ID of the ActiveDocs spec",
              "dataType": "int",
              "required": true,
              "paramType": "path"
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/active_docs/{id}.json",
      "responseClass": "active_doc",
      "operations": [
        {
          "httpMethod": "PUT",
          "summary": "ActiveDocs Spec Update",
          "description": "Updates the ActiveDocs spec by ID",
          "group": "active_docs",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "id",
              "description": "ID of the ActiveDocs spec",
              "dataType": "int",
              "required": true,
              "paramType": "path"
            },
            {
              "name": "name",
              "description": "Name of the ActiveDocs spec",
              "required": false,
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "service_id",
              "description": "Service ID of the ActiveDocs spec",
              "dataType": "int",
              "paramType": "query",
              "required": false
            },
            {
              "name": "body",
              "description": "ActiveDocs specification in JSON format (based on Swagger)",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "description",
              "description": "Description of the ActiveDocs spec",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "published",
              "description": "Set to 'true' to publish the spec on the developer portal, or 'false' to hide it",
              "dataType": "boolean",
              "paramType": "query"
            },
            {
              "name": "skip_swagger_validations",
              "description": "Set to 'true' to skip validation of the Swagger specification, or 'false' to validate the spec",
              "dataType": "boolean",
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/active_docs/{id}.json",
      "responseClass": "active_doc",
      "operations": [
        {
          "httpMethod": "DELETE",
          "summary": "ActiveDocs Spec Delete",
          "description": "Deletes the ActiveDocs spec by ID",
          "group": "active_docs",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "id",
              "description": "ID of the ActiveDocs spec",
              "dataType": "int",
              "required": true,
              "paramType": "path"
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/application_plans/{application_plan_id}/features.xml",
      "responseClass": "List[feature]",
      "operations": [
        {
          "httpMethod": "GET",
          "summary": "Application Plan Feature List",
          "description": "Returns the list of features of the application plan.",
          "group": "application_plan_feature",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "application_plan_id",
              "description": "ID of the application plan.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "application_plan_ids"
            }
          ]
        },
        {
          "httpMethod": "POST",
          "summary": "Application Plan Feature Create",
          "description": "Associates a feature to an application plan.",
          "group": "application_plan_feature",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "application_plan_id",
              "description": "ID of the application plan.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "application_plan_ids"
            },
            {
              "name": "feature_id",
              "description": "ID of the feature.",
              "dataType": "int",
              "required": true,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/application_plans/{application_plan_id}/features/{id}.xml",
      "operations": [
        {
          "httpMethod": "DELETE",
          "summary": "Application Plan Feature Delete",
          "descripttion": "Removes the association of a feature to an application plan.",
          "group": "application_plan_feature",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "application_plan_id",
              "description": "ID of the application plan.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "application_plan_ids"
            },
            {
              "name": "id",
              "description": "ID of the feature.",
              "dataType": "int",
              "required": true,
              "paramType": "path"
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/application_plans/{application_plan_id}/limits.xml",
      "responseClass": "List[limit]",
      "operations": [
        {
          "nickname": "plan_limits",
          "httpMethod": "GET",
          "summary": "Limits List per Application Plan",
          "description": "Returns the list of all limits associated to an application plan.",
          "group": "application_plan_limits",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "page",
              "description": "Page in the paginated list. Defaults to 1.",
              "dataType": "int",
              "paramType": "query",
              "defaultValue": "1"
            },
            {
              "name": "per_page",
              "description": "Number of results per page. Default and max is 50.",
              "dataType": "int",
              "paramType": "query",
              "defaultValue": "50"
            },
            {
              "name": "application_plan_id",
              "description": "ID of the application plan.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "application_plan_ids"
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/application_plans/{application_plan_id}/metrics/{metric_id}/limits.xml",
      "responseClass": "List[limit]",
      "operations": [
        {
          "nickname": "limits",
          "httpMethod": "GET",
          "summary": "Limit List per Metric",
          "description": "Returns the list of all limits associated to a metric of an application plan.",
          "group": "application_plan_limit",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "application_plan_id",
              "description": "ID of the application plan.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "application_plan_ids"
            },
            {
              "name": "metric_id",
              "description": "ID of the metric.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "metric_ids"
            }
          ]
        },
        {
          "httpMethod": "POST",
          "summary": "Limit Create",
          "description": "Adds a limit to a metric of an application plan. All applications with the application plan (application_plan_id) will be constrained by this new limit on the metric (metric_id).",
          "group": "application_plan_limit",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "application_plan_id",
              "description": "ID of the application plan.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "application_plan_ids"
            },
            {
              "name": "metric_id",
              "description": "ID of the metric.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "metric_ids"
            },
            {
              "name": "period",
              "description": "Period of the limit.",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "defaultValue": "minute",
              "allowableValues": {
                "values": [
                  "eternity",
                  "year",
                  "month",
                  "week",
                  "day",
                  "hour",
                  "minute"
                ],
                "valueType": "LIST"
              }
            },
            {
              "name": "value",
              "description": "Value of the limit.",
              "dataType": "int",
              "required": true,
              "paramType": "query",
              "allowMultiple": false
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/application_plans/{application_plan_id}/metrics/{metric_id}/limits/{id}.xml",
      "responseClass": "application_plan_limit",
      "operations": [
        {
          "httpMethod": "GET",
          "summary": "Limit Read",
          "description": "Returns a limit on a metric of an application plan.",
          "group": "application_plan_limit",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "application_plan_id",
              "description": "ID of the application plan.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "application_plan_ids"
            },
            {
              "name": "metric_id",
              "description": "ID of the metric.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "metric_ids"
            },
            {
              "name": "id",
              "description": "ID of the limit.",
              "dataType": "int",
              "required": true,
              "paramType": "path"
            }
          ]
        },
        {
          "httpMethod": "PUT",
          "summary": "Limit Update",
          "description": "Updates a limit on a metric of an application plan.",
          "group": "application_plan_limit",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "application_plan_id",
              "description": "ID of the application plan.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "application_plan_ids"
            },
            {
              "name": "metric_id",
              "description": "ID of the metric.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "metric_ids"
            },
            {
              "name": "id",
              "description": "ID of the limit.",
              "dataType": "int",
              "required": true,
              "paramType": "path"
            },
            {
              "name": "period",
              "description": "Period of the limit.",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "defaultValue": "minute",
              "allowableValues": {
                "values": [
                  "eternity",
                  "year",
                  "month",
                  "week",
                  "day",
                  "hour",
                  "minute"
                ],
                "valueType": "LIST"
              }
            },
            {
              "name": "value",
              "description": "Value of the limit.",
              "dataType": "int",
              "required": false,
              "paramType": "query",
              "allowMultiple": false
            }
          ]
        },
        {
          "httpMethod": "DELETE",
          "summary": "Limit Delete",
          "description": "Deletes a limit on a metric of an application plan.",
          "group": "application_plan_limit",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "application_plan_id",
              "description": "ID of the application plan.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "application_plan_ids"
            },
            {
              "name": "metric_id",
              "description": "ID of the metric.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "metric_ids"
            },
            {
              "name": "id",
              "description": "ID of the limit.",
              "dataType": "int",
              "required": true,
              "paramType": "path"
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/application_plans/{application_plan_id}/metrics/{metric_id}/pricing_rules.xml",
      "responseClass": "List[pricing_rule]",
      "operations": [
        {
          "nickname": "metric_pricing_rules",
          "httpMethod": "GET",
          "summary": "Pricing Rules List per Metric",
          "description": "Returns the list of all pricing rules associated to a metric of an application plan.",
          "group": "application_plan_pricing_rules",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "application_plan_id",
              "description": "ID of the application plan.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "application_plan_ids"
            },
            {
              "name": "metric_id",
              "description": "ID of the metric.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "metric_ids"
            }
          ]
        },
        {
          "httpMethod": "POST",
          "summary": "Pricing Rule Create",
          "description": "Creates a pricing rule for an associated application plan.",
          "group": "application_plan_pricing_rules",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "application_plan_id",
              "description": "ID of the application plan.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "application_plan_ids"
            },
            {
              "name": "metric_id",
              "description": "ID of the metric.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "metric_ids"
            },
            {
              "name": "min",
              "dataType": "int",
              "paramType": "query",
              "description": "From (min) hit"
            },
            {
              "name": "max",
              "dataType": "int",
              "paramType": "query",
              "description": "To (max) hit"
            },
            {
              "name": "cost_per_unit",
              "dataType": "decimal",
              "paramType": "query",
              "description": "Cost per unit"
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/application_plans/{application_plan_id}/metrics/{metric_id}/pricing_rules/{id}.json",
      "responseClass": "pricing_rule",
      "operations": [
        {
          "httpMethod": "DELETE",
          "summary": "Pricing Rule Delete",
          "description": "Deletes a pricing rule for a given application plan and metric.",
          "group": "application_plan_pricing_rules",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "application_plan_id",
              "description": "ID of the application plan.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "application_plan_ids"
            },
            {
              "name": "metric_id",
              "description": "ID of the metric.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "metric_ids"
            },
            {
              "name": "id",
              "description": "ID of the pricing rule.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "pricing_rule_ids"
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/application_plans/{application_plan_id}/pricing_rules.xml",
      "responseClass": "List[pricing_rule]",
      "operations": [
        {
          "nickname": "pricing_rules",
          "httpMethod": "GET",
          "summary": "Pricing Rules List per Application Plan",
          "description": "Returns the list of all pricing rules associated to an application plan.",
          "group": "application_plan_pricing_rules",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "application_plan_id",
              "description": "ID of the application plan.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "application_plan_ids"
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/application_plans.xml",
      "responseClass": "List[application_plan]",
      "operations": [
        {
          "httpMethod": "GET",
          "summary": "Application Plan List (all services)",
          "description": "Returns the list of all application plans across services. Note that application plans are scoped by service.",
          "group": "application_plan",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/services/{service_id}/application_plans.xml",
      "responseClass": "List[application_plan]",
      "operations": [
        {
          "httpMethod": "GET",
          "summary": "Application Plan List",
          "description": "Returns the list of all application plans of a service.",
          "group": "application_plan",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "service_id",
              "description": "ID of the service.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "service_ids"
            }
          ]
        },
        {
          "httpMethod": "POST",
          "summary": "Application Plan Create",
          "description": "Creates an application plan.",
          "group": "application_plan",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "service_id",
              "description": "ID of the service.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "service_ids"
            },
            {
              "name": "name",
              "description": "Name of the application plan.",
              "dataType": "string",
              "required": true,
              "paramType": "query"
            },
            {
              "name": "approval_required",
              "description": "Set the 'Applications require approval?' to 'true' or 'false'",
              "dataType": "boolean",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "cost_per_month",
              "description": "Cost per month",
              "dataType": "decimal",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "setup_fee",
              "description": "Setup fee",
              "dataType": "decimal",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "trial_period_days",
              "description": "Trial period days",
              "dataType": "integer",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "system_name",
              "description": "System Name of the object to be created. System names cannot be modified after creation, they are used as the key to identify the objects.",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "state_event",
              "description": "State event of the application plan. It can be 'publish' or 'hide'",
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/services/{service_id}/application_plans/{id}.xml",
      "responseClass": "application_plan",
      "operations": [
        {
          "httpMethod": "GET",
          "summary": "Application Plan Read",
          "description": "Returns and application plan.",
          "group": "application_plan",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "service_id",
              "description": "ID of the service.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "service_ids"
            },
            {
              "name": "id",
              "description": "ID of the application plan.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "application_plan_ids"
            }
          ]
        },
        {
          "httpMethod": "PUT",
          "summary": "Application Plan Update",
          "description": "Updates an application plan.",
          "group": "application_plan",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "service_id",
              "description": "ID of the service.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "service_ids"
            },
            {
              "name": "id",
              "description": "ID of the application plan.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "application_plan_ids"
            },
            {
              "name": "name",
              "description": "Name of the application plan.",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "approval_required",
              "description": "Set the 'Applications require approval?' to 'true' or 'false'",
              "dataType": "boolean",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "cost_per_month",
              "description": "Cost per month",
              "dataType": "decimal",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "setup_fee",
              "description": "Setup fee",
              "dataType": "decimal",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "trial_period_days",
              "description": "Trial period days",
              "dataType": "integer",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "state_event",
              "description": "State event of the application plan. It can be 'publish' or 'hide'",
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        },
        {
          "httpMethod": "DELETE",
          "summary": "Application Plan Delete",
          "description": "Deletes an application plan.",
          "group": "application_plan",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "service_id",
              "description": "ID of the service.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "service_ids"
            },
            {
              "name": "id",
              "description": "ID of the application plan.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "application_plan_ids"
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/services/{service_id}/application_plans/{id}/default.xml",
      "responseClass": "application_plan",
      "operations": [
        {
          "httpMethod": "PUT",
          "summary": "Application Plan Set to Default",
          "description": "Makes the application plan the default one. New applications will be assigned to the default plan unless an application_plan_id is explicity passed (e.g. on the signup express operation).",
          "group": "application_plan",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "service_id",
              "description": "ID of the service.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "service_ids"
            },
            {
              "name": "id",
              "description": "ID of the application plan.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "application_plan_ids"
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/applications.xml",
      "responseClass": "List[applications]",
      "operations": [
        {
          "nickname": "applications",
          "httpMethod": "GET",
          "summary": "Application List (all services)",
          "description": "Returns the list of applications across all services. Note that applications are scoped by service and can be paginated.",
          "group": "application",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "page",
              "description": "Page in the paginated list. Defaults to 1.",
              "dataType": "int",
              "paramType": "query",
              "defaultValue": "1"
            },
            {
              "name": "per_page",
              "description": "Number of results per page. Default and max is 500.",
              "dataType": "int",
              "paramType": "query",
              "defaultValue": "500"
            },
            {
              "name": "active_since",
              "description": "Filter date",
              "dataType": "string",
              "allowMultiple": false,
              "required": false,
              "paramType": "query",
              "threescale_name": "active_since"
            },
            {
              "name": "inactive_since",
              "description": "Filter date",
              "dataType": "string",
              "allowMultiple": false,
              "required": false,
              "paramType": "query",
              "threescale_name": "inactive_since"
            },
            {
              "name": "service_id",
              "description": "Filter by service",
              "dataType": "string",
              "allowMultiple": false,
              "required": false,
              "paramType": "query",
              "threescale_name": "service_id"
            },
            {
              "name": "plan_id",
              "description": "Filter by plan",
              "dataType": "string",
              "allowMultiple": false,
              "required": false,
              "paramType": "query",
              "threescale_name": "plan_id"
            },
            {
              "name": "plan_type",
              "description": "Filter by plan type",
              "dataType": "string",
              "allowableValues": {
                "values": [
                  "free",
                  "paid"
                ],
                "valueType": "LIST"
              },
              "allowMultiple": false,
              "required": false,
              "paramType": "query",
              "threescale_name": "plan_type"
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/applications/find.xml",
      "responseClass": "application",
      "operations": [
        {
          "httpMethod": "GET",
          "summary": "Application Find",
          "description": "Finds an application by keys used on the integration of your API and 3scale's Service Management API or by application ID.",
          "group": "application",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "application_id",
              "description": "ID of the application.",
              "dataType": "int",
              "required": false,
              "paramType": "query",
              "threescale_name": "application_ids"
            },
            {
              "name": "user_key",
              "description": "user_key of the application (for user_key authentication mode).",
              "dataType": "string",
              "allowMultiple": false,
              "required": false,
              "paramType": "query",
              "threescale_name": "user_keys"
            },
            {
              "name": "app_id",
              "description": "app_id of the application (for app_id/app_key and oauth authentication modes).",
              "dataType": "string",
              "allowMultiple": false,
              "required": false,
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "service_id",
              "description": "Filter by service",
              "dataType": "string",
              "allowMultiple": false,
              "required": false,
              "paramType": "query",
              "threescale_name": "service_id"
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/authentication_providers.xml",
      "responseClass": "authentication_provider",
      "operations": [
        {
          "httpMethod": "POST",
          "summary": "Authentication Provider Developer Portal Create",
          "description": "Creates an authentication provider for the developer portal.",
          "group": "authentication_provider",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "kind",
              "description": "The kind of authentication provider which can be either 'github', 'auth0', 'keycloak' or a custom one. Use 'keycloak' for Red Hat Single Sign-On.",
              "dataType": "string",
              "required": true,
              "paramType": "query"
            },
            {
              "name": "name",
              "description": "Name of the authentication provider.",
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "system_name",
              "description": "System Name of the authentication provider.",
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "client_id",
              "description": "Client ID of the authentication provider.",
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "client_secret",
              "description": "Client Secret of the authentication provider.",
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "site",
              "description": "Site o Realm of the authentication provider.",
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "token_url",
              "description": "Token URL of the authentication provider.",
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "user_info_url",
              "description": "User info URL of the authentication provider.",
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "authorize_url",
              "description": "Authorize URL of the authentication provider.",
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "identifier_key",
              "description": "Identifier key. 'id' by default.",
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "username_key",
              "description": "Username key. 'login' by default.",
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "trust_email",
              "description": "Trust emails automatically. False by default",
              "dataType": "boolean",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "published",
              "description": "Published authentication provider. False by default",
              "dataType": "boolean",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "branding_state_event",
              "description": "Branding state event of the authentication provider. Only available for Github. It can be either 'brand_as_threescale' (the default one) or 'custom_brand'",
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "skip_ssl_certificate_verification",
              "description": "Skip SSL certificate verification. False by default.",
              "dataType": "boolean",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "automatically_approve_accounts",
              "description": "Automatically approve accounts. False by default.",
              "dataType": "boolean",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/authentication_providers/{id}.xml",
      "responseClass": "authentication_provider",
      "operations": [
        {
          "httpMethod": "PUT",
          "summary": "Authentication Provider Developer Portal Update",
          "description": "Updates an authentication provider for the developer portal.",
          "group": "authentication_provider",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "id",
              "description": "ID of the authentication provider.",
              "dataType": "string",
              "required": true,
              "paramType": "path"
            },
            {
              "name": "client_id",
              "description": "Client ID of the authentication provider.",
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "client_secret",
              "description": "Client Secret of the authentication provider.",
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "site",
              "description": "Site o Realm of the authentication provider.",
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "published",
              "description": "Published authentication provider. False by default",
              "dataType": "boolean",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "skip_ssl_certificate_verification",
              "description": "Skip SSL certificate verification. False by default.",
              "dataType": "boolean",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "automatically_approve_accounts",
              "description": "Automatically approve accounts. False by default.",
              "dataType": "boolean",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/authentication_providers.xml",
      "responseClass": "List[authentication_provider]",
      "operations": [
        {
          "httpMethod": "GET",
          "summary": "Authentication Providers Developer Portal List",
          "description": "Returns the list of all the authentication providers for the developer portal.",
          "group": "authentication_provider",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/authentication_providers/{id}.xml",
      "responseClass": "authentication_provider",
      "operations": [
        {
          "httpMethod": "GET",
          "summary": "Authentication Provider Read",
          "description": "Returns an authentication provider.",
          "group": "authentication_provider",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "id",
              "description": "ID of the authentication provider.",
              "dataType": "string",
              "required": true,
              "paramType": "path"
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/backend_apis/{backend_api_id}/mapping_rules.json",
      "responseClass": "List[mapping_rule]",
      "operations": [
        {
          "httpMethod": "GET",
          "summary": "Backend Mapping Rules List",
          "description": "Returns the Mapping Rules of a Backend.",
          "group": "mapping_rule",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "backend_api_id",
              "description": "ID of the Backend.",
              "dataType": "int",
              "required": true,
              "paramType": "path"
            },
            {
              "name": "page",
              "description": "Page in the paginated list. Defaults to 1.",
              "dataType": "int",
              "paramType": "query",
              "defaultValue": "1"
            },
            {
              "name": "per_page",
              "description": "Number of results per page. Default and max is 500.",
              "dataType": "int",
              "paramType": "query",
              "defaultValue": "500"
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/backend_apis/{backend_api_id}/mapping_rules/{id}.json",
      "responseClass": "mapping_rule",
      "operations": [
        {
          "httpMethod": "GET",
          "summary": "Backend Mapping Rules Read",
          "description": "Returns the Mapping Rule of a Backend.",
          "group": "mapping_rule",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "backend_api_id",
              "description": "ID of the Backend.",
              "dataType": "int",
              "required": true,
              "paramType": "path"
            },
            {
              "name": "id",
              "description": "Mapping Rule ID.",
              "dataType": "int",
              "paramType": "path",
              "required": true
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/backend_apis/{backend_api_id}/mapping_rules.json",
      "responseClass": "mapping_rule",
      "operations": [
        {
          "httpMethod": "POST",
          "summary": "Backend Mapping Rule Create",
          "description": "Creates a Mapping Rule of a Backend.",
          "group": "mapping_rule",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "backend_api_id",
              "description": "ID of the Backend.",
              "dataType": "int",
              "required": true,
              "paramType": "path"
            },
            {
              "name": "http_method",
              "description": "HTTP method.",
              "dataType": "string",
              "paramType": "query",
              "required": true
            },
            {
              "name": "pattern",
              "description": "Mapping Rule pattern.",
              "dataType": "string",
              "paramType": "query",
              "required": true
            },
            {
              "name": "delta",
              "description": "Increase the metric by this delta.",
              "dataType": "int",
              "paramType": "query",
              "required": true
            },
            {
              "name": "metric_id",
              "description": "Metric ID.",
              "dataType": "int",
              "paramType": "query",
              "required": true,
              "threescale_name": "metric_ids"
            },
            {
              "name": "position",
              "description": "Mapping Rule position",
              "dataType": "int",
              "paramType": "query"
            },
            {
              "name": "last",
              "description": "Last matched Mapping Rule to process",
              "dataType": "bool",
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/backend_apis/{backend_api_id}/mapping_rules/{id}.json",
      "responseClass": "mapping_rule",
      "operations": [
        {
          "httpMethod": "PUT",
          "summary": "Backend Mapping Rule Update",
          "description": "Updates a Mapping Rule of a Backend.",
          "group": "mapping_rule",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "backend_api_id",
              "description": "ID of the Backend.",
              "dataType": "int",
              "required": true,
              "paramType": "path"
            },
            {
              "name": "id",
              "description": "Mapping Rule ID.",
              "dataType": "int",
              "paramType": "path",
              "required": true
            },
            {
              "name": "http_method",
              "description": "HTTP method.",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "pattern",
              "description": "Mapping Rule pattern.",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "delta",
              "description": "Increase the metric by this delta.",
              "dataType": "int",
              "paramType": "query"
            },
            {
              "name": "metric_id",
              "description": "Metric ID.",
              "dataType": "int",
              "paramType": "query",
              "threescale_name": "metric_ids"
            },
            {
              "name": "position",
              "description": "Mapping Rule position",
              "dataType": "int",
              "paramType": "query"
            },
            {
              "name": "last",
              "description": "Last matched Mapping Rule to process",
              "dataType": "bool",
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/backend_apis/{backend_api_id}/mapping_rules/{id}.json",
      "responseClass": "mapping_rule",
      "operations": [
        {
          "httpMethod": "DELETE",
          "summary": "Backend Mapping Rule Delete",
          "description": "Deletes a Mapping Rule of a Backend.",
          "group": "mapping_rule",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "backend_api_id",
              "description": "ID of the Backend.",
              "dataType": "int",
              "required": true,
              "paramType": "path"
            },
            {
              "name": "id",
              "description": "Mapping Rule ID.",
              "dataType": "int",
              "paramType": "path",
              "required": true
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/backend_apis/{backend_api_id}/metrics/{metric_id}/methods.json",
      "responseClass": "List[methods]",
      "operations": [
        {
          "httpMethod": "GET",
          "summary": "Backend Method List",
          "description": "List the methods of a metric that belongs to a backend api. Methods are metrics that are children of a parent metric.",
          "group": "metric_method",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "backend_api_id",
              "description": "ID of the Backend.",
              "dataType": "int",
              "required": true,
              "paramType": "path"
            },
            {
              "name": "metric_id",
              "description": "ID of the metric.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "metric_ids"
            },
            {
              "name": "page",
              "description": "Page in the paginated list. Defaults to 1.",
              "dataType": "int",
              "paramType": "query",
              "defaultValue": "1"
            },
            {
              "name": "per_page",
              "description": "Number of results per page. Default and max is 500.",
              "dataType": "int",
              "paramType": "query",
              "defaultValue": "500"
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/backend_apis/{backend_api_id}/metrics/{metric_id}/methods.json",
      "responseClass": "method",
      "operations": [
        {
          "httpMethod": "POST",
          "summary": "Backend Method Create",
          "description": "Creates a method under a metric that belongs to a backend api.",
          "group": "metric_method",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "backend_api_id",
              "description": "ID of the Backend.",
              "dataType": "int",
              "required": true,
              "paramType": "path"
            },
            {
              "name": "metric_id",
              "description": "ID of the metric.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "metric_ids"
            },
            {
              "name": "friendly_name",
              "description": "Descriptive Name of the metric.",
              "dataType": "string",
              "allowMultiple": false,
              "required": true,
              "paramType": "query"
            },
            {
              "name": "system_name",
              "description": "System Name of the metric. If blank a system_name will be generated for you from the friendly_name parameter",
              "dataType": "string",
              "allowMultiple": false,
              "required": false,
              "paramType": "query"
            },
            {
              "name": "unit",
              "description": "Measure unit of the metric.",
              "dataType": "string",
              "allowMultiple": false,
              "required": true,
              "paramType": "query"
            },
            {
              "name": "description",
              "description": "Description of the metric.",
              "dataType": "text",
              "allowMultiple": false,
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/backend_apis/{backend_api_id}/metrics/{metric_id}/methods/{id}.json",
      "responseClass": "method",
      "operations": [
        {
          "httpMethod": "GET",
          "summary": "Backend Method Read",
          "description": "Returns the method of a metric that belongs to a backend api.",
          "group": "metric_method",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "backend_api_id",
              "description": "ID of the Backend.",
              "dataType": "int",
              "required": true,
              "paramType": "path"
            },
            {
              "name": "metric_id",
              "description": "ID of the metric.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "metric_ids"
            },
            {
              "name": "id",
              "description": "ID of the method.",
              "dataType": "int",
              "required": true,
              "paramType": "path"
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/backend_apis/{backend_api_id}/metrics/{metric_id}/methods/{id}.json",
      "responseClass": "method",
      "operations": [
        {
          "httpMethod": "PUT",
          "summary": "Backend Method Update",
          "description": "Updates a method of a metric that belongs to a backend api.",
          "group": "metric_method",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "backend_api_id",
              "description": "ID of the Backend.",
              "dataType": "int",
              "required": true,
              "paramType": "path"
            },
            {
              "name": "metric_id",
              "description": "ID of the metric.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "metric_ids"
            },
            {
              "name": "id",
              "description": "ID of the method.",
              "dataType": "int",
              "required": true,
              "paramType": "path"
            },
            {
              "name": "friendly_name",
              "description": "Name of the method.",
              "dataType": "string",
              "allowMultiple": false,
              "required": false,
              "paramType": "query"
            },
            {
              "name": "unit",
              "description": "Measure unit of the method.",
              "dataType": "string",
              "allowMultiple": false,
              "required": false,
              "paramType": "query"
            },
            {
              "name": "description",
              "description": "Description of the method.",
              "dataType": "text",
              "allowMultiple": false,
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/backend_apis/{backend_api_id}/metrics/{metric_id}/methods/{id}.json",
      "operations": [
        {
          "httpMethod": "DELETE",
          "summary": "Backend Method Delete",
          "description": "Deletes the method of a metric that belongs to a backend api.",
          "group": "metric_method",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "backend_api_id",
              "description": "ID of the Backend.",
              "dataType": "int",
              "required": true,
              "paramType": "path"
            },
            {
              "name": "metric_id",
              "description": "ID of the metric.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "metric_ids"
            },
            {
              "name": "id",
              "description": "ID of the method.",
              "dataType": "int",
              "required": true,
              "paramType": "path"
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/backend_apis/{backend_api_id}/metrics.json",
      "responseClass": "List[metric]",
      "operations": [
        {
          "httpMethod": "GET",
          "summary": "Backend Metric List",
          "description": "Returns the list of metrics of a backend api.",
          "group": "metric",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "backend_api_id",
              "description": "ID of the Backend.",
              "dataType": "int",
              "required": true,
              "paramType": "path"
            },
            {
              "name": "page",
              "description": "Page in the paginated list. Defaults to 1.",
              "dataType": "int",
              "paramType": "query",
              "defaultValue": "1"
            },
            {
              "name": "per_page",
              "description": "Number of results per page. Default and max is 500.",
              "dataType": "int",
              "paramType": "query",
              "defaultValue": "500"
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/backend_apis/{backend_api_id}/metrics/{id}.json",
      "responseClass": "metric",
      "operations": [
        {
          "httpMethod": "GET",
          "summary": "Backend Metric Read",
          "description": "Returns the metric of a backend api.",
          "group": "metric",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "backend_api_id",
              "description": "ID of the Backend.",
              "dataType": "int",
              "required": true,
              "paramType": "path"
            },
            {
              "name": "id",
              "description": "ID of the metric.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "metric_ids"
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/backend_apis/{backend_api_id}/metrics.json",
      "responseClass": "metric",
      "operations": [
        {
          "httpMethod": "POST",
          "summary": "Backend Metric Create",
          "description": "Creates a metric on a backend api.",
          "group": "metric",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "backend_api_id",
              "description": "ID of the Backend.",
              "dataType": "int",
              "required": true,
              "paramType": "path"
            },
            {
              "name": "friendly_name",
              "description": "Descriptive Name of the metric.",
              "dataType": "string",
              "allowMultiple": false,
              "required": true,
              "paramType": "query"
            },
            {
              "name": "system_name",
              "description": "System Name of the metric. If blank a system_name will be generated for you from the friendly_name parameter",
              "dataType": "string",
              "allowMultiple": false,
              "required": false,
              "paramType": "query"
            },
            {
              "name": "unit",
              "description": "Measure unit of the metric.",
              "dataType": "string",
              "allowMultiple": false,
              "required": true,
              "paramType": "query"
            },
            {
              "name": "description",
              "description": "Description of the metric.",
              "dataType": "text",
              "allowMultiple": false,
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/backend_apis/{backend_api_id}/metrics/{id}.json",
      "responseClass": "metric",
      "operations": [
        {
          "httpMethod": "PUT",
          "summary": "Backend Metric Update",
          "description": "Updates the metric of a backend api.",
          "group": "metric",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "backend_api_id",
              "description": "ID of the Backend.",
              "dataType": "int",
              "required": true,
              "paramType": "path"
            },
            {
              "name": "id",
              "description": "ID of the metric.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "metric_ids"
            },
            {
              "name": "friendly_name",
              "description": "Name of the metric.",
              "dataType": "string",
              "allowMultiple": false,
              "required": false,
              "paramType": "query"
            },
            {
              "name": "unit",
              "description": "Measure unit of the metric.",
              "dataType": "string",
              "allowMultiple": false,
              "required": false,
              "paramType": "query"
            },
            {
              "name": "description",
              "description": "Description of the metric.",
              "dataType": "text",
              "allowMultiple": false,
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/backend_apis/{backend_api_id}/metrics/{id}.json",
      "operations": [
        {
          "httpMethod": "DELETE",
          "summary": "Backend Metric Delete",
          "description": "Deletes the metric of a backend api. When you delete a metric or a method, it will also remove all the associated limits.",
          "group": "metric",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "backend_api_id",
              "description": "ID of the Backend.",
              "dataType": "int",
              "required": true,
              "paramType": "path"
            },
            {
              "name": "id",
              "description": "ID of the metric.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "metric_ids"
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/backend_apis.json",
      "responseClass": "List[backend_api]",
      "operations": [
        {
          "httpMethod": "GET",
          "summary": "Backend List",
          "description": "Returns the list of backend apis. The results can be paginated.",
          "group": "backend_api",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "page",
              "description": "Page in the paginated list. Defaults to 1.",
              "dataType": "int",
              "paramType": "query",
              "defaultValue": "1"
            },
            {
              "name": "per_page",
              "description": "Number of results per page. Default and max is 500.",
              "dataType": "int",
              "paramType": "query",
              "defaultValue": "500"
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/backend_apis.json",
      "responseClass": "backend_api",
      "operations": [
        {
          "httpMethod": "POST",
          "summary": "Backend Create",
          "description": "Creates a Backend.",
          "group": "backend_api",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "name",
              "description": "Name of the Backend",
              "dataType": "string",
              "required": true,
              "paramType": "query"
            },
            {
              "name": "system_name",
              "description": "System Name of the object to be created. System names cannot be modified after creation, they are used as the key to identify the objects.",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "description",
              "description": "Description of the Backend",
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "private_endpoint",
              "description": "Private Base URL (your API)",
              "dataType": "string",
              "required": true,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/backend_apis/{id}.json",
      "responseClass": "backend_api",
      "operations": [
        {
          "httpMethod": "GET",
          "summary": "Backend Read",
          "description": "Returns a backend.",
          "group": "backend_api",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "id",
              "description": "ID of the Backend.",
              "dataType": "int",
              "required": true,
              "paramType": "path"
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/backend_apis/{id}.json",
      "responseClass": "backend_api",
      "operations": [
        {
          "httpMethod": "PUT",
          "summary": "Backend Update",
          "description": "Updates a backend.",
          "group": "backend_api",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "id",
              "description": "ID of the Backend.",
              "dataType": "int",
              "required": true,
              "paramType": "path"
            },
            {
              "name": "name",
              "description": "Name of the Backend",
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "description",
              "description": "Description of the Backend",
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "private_endpoint",
              "description": "Private Base URL (your API)",
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/backend_apis/{id}.json",
      "responseClass": "backend_api",
      "operations": [
        {
          "httpMethod": "DELETE",
          "summary": "Backend Delete",
          "description": "Deletes a backend.",
          "group": "backend_api",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "id",
              "description": "ID of the Backend.",
              "dataType": "int",
              "required": true,
              "paramType": "path"
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/accounts/{account_id}/plan.xml",
      "responseClass": "account_plan",
      "operations": [
        {
          "httpMethod": "GET",
          "summary": "Account Fetch Account Plan",
          "description": "Returns the account plan associated to an account.",
          "group": "account",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "account_id",
              "description": "ID of the account.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "account_ids"
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/accounts/{account_id}/applications/{application_id}/keys.xml",
      "responseClass": "application",
      "operations": [
        {
          "httpMethod": "GET",
          "summary": "Application Key List",
          "description": "Lists the Application Keys (or the Client Secret for OAuth or OpenID Connect modes) of the application.",
          "group": "application",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "account_id",
              "description": "ID of the account.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "account_ids"
            },
            {
              "name": "application_id",
              "description": "ID of the application.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "application_ids"
            }
          ]
        },
        {
          "nickname": "key_create",
          "httpMethod": "POST",
          "summary": "Application Key Create",
          "description": "Adds an application key for App Id/App Key mode (until a maximum of 5 keys) or the Client Secret for OAuth or OpenID Connect modes (only one).",
          "group": "application",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "account_id",
              "description": "ID of the account.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "account_ids"
            },
            {
              "name": "application_id",
              "description": "ID of the application.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "application_ids"
            },
            {
              "name": "key",
              "description": "app_key to be added",
              "dataType": "string",
              "required": true,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/accounts/{account_id}/applications/{application_id}/keys/{key}.xml",
      "responseClass": "application",
      "operations": [
        {
          "httpMethod": "DELETE",
          "summary": "Application Key Delete",
          "description": "Deletes an application key for App Id/App Key mode or the Client Secret for OAuth or OpenID Connect modes. An application may have to have at least one App Key (controlled by settings).",
          "group": "application",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "account_id",
              "description": "ID of the account.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "account_ids"
            },
            {
              "name": "application_id",
              "description": "ID of the application.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "application_ids"
            },
            {
              "name": "key",
              "description": "app_key to be deleted.",
              "dataType": "string",
              "required": true,
              "paramType": "path"
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/accounts/{account_id}/applications/{application_id}/referrer_filters.xml",
      "responseClass": "application",
      "operations": [
        {
          "httpMethod": "GET",
          "summary": "Application Referrer Filter List",
          "description": "Lists referrer filters of the application.",
          "group": "application",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "account_id",
              "description": "ID of the account.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "account_ids"
            },
            {
              "name": "application_id",
              "description": "ID of the application.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "application_ids"
            }
          ]
        },
        {
          "httpMethod": "POST",
          "summary": "Application Referrer Filter Create",
          "description": "Adds a referrer filter to an application. Referrer filters limit API requests by domain or IP ranges.",
          "group": "application",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "account_id",
              "description": "ID of the account.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "account_ids"
            },
            {
              "name": "application_id",
              "description": "ID of the application.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "application_ids"
            },
            {
              "name": "referrer_filter",
              "description": "Referrer filter to be created.",
              "dataType": "string",
              "required": true,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/accounts/{account_id}/applications/{application_id}/referrer_filters/{id}.xml",
      "responseClass": "application",
      "operations": [
        {
          "httpMethod": "DELETE",
          "summary": "Application Referrer Filter Delete",
          "description": "Deletes a referrer filter of an application. Referrer filters limit API requests by domain or IP ranges.",
          "group": "application",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "account_id",
              "description": "ID of the account.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "account_ids"
            },
            {
              "name": "application_id",
              "description": "ID of the application.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "application_ids"
            },
            {
              "name": "id",
              "description": "ID of referrer filter to be deleted.",
              "dataType": "int",
              "required": true,
              "paramType": "path"
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/accounts/{account_id}/applications.xml",
      "responseClass": "List[applications]",
      "operations": [
        {
          "httpMethod": "GET",
          "summary": "Application List",
          "description": "Returns the list of application of an account.",
          "group": "application",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "account_id",
              "description": "ID of the account.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "account_ids"
            }
          ]
        },
        {
          "httpMethod": "POST",
          "summary": "Application Create",
          "description": "Create an application. The application object can be extended with Fields Definitions in the Admin Portal where you can add/remove fields, for instance token (string), age (int), third name (string optional), etc.",
          "group": "application",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "account_id",
              "description": "ID of the account.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "account_ids"
            },
            {
              "name": "plan_id",
              "description": "ID of the application plan.",
              "dataType": "int",
              "required": true,
              "paramType": "query",
              "threescale_name": "application_plan_ids"
            },
            {
              "name": "name",
              "description": "Name of the application to be created.",
              "dataType": "string",
              "allowMultiple": false,
              "required": true,
              "paramType": "query"
            },
            {
              "name": "description",
              "description": "Description of the application to be created.",
              "dataType": "string",
              "allowMultiple": false,
              "required": true,
              "paramType": "query"
            },
            {
              "name": "user_key",
              "description": "User Key (API Key) of the application to be created.",
              "dataType": "string",
              "allowMultiple": false,
              "required": false,
              "paramType": "query"
            },
            {
              "name": "application_id",
              "description": "App ID or Client ID (for OAuth and OpenID Connect authentication modes) of the application to be created.",
              "dataType": "string",
              "allowMultiple": false,
              "required": false,
              "paramType": "query"
            },
            {
              "name": "application_key",
              "description": "App Key(s) or Client Secret (for OAuth and OpenID Connect authentication modes) of the application to be created.",
              "dataType": "string",
              "allowMultiple": true,
              "required": false,
              "paramType": "query"
            },
            {
              "name": "redirect_url",
              "description": "Redirect URL for the OAuth request.",
              "dataType": "string",
              "allowMultiple": false,
              "required": false,
              "paramType": "query"
            },
            {
              "name": "first_traffic_at",
              "description": "Timestamp of the first call made by the application.",
              "dataType": "string",
              "allowMultiple": false,
              "required": false,
              "paramType": "query"
            },
            {
              "name": "first_daily_traffic_at",
              "description": "Timestamp of the first call on the last day when traffic was registered for the application ('Traffic On').",
              "dataType": "string",
              "allowMultiple": false,
              "required": false,
              "paramType": "query"
            },
            {
              "name": "additional_fields",
              "dataType": "custom",
              "paramType": "query",
              "allowMultiple": true,
              "description": "Additional fields have to be defined by name and value (i.e &name=value). You can add as many as you want. Additional fields are the custom fields declared in 'Settings >> Fields Definitions' on your API Admin Portal. Typical examples are 'url', 'country', etc. Please check your Fields Definitions to get the list of all your custom fields."
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/accounts/{account_id}/applications/{id}.xml",
      "responseClass": "application",
      "operations": [
        {
          "httpMethod": "GET",
          "summary": "Application Read",
          "description": "Returns the application by id.",
          "group": "application",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "account_id",
              "description": "ID of the account.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "account_ids"
            },
            {
              "name": "id",
              "description": "ID of the application.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "application_ids"
            }
          ]
        },
        {
          "httpMethod": "PUT",
          "summary": "Application Update",
          "description": "Updates an application. All fields of the application object can be updated except the id and the app_id (when using OAuth or app_id/app_key authentication pattern).",
          "group": "application",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "account_id",
              "description": "ID of the account.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "account_ids"
            },
            {
              "name": "id",
              "description": "ID of the application.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "application_ids"
            },
            {
              "name": "name",
              "description": "Name of the application.",
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "description",
              "description": "Description of the application.",
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "redirect_url",
              "description": "Redirect URL for the OAuth request.",
              "dataType": "string",
              "allowMultiple": false,
              "required": false,
              "paramType": "query"
            },
            {
              "name": "first_traffic_at",
              "description": "Timestamp of the first call made by the application.",
              "dataType": "string",
              "allowMultiple": false,
              "required": false,
              "paramType": "query"
            },
            {
              "name": "first_daily_traffic_at",
              "description": "Timestamp of the first call on the last day when traffic was registered for the application ('Traffic On').",
              "dataType": "string",
              "allowMultiple": false,
              "required": false,
              "paramType": "query"
            },
            {
              "name": "additional_fields",
              "dataType": "custom",
              "paramType": "query",
              "allowMultiple": true,
              "description": "Additional fields have to be defined by name and value (i.e &name=value). You can add as many as you want. Additional fields are the custom fields declared in 'Settings >> Fields Definitions' on your API Admin Portal. Typical examples are 'url', 'country', etc. Please check your Fields Definitions to get the list of all your custom fields."
            }
          ]
        },
        {
          "httpMethod": "DELETE",
          "summary": "Application Delete",
          "description": "Deletes the application.",
          "group": "application",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "account_id",
              "description": "ID of the account.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "account_ids"
            },
            {
              "name": "id",
              "description": "ID of the application.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "application_ids"
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/accounts/{account_id}/applications/{id}/change_plan.xml",
      "responseClass": "application",
      "operations": [
        {
          "httpMethod": "PUT",
          "summary": "Application Change Plan",
          "description": "Changes the application plan of an application.",
          "group": "application",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "account_id",
              "description": "ID of the account.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "account_ids"
            },
            {
              "name": "id",
              "description": "ID of the application.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "application_ids"
            },
            {
              "name": "plan_id",
              "description": "ID of the new application plan.",
              "dataType": "int",
              "paramType": "query",
              "required": true,
              "threescale_name": "application_plan_ids"
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/accounts/{account_id}/applications/{id}/customize_plan.xml",
      "operations": [
        {
          "httpMethod": "PUT",
          "summary": "Application Create Plan Customization",
          "description": "Creates a customized application plan for the application.",
          "group": "application",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "account_id",
              "description": "ID of the account.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "account_ids"
            },
            {
              "name": "id",
              "description": "ID of the application.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "application_ids"
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/accounts/{account_id}/applications/{id}/decustomize_plan.xml",
      "responseClass": "application",
      "description": "Decustomizes the plan of an application.",
      "operations": [
        {
          "httpMethod": "PUT",
          "summary": "Application Delete Plan Customization",
          "description": "Deletes the customized application plan of the application. After removing the customization the application will be constrained by the original application plan.",
          "group": "application",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "account_id",
              "description": "ID of the account.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "account_ids"
            },
            {
              "name": "id",
              "description": "ID of the application.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "application_ids"
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/accounts/{account_id}/applications/{id}/accept.xml",
      "responseClass": "application",
      "operations": [
        {
          "httpMethod": "PUT",
          "summary": "Application Accept",
          "description": "Accepts an application (changes the state to live). Once the state is live the application can be used on API requests.",
          "group": "application",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "account_id",
              "description": "ID of the account.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "account_ids"
            },
            {
              "name": "id",
              "description": "ID of the application.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "application_ids"
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/accounts/{account_id}/applications/{id}/suspend.xml",
      "responseClass": "application",
      "operations": [
        {
          "httpMethod": "PUT",
          "summary": "Application Suspend",
          "description": "Suspends an application (changes the state to suspended). Suspending an application will stop the application from authorizing API requests.",
          "group": "application",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "account_id",
              "description": "ID of the account.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "account_ids"
            },
            {
              "name": "id",
              "description": "ID of the application.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "application_ids"
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/accounts/{account_id}/applications/{id}/resume.xml",
      "responseClass": "application",
      "operations": [
        {
          "httpMethod": "PUT",
          "summary": "Application Resume",
          "description": "Resume a suspended application. Once a suspended application is resumed it will be authorized on API requests.",
          "group": "application",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "account_id",
              "description": "ID of the account.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "account_ids"
            },
            {
              "name": "id",
              "description": "ID of the application.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "application_ids"
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/accounts/{account_id}/users.xml",
      "responseClass": "List[users]",
      "operations": [
        {
          "httpMethod": "GET",
          "summary": "User List",
          "description": "Returns the list of users of an account. The list can be filtered by the state or role of the users.",
          "group": "user",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "account_id",
              "description": "ID of the account.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "account_ids"
            },
            {
              "name": "state",
              "description": "Filter users by State.",
              "dataType": "string",
              "paramType": "query",
              "required": false,
              "defaultValue": "",
              "allowableValues": {
                "values": [
                  "pending",
                  "suspended",
                  "active"
                ],
                "valueType": "LIST"
              }
            },
            {
              "name": "role",
              "description": "Filter users by Role.",
              "dataType": "string",
              "paramType": "query",
              "required": false,
              "defaultValue": "",
              "allowableValues": {
                "values": [
                  "member",
                  "admin"
                ],
                "valueType": "LIST"
              }
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/accounts/{account_id}/users.xml",
      "responseClass": "user",
      "operations": [
        {
          "httpMethod": "POST",
          "summary": "User Create",
          "description": "Creates a new user of the account (account_id). Do not forget to activate the user otherwise he/she will be unable to sign-in. After creation the default state is pending and the default role is member. The user object can be extended using Fields Definitions in the Admin Portal. You can add/remove fields, for instance token (string), age (int), third name (string optional), etc. ",
          "group": "user",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "account_id",
              "description": "ID of the account.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "account_ids"
            },
            {
              "name": "username",
              "description": "Username of the user.",
              "dataType": "string",
              "allowMultiple": false,
              "required": true,
              "paramType": "query"
            },
            {
              "name": "email",
              "description": "Email of the user.",
              "dataType": "string",
              "allowMultiple": false,
              "required": true,
              "paramType": "query"
            },
            {
              "name": "password",
              "description": "Password of the user.",
              "dataType": "string",
              "allowMultiple": false,
              "required": true,
              "paramType": "query"
            },
            {
              "name": "additional_fields",
              "dataType": "custom",
              "paramType": "query",
              "allowMultiple": true,
              "description": "Additional fields have to be defined by name and value (i.e &name=value). You can add as many as you want. Additional fields are the custom fields declared in 'Settings >> Fields Definitions' on your API Admin Portal. Typical examples are 'url', 'country', etc. Please check your Fields Definitions to get the list of all your custom fields."
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/accounts/{account_id}/users/{id}.xml",
      "responseClass": "user",
      "operations": [
        {
          "httpMethod": "GET",
          "summary": "User Read",
          "description": "Returns the user of an account.",
          "group": "user",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "account_id",
              "description": "ID of the account.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "account_ids"
            },
            {
              "name": "id",
              "description": "ID of the user.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "user_ids"
            }
          ]
        },
        {
          "httpMethod": "PUT",
          "summary": "User Update",
          "description": "Updates the user of an account. You can update any field, not only those in the form of the ActiveDocs but all the fields that belong to the User object. Remember that you can define custom fields on your Admin Portal.",
          "group": "user",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "account_id",
              "description": "ID of the account.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "account_ids"
            },
            {
              "name": "id",
              "description": "ID of the user.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "user_ids"
            },
            {
              "name": "username",
              "description": "Username of the user.",
              "dataType": "string",
              "allowMultiple": false,
              "required": false,
              "paramType": "query"
            },
            {
              "name": "email",
              "description": "Email of the user.",
              "dataType": "string",
              "allowMultiple": false,
              "required": false,
              "paramType": "query"
            },
            {
              "name": "password",
              "description": "Password of the user.",
              "dataType": "string",
              "allowMultiple": false,
              "required": false,
              "paramType": "query"
            },
            {
              "name": "additional_fields",
              "dataType": "custom",
              "paramType": "query",
              "allowMultiple": true,
              "description": "Additional fields have to be defined by name and value (i.e &name=value). You can add as many as you want. Additional fields are the custom fields declared in 'Settings >> Fields Definitions' on your API Admin Portal. Typical examples are 'url', 'country', etc. Please check your Fields Definitions to get the list of all your custom fields."
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/accounts/{account_id}/users/{id}.xml",
      "responseClass": "user",
      "operations": [
        {
          "httpMethod": "DELETE",
          "summary": "User Delete",
          "description": "Deletes a user of an account. The last user can't be deleted",
          "group": "user",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "account_id",
              "description": "ID of the account.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "account_ids"
            },
            {
              "name": "id",
              "description": "ID of the user.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "user_ids"
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/accounts/{account_id}/users/{id}/member.xml",
      "responseClass": "user",
      "operations": [
        {
          "httpMethod": "PUT",
          "summary": "User Change Role to Member",
          "description": "Changes the role of the user to member.",
          "group": "user",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "account_id",
              "description": "ID of the account.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "account_ids"
            },
            {
              "name": "id",
              "description": "ID of the user.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "user_ids"
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/accounts/{account_id}/users/{id}/admin.xml",
      "responseClass": "user",
      "operations": [
        {
          "httpMethod": "PUT",
          "summary": "User change Role to Admin",
          "description": "Changes the role of the user to admin.",
          "group": "user",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "account_id",
              "description": "ID of the account.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "account_ids"
            },
            {
              "name": "id",
              "description": "ID of the user.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "user_ids"
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/accounts/{account_id}/users/{id}/suspend.xml",
      "responseClass": "user",
      "operations": [
        {
          "httpMethod": "PUT",
          "summary": "User Suspend",
          "description": "Changes the state of the user to suspended. A suspended user cannot sign-in.",
          "group": "user",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "account_id",
              "description": "ID of the account.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "account_ids"
            },
            {
              "name": "id",
              "description": "ID of the user.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "user_ids"
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/accounts/{account_id}/users/{id}/unsuspend.xml",
      "responseClass": "user",
      "operations": [
        {
          "httpMethod": "PUT",
          "summary": "User Unsuspend",
          "description": "Change the state of the user back to active.",
          "group": "user",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "account_id",
              "description": "ID of the account.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "account_ids"
            },
            {
              "name": "id",
              "description": "ID of the user.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "user_ids"
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/accounts/{account_id}/users/{id}/activate.xml",
      "responseClass": "user",
      "operations": [
        {
          "httpMethod": "PUT",
          "summary": "User Activate",
          "description": "Activate the user of an account. A user is created in the pending state and needs to be activated before he/she is able to sign-in.",
          "group": "user",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "account_id",
              "description": "ID of the account.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "account_ids"
            },
            {
              "name": "id",
              "description": "ID of the user.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "user_ids"
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/accounts/{id}/credit_card.xml",
      "operations": [
        {
          "httpMethod": "PUT",
          "summary": "Account Set Credit Card",
          "description": "Associates credit card tokens and billing address to an account. This operation is only required if you use your own credit card capture method. These tokens are the ones required by Authorize.net, ogone, braintree, payment express and merchant e solutions",
          "group": "account",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "id",
              "description": "ID of the account.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "account_ids"
            },
            {
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "name": "credit_card_token",
              "description": "Token used by the payment gateway to identify the buyer, customer profile ID (Authorize.net), customer ID (Braintree and Stripe), customer alias (Ogone-Ingenico). Some payment gateways may store more than one card under the same buyer reference and/or require an additional identifier for recurring payment. If you are using Braintree, there is no need for additional identifier -- the first credit card available will always be charged. For Authorize.net, see `credit_card_authorize_net_payment_profile_token`."
            },
            {
              "dataType": "string",
              "required": false,
              "paramType": "query",
              "name": "credit_card_authorize_net_payment_profile_token",
              "description": "Additional reference provided by the payment gateway to identify a specific card under the same buyer reference. For Authorize.net, you MUST fill with the 'Payment profile token'"
            },
            {
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "name": "credit_card_expiration_year",
              "description": "Year of expiration of credit card. Two digit number"
            },
            {
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "name": "credit_card_expiration_month",
              "description": "Month of expiration of credit card. Two digit number"
            },
            {
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "name": "billing_address_name",
              "description": "Name of the person/company to bill"
            },
            {
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "name": "billing_address_address",
              "description": "Address associated to the credit card"
            },
            {
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "name": "billing_address_city",
              "description": "Billing address city"
            },
            {
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "name": "billing_address_country",
              "description": "Billing address country"
            },
            {
              "dataType": "string",
              "paramType": "query",
              "name": "billing_address_state",
              "description": "Billing address state",
              "required": false
            },
            {
              "dataType": "string",
              "paramType": "query",
              "name": "billing_address_phone",
              "description": "Billing address phone",
              "required": false
            },
            {
              "dataType": "string",
              "paramType": "query",
              "name": "billing_address_zip",
              "description": "Billing address ZIP Code",
              "required": false
            },
            {
              "dataType": "string",
              "paramType": "query",
              "name": "credit_card_partial_number",
              "description": "Last four digits on the credit card"
            }
          ]
        },
        {
          "httpMethod": "DELETE",
          "summary": "Account Delete Credit Card",
          "description": "Removes all credit card info of an account.",
          "group": "account",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "id",
              "description": "ID of the account.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "account_ids"
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/users/{id}/permissions.xml",
      "operations": [
        {
          "httpMethod": "GET",
          "summary": "User Permissions Read",
          "description": "Shows the permissions of the user of the provider account.",
          "group": "user_provider_account",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "id",
              "description": "ID of the user.",
              "dataType": "int",
              "allowMultiple": false,
              "required": true,
              "paramType": "path",
              "threescale_name": "admin_ids"
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/users/{id}/permissions.xml",
      "operations": [
        {
          "httpMethod": "PUT",
          "summary": "User Permissions Update",
          "description": "Updates the permissions of member user of the provider account.",
          "group": "user_provider_account",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "id",
              "description": "ID of the user.",
              "dataType": "int",
              "allowMultiple": false,
              "required": true,
              "paramType": "path",
              "threescale_name": "admin_ids"
            },
            {
              "name": "allowed_service_ids",
              "defaultName": "allowed_service_ids[]",
              "description": "IDs of the services that need to be enabled, URL-encoded array. To disable all services, set the value to '[]'. To enable all services, add parameter 'allowed_service_ids[]' with no value to the 'curl' command (can't be done in ActiveDocs)",
              "dataType": "custom",
              "allowMultiple": true,
              "required": false,
              "paramType": "query"
            },
            {
              "name": "allowed_sections",
              "defaultName": "allowed_sections[]",
              "description": "The list of sections in the admin portal that the user can access, URL-encoded array. Possible values: 'portal' (Developer Portal), 'finance' (Billing), 'settings', 'partners' (Accounts -- Applications), 'monitoring' (Analytics), 'plans' (Integration & Application Plans), 'policy_registry'. To disable all sections, set the value to '[]'.",
              "dataType": "custom",
              "allowMultiple": true,
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/accounts/{account_id}/messages.xml",
      "operations": [
        {
          "httpMethod": "POST",
          "summary": "Account Message",
          "description": "Sends a message to the account.",
          "group": "account",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "account_id",
              "description": "ID of the account.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "account_ids"
            },
            {
              "name": "body",
              "description": "Text to send",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "allowMultiple": false
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/services/{service_id}/metrics/{metric_id}/methods.xml",
      "responseClass": "List[methods]",
      "operations": [
        {
          "httpMethod": "GET",
          "summary": "Service Method List",
          "description": "List the methods of a metric that belongs to a service. Methods are metrics that are children of a parent metric.",
          "group": "metric_method",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "service_id",
              "description": "ID of the service.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "service_ids"
            },
            {
              "name": "metric_id",
              "description": "ID of the metric.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "metric_ids"
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/services/{service_id}/metrics/{metric_id}/methods.xml",
      "responseClass": "method",
      "operations": [
        {
          "httpMethod": "POST",
          "summary": "Service Method Create",
          "description": "Creates a method under a metric that belongs to a service.",
          "group": "metric_method",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "service_id",
              "description": "ID of the service.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "service_ids"
            },
            {
              "name": "metric_id",
              "description": "ID of the metric.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "metric_ids"
            },
            {
              "name": "friendly_name",
              "description": "Name of the method.",
              "dataType": "string",
              "allowMultiple": false,
              "required": true,
              "paramType": "query"
            },
            {
              "name": "system_name",
              "description": "System Name of the metric. This is the name used to report API requests with the Service Management API. If blank, a system_name will be generated for you from the friendly_name parameter",
              "dataType": "string",
              "allowMultiple": false,
              "required": false,
              "paramType": "query"
            },
            {
              "name": "unit",
              "description": "Measure unit of the method.",
              "dataType": "string",
              "allowMultiple": false,
              "required": true,
              "paramType": "query"
            },
            {
              "name": "description",
              "description": "Description of the method.",
              "dataType": "text",
              "allowMultiple": false,
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/services/{service_id}/metrics/{metric_id}/methods/{id}.xml",
      "responseClass": "method",
      "operations": [
        {
          "httpMethod": "GET",
          "summary": "Service Method Read",
          "description": "Returns the method of a metric that belongs to a service.",
          "group": "metric_method",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "service_id",
              "description": "ID of the service.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "service_ids"
            },
            {
              "name": "metric_id",
              "description": "ID of the metric.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "metric_ids"
            },
            {
              "name": "id",
              "description": "ID of the method.",
              "dataType": "int",
              "required": true,
              "paramType": "path"
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/services/{service_id}/metrics/{metric_id}/methods/{id}.xml",
      "responseClass": "method",
      "operations": [
        {
          "httpMethod": "PUT",
          "summary": "Service Method Update",
          "description": "Updates a method of a metric that belongs to a service.",
          "group": "metric_method",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "service_id",
              "description": "ID of the service.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "service_ids"
            },
            {
              "name": "metric_id",
              "description": "ID of the metric.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "metric_ids"
            },
            {
              "name": "id",
              "description": "ID of the method.",
              "dataType": "int",
              "required": true,
              "paramType": "path"
            },
            {
              "name": "friendly_name",
              "description": "Name of the method.",
              "dataType": "string",
              "allowMultiple": false,
              "required": false,
              "paramType": "query"
            },
            {
              "name": "unit",
              "description": "Measure unit of the method.",
              "dataType": "string",
              "allowMultiple": false,
              "required": false,
              "paramType": "query"
            },
            {
              "name": "description",
              "description": "Description of the method.",
              "dataType": "text",
              "allowMultiple": false,
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/services/{service_id}/metrics/{metric_id}/methods/{id}.xml",
      "operations": [
        {
          "httpMethod": "DELETE",
          "summary": "Service Method Delete",
          "description": "Deletes the method of a metric that belongs to a service.",
          "group": "metric_method",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "service_id",
              "description": "ID of the service.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "service_ids"
            },
            {
              "name": "metric_id",
              "description": "ID of the metric.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "metric_ids"
            },
            {
              "name": "id",
              "description": "ID of the method.",
              "dataType": "int",
              "required": true,
              "paramType": "path"
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/services/{service_id}/metrics.xml",
      "responseClass": "List[metric]",
      "operations": [
        {
          "httpMethod": "GET",
          "summary": "Service Metric List",
          "description": "Returns the list of metrics of a service.",
          "group": "metric",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "service_id",
              "description": "ID of the service.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "service_ids"
            }
          ]
        },
        {
          "httpMethod": "POST",
          "summary": "Service Metric Create",
          "description": "Creates a metric on a service.",
          "group": "metric",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "service_id",
              "description": "ID of the service.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "service_ids"
            },
            {
              "name": "friendly_name",
              "description": "Descriptive Name of the metric.",
              "dataType": "string",
              "allowMultiple": false,
              "required": true,
              "paramType": "query"
            },
            {
              "name": "system_name",
              "description": "System Name of the metric. This is the name used to report API requests with the Service Management API. If blank a system_name will be generated for you from the friendly_name parameter",
              "dataType": "string",
              "allowMultiple": false,
              "required": false,
              "paramType": "query"
            },
            {
              "name": "name",
              "description": "DEPRECATED: Please use system_name parameter",
              "dataType": "string",
              "allowMultiple": false,
              "required": false,
              "paramType": "query"
            },
            {
              "name": "unit",
              "description": "Measure unit of the metric.",
              "dataType": "string",
              "allowMultiple": false,
              "required": true,
              "paramType": "query"
            },
            {
              "name": "description",
              "description": "Description of the metric.",
              "dataType": "text",
              "allowMultiple": false,
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/services/{service_id}/metrics/{id}.xml",
      "responseClass": "metric",
      "operations": [
        {
          "nickname": "service_metric",
          "httpMethod": "GET",
          "summary": "Service Metric Read",
          "description": "Returns the metric of a service.",
          "group": "metric",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "service_id",
              "description": "ID of the service.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "service_ids"
            },
            {
              "name": "id",
              "description": "ID of the metric.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "metric_ids"
            }
          ]
        },
        {
          "httpMethod": "PUT",
          "summary": "Service Metric Update",
          "description": "Updates the metric of a service.",
          "group": "metric",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "service_id",
              "description": "ID of the service.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "service_ids"
            },
            {
              "name": "id",
              "description": "ID of the metric.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "metric_ids"
            },
            {
              "name": "friendly_name",
              "description": "Name of the metric.",
              "dataType": "string",
              "allowMultiple": false,
              "required": false,
              "paramType": "query"
            },
            {
              "name": "unit",
              "description": "Measure unit of the metric.",
              "dataType": "string",
              "allowMultiple": false,
              "required": false,
              "paramType": "query"
            },
            {
              "name": "description",
              "description": "Description of the metric.",
              "dataType": "text",
              "allowMultiple": false,
              "required": false,
              "paramType": "query"
            }
          ]
        },
        {
          "httpMethod": "DELETE",
          "summary": "Service Metric Delete",
          "description": "Deletes the metric of a service. When you delete a metric or a method, it will also remove all the associated limits across application plans.",
          "group": "metric",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "service_id",
              "description": "ID of the service.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "service_ids"
            },
            {
              "name": "id",
              "description": "ID of the metric.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "metric_ids"
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/objects/status.json",
      "operations": [
        {
          "httpMethod": "GET",
          "summary": "Object deletion status for objects that are deleted asynchronously",
          "description": "Returns an object status. (200/404). Useful for those objects that deleted asynchronously in order to know if the deletion has been completed(404) or not(200)",
          "group": "objects",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "name": "object_type",
              "description": "Object type has to be service, account, proxy or backend_api."
            },
            {
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "name": "object_id",
              "description": "Object ID."
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/personal/access_tokens.json",
      "responseClass": "access_token",
      "operations": [
        {
          "httpMethod": "POST",
          "summary": "Personal Access Token Create",
          "description": "Creates an access token. Make sure to copy your new personal access token now. You will not be able to see it again as it is not stored for security reasons.",
          "group": "access_token",
          "parameters": [
            {
              "name": "name",
              "description": "Name of the access token.",
              "dataType": "string",
              "required": true,
              "paramType": "query"
            },
            {
              "name": "permission",
              "description": "Permission of the access token. It must be either 'ro' (read only) or 'rw' (read and write).",
              "dataType": "string",
              "required": true,
              "paramType": "query"
            },
            {
              "name": "scopes",
              "defaultName": "scopes[]",
              "description": "Scope of the access token. URL-encoded array containing one or more of the possible values. The possible values are, for a master user [\"account_management\", \"stats\", \"policy_registry\"], and for a tenant user [\"finance\", \"account_management\", \"stats\", \"policy_registry\"]",
              "dataType": "custom",
              "allowMultiple": true,
              "required": true,
              "paramType": "query"
            },
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/personal/access_tokens.json",
      "responseClass": "List[access_token]",
      "operations": [
        {
          "httpMethod": "GET",
          "summary": "Personal Access Token List",
          "description": "Returns the list of access tokens of the user. If the parameter name is sent, it returns only those whose name contain the string of the param",
          "group": "access_token",
          "parameters": [
            {
              "name": "name",
              "description": "Part of the name of the access token.",
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/personal/access_tokens/{id}.json",
      "responseClass": "access_token",
      "operations": [
        {
          "httpMethod": "DELETE",
          "summary": "Personal Access Token Delete",
          "description": "Deletes an access token.",
          "group": "access_token",
          "parameters": [
            {
              "name": "id",
              "description": "ID or value of the access token.",
              "dataType": "integer",
              "paramType": "path",
              "required": true
            },
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/personal/access_tokens/{id}.json",
      "responseClass": "access_token",
      "operations": [
        {
          "httpMethod": "GET",
          "summary": "Personal Access Token Read",
          "description": "Shows an access token.",
          "group": "access_token",
          "parameters": [
            {
              "name": "id",
              "description": "ID or value of the access token.",
              "dataType": "integer",
              "paramType": "path",
              "required": true
            },
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/policies.json",
      "responseClass": "json",
      "operations": [
        {
          "httpMethod": "GET",
          "summary": "APIcast Policy Registry",
          "description": "Returns APIcast Policy Registry",
          "group": "apicast_policies",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/provider.xml",
      "responseClass": "account",
      "operations": [
        {
          "httpMethod": "GET",
          "summary": "Provider Account Read",
          "description": "Returns your account.",
          "group": "provider",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/provider.xml",
      "responseClass": "provider",
      "operations": [
        {
          "httpMethod": "PUT",
          "summary": "Provider Account Update",
          "description": "Updates email addresses used to deliver email notifications to customers.",
          "group": "account",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "from_email",
              "description": "New outgoing email.",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "support_email",
              "description": "New support email.",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "finance_support_email",
              "description": "New finance support email.",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "site_access_code",
              "description": "Developer Portal Access Code.",
              "dataType": "string",
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/accounts/{account_id}/service_contracts.xml",
      "responseClass": "service_contract",
      "operations": [
        {
          "httpMethod": "GET",
          "summary": "Service Subscription List",
          "description": "List all the service_contracts of an account",
          "group": "service_contract",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "account_id",
              "description": "ID of the account.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "account_ids"
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/accounts/{account_id}/service_contracts/{id}.xml",
      "responseClass": "service_contract",
      "operations": [
        {
          "httpMethod": "DELETE",
          "summary": "Service Subscription Delete",
          "description": "Unsubscribe from a service. This endpoint will delete all the applications that are under the subscribed service.",
          "group": "service_contract",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "account_id",
              "description": "ID of the account.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "account_ids"
            },
            {
              "name": "id",
              "description": "ID of the service contract.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "service_contract_ids"
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/services/{service_id}/features.xml",
      "responseClass": "List[feature]",
      "operations": [
        {
          "httpMethod": "GET",
          "summary": "Service Feature List",
          "description": "Returns the list of all features of a service.",
          "group": "service_feature",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "service_id",
              "description": "ID of the service.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "service_ids"
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/services/{service_id}/features.xml",
      "responseClass": "feature",
      "operations": [
        {
          "httpMethod": "POST",
          "summary": "Service Feature Create",
          "description": "Creates a feature on a service. Features are usually associated to a particular type of plan; you can associate the plan on the scope parameter. Note that account plans are not scoped by service.",
          "group": "service_feature",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "service_id",
              "description": "ID of the service.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "service_ids"
            },
            {
              "name": "name",
              "description": "Name of the feature.",
              "dataType": "string",
              "required": true,
              "paramType": "query"
            },
            {
              "name": "system_name",
              "description": "System Name of the object to be created. System names cannot be modified after creation, they are used as the key to identify the objects.",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "description",
              "description": "Description of the feature.",
              "dataType": "text",
              "allowMultiple": false,
              "required": false,
              "paramType": "query"
            },
            {
              "name": "scope",
              "description": "Type of plan that the feature will be available for.",
              "dataType": "string",
              "allowMultiple": true,
              "required": false,
              "paramType": "query",
              "defaultValue": "ApplicationPlan",
              "allowableValues": {
                "values": [
                  "ApplicationPlan",
                  "ServicePlan"
                ],
                "valueType": "LIST"
              }
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/services/{service_id}/features/{id}.xml",
      "responseClass": "feature",
      "operations": [
        {
          "httpMethod": "GET",
          "summary": "Service Feature Read",
          "description": "Returns a feature of a service.",
          "group": "service_feature",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "service_id",
              "description": "ID of the service.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "service_ids"
            },
            {
              "name": "id",
              "description": "ID of the feature.",
              "dataType": "int",
              "required": true,
              "paramType": "path"
            }
          ]
        },
        {
          "httpMethod": "PUT",
          "summary": "Service Feature Update",
          "description": "Updates a feature of a service.",
          "group": "service_feature",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "service_id",
              "description": "ID of the service.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "service_ids"
            },
            {
              "name": "id",
              "description": "ID of the feature.",
              "dataType": "int",
              "required": true,
              "paramType": "path"
            },
            {
              "name": "name",
              "description": "Name of the feature.",
              "dataType": "string",
              "allowMultiple": false,
              "required": false,
              "paramType": "query"
            },
            {
              "name": "description",
              "description": "Description of the feature.",
              "dataType": "text",
              "allowMultiple": false,
              "required": false,
              "paramType": "query"
            }
          ]
        },
        {
          "httpMethod": "DELETE",
          "summary": "Service Feature Delete",
          "description": "Deletes a feature of a service.",
          "group": "service_feature",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "service_id",
              "description": "ID of the service.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "service_ids"
            },
            {
              "name": "id",
              "description": "ID of the feature.",
              "dataType": "int",
              "required": true,
              "paramType": "path"
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/service_plans/{service_plan_id}/features.xml",
      "responseClass": "List[feature]",
      "description": "Returns a list of features of an service plan.",
      "operations": [
        {
          "httpMethod": "GET",
          "summary": "Service Plan Feature List",
          "description": "Returns the list of features of a service plan.",
          "group": "service_plan_feature",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "service_plan_id",
              "description": "ID of the service plan.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "service_plan_ids"
            }
          ]
        },
        {
          "httpMethod": "POST",
          "summary": "Service Plan Feature Add",
          "description": "Associates an existing feature to a service plan.",
          "group": "service_plan_feature",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "service_plan_id",
              "description": "ID of the service plan.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "service_plan_ids"
            },
            {
              "name": "feature_id",
              "description": "ID of the feature.",
              "dataType": "int",
              "required": true,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/service_plans/{service_plan_id}/features/{id}.xml",
      "operations": [
        {
          "httpMethod": "DELETE",
          "summary": "Service Plan Features Delete",
          "description": "Removes the association of a feature to a service plan.",
          "group": "service_plan_feature",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "service_plan_id",
              "description": "ID of the service plan.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "service_plan_ids"
            },
            {
              "name": "id",
              "description": "ID of the feature.",
              "dataType": "int",
              "required": true,
              "paramType": "path"
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/service_plans.xml",
      "responseClass": "List[service_plan]",
      "description": "Returns a list of all your service plans.",
      "operations": [
        {
          "httpMethod": "GET",
          "summary": "Service Plan List (all services)",
          "description": "Returns a list of all service plans for all services. Note that service plans are scoped by service.",
          "group": "service_plan",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/services/{id}/service_plans.xml",
      "responseClass": "List[service_plan]",
      "operations": [
        {
          "httpMethod": "GET",
          "summary": "Service Plan List",
          "description": "Returns a list of all service plans for a service.",
          "group": "service_plan",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "id",
              "description": "ID of the service.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "service_ids"
            }
          ]
        },
        {
          "httpMethod": "POST",
          "summary": "Service Plan Create",
          "description": "Creates a new service plan in a service.",
          "group": "service_plan",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "id",
              "description": "ID of the service.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "service_ids"
            },
            {
              "name": "name",
              "description": "Name of the service plan.",
              "dataType": "string",
              "required": true,
              "paramType": "query"
            },
            {
              "name": "approval_required",
              "description": "Set the 'Service subscriptions require approval?' to 'true' or 'false'",
              "dataType": "boolean",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "system_name",
              "description": "System Name of the object to be created. System names cannot be modified after creation, they are used as the key to identify the objects.",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "state_event",
              "description": "State event of the service plan. It can be 'publish' or 'hide'",
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/services/{service_id}/service_plans/{id}.xml",
      "responseClass": "service_plan",
      "operations": [
        {
          "httpMethod": "GET",
          "summary": "Service Plan Read",
          "description": "Returns a service plan by ID.",
          "group": "service_plan",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "service_id",
              "description": "ID of the service.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "service_ids"
            },
            {
              "name": "id",
              "description": "ID of the service plan.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "service_plan_ids"
            }
          ]
        },
        {
          "httpMethod": "PUT",
          "summary": "Service Plan Update",
          "description": "Updates a service plan by ID.",
          "group": "service_plan",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "service_id",
              "description": "ID of the service.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "service_ids"
            },
            {
              "name": "id",
              "description": "ID of the service plan.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "service_plan_ids"
            },
            {
              "name": "name",
              "description": "Name of the service plan.",
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "approval_required",
              "description": "Set the 'Service subscriptions require approval?' to 'true' or 'false'",
              "dataType": "boolean",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "state_event",
              "description": "State event of the service plan. It can be 'publish' or 'hide'",
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        },
        {
          "httpMethod": "DELETE",
          "summary": "Service Plan Delete",
          "description": "Deletes a service plan by ID.",
          "group": "service_plan",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "service_id",
              "description": "ID of the service.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "service_ids"
            },
            {
              "name": "id",
              "description": "ID of the service plan.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "service_plan_ids"
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/services/{service_id}/service_plans/{id}/default.xml",
      "responseClass": "service_plan",
      "operations": [
        {
          "httpMethod": "PUT",
          "summary": "Service Plan Set to Default",
          "description": "Sets the service plan as default. The default service plan is used when no explicit service plan is used.",
          "group": "service_plan",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "service_id",
              "description": "ID of the service.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "service_ids"
            },
            {
              "name": "id",
              "description": "ID of the service plan.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "service_plan_ids"
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/services/{service_id}/backend_usages.json",
      "responseClass": "List[backend_api_config]",
      "operations": [
        {
          "httpMethod": "GET",
          "summary": "Backend Usage List",
          "description": "Returns the list of all Backend being used by a Service (Product) with the corresponding path.",
          "group": "backend_api_config",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "service_id",
              "description": "ID of the service.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "service_ids"
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/services/{service_id}/backend_usages.json",
      "responseClass": "backend_api_config",
      "operations": [
        {
          "httpMethod": "POST",
          "summary": "Backend Usage Create",
          "description": "Adds a Backend to a Service (Product).",
          "group": "backend_api_config",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "service_id",
              "description": "ID of the service.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "service_ids"
            },
            {
              "name": "backend_api_id",
              "description": "Backend to be added to the Service (Product).",
              "dataType": "string",
              "required": true,
              "paramType": "query"
            },
            {
              "name": "path",
              "description": "Path of the Backend for this product.",
              "dataType": "int",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/services/{service_id}/backend_usages/{id}.json",
      "operations": [
        {
          "httpMethod": "DELETE",
          "summary": "Backend Usage Delete",
          "description": "Removes the backend from a Service (Product).",
          "group": "backend_api_config",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "service_id",
              "description": "ID of the service.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "service_ids"
            },
            {
              "name": "id",
              "description": "ID of the Backend Usage.",
              "dataType": "int",
              "required": true,
              "paramType": "path"
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/services/{service_id}/backend_usages/{id}.json",
      "responseClass": "backend_api_config",
      "operations": [
        {
          "httpMethod": "PUT",
          "summary": "Backend Usage Update",
          "description": "Updates the path of a Backend within the scope of the Service (Product).",
          "group": "backend_api_config",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "service_id",
              "description": "ID of the service.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "service_ids"
            },
            {
              "name": "id",
              "description": "ID of the Backend Usage.",
              "dataType": "int",
              "required": true,
              "paramType": "path"
            },
            {
              "name": "path",
              "description": "Path of the Backend for this product.",
              "dataType": "int",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/services/{service_id}/backend_usages/{id}.json",
      "responseClass": "backend_api_config",
      "operations": [
        {
          "httpMethod": "GET",
          "summary": "Backend Usage Read",
          "description": "Show the usage of a Backend within the scope of the Service (Product).",
          "group": "backend_api_config",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "service_id",
              "description": "ID of the service.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "service_ids"
            },
            {
              "name": "id",
              "description": "ID of the Backend Usage.",
              "dataType": "int",
              "required": true,
              "paramType": "path"
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/services/{service_id}/proxy/mapping_rules.xml",
      "responseClass": "List[mapping_rule]",
      "operations": [
        {
          "httpMethod": "GET",
          "summary": "Proxy Mapping Rules List",
          "description": "Returns the Mapping Rules of a Proxy.",
          "group": "mapping_rule",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "service_id",
              "description": "ID of the service.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "service_ids"
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/services/{service_id}/proxy/mapping_rules/{id}.xml",
      "responseClass": "mapping_rule",
      "operations": [
        {
          "httpMethod": "GET",
          "summary": "Proxy Mapping Rules Show",
          "description": "Returns the Mapping Rule.",
          "group": "mapping_rule",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "service_id",
              "description": "ID of the service.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "service_ids"
            },
            {
              "name": "id",
              "description": "Mapping Rule ID.",
              "dataType": "int",
              "paramType": "path",
              "required": true
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/services/{service_id}/proxy/mapping_rules.xml",
      "responseClass": "mapping_rule",
      "operations": [
        {
          "httpMethod": "POST",
          "summary": "Proxy Mapping Rule Create",
          "description": "Creates a Proxy Mapping Rule. The proxy object needs to be updated after a mapping rule is added to apply the change to the APIcast configuration. If adding multiple mapping rules then only one call to the Proxy Update endpoint is necessary after all mapping rules have been created.",
          "group": "mapping_rule",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "service_id",
              "description": "ID of the service.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "service_ids"
            },
            {
              "name": "http_method",
              "description": "HTTP method.",
              "dataType": "string",
              "paramType": "query",
              "required": true
            },
            {
              "name": "pattern",
              "description": "Mapping Rule pattern.",
              "dataType": "string",
              "paramType": "query",
              "required": true
            },
            {
              "name": "delta",
              "description": "Increase the metric by this delta.",
              "dataType": "int",
              "paramType": "query",
              "required": true
            },
            {
              "name": "metric_id",
              "description": "Metric ID.",
              "dataType": "int",
              "paramType": "query",
              "required": true,
              "threescale_name": "metric_ids"
            },
            {
              "name": "position",
              "description": "Mapping Rule position",
              "dataType": "int",
              "paramType": "query"
            },
            {
              "name": "last",
              "description": "Last matched Mapping Rule to process",
              "dataType": "bool",
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/services/{service_id}/proxy/mapping_rules/{id}.xml",
      "responseClass": "mapping_rule",
      "operations": [
        {
          "httpMethod": "PATCH",
          "summary": "Proxy Mapping Rule Update",
          "description": "Updates a Proxy Mapping Rule. The proxy object needs to be updated after a mapping rule is updated to apply the change to the APIcast configuration. If updating multiple mapping rules then only one call to the Proxy Update endpoint is necessary after all mapping rules have been updated.",
          "group": "mapping_rule",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "service_id",
              "description": "ID of the service.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "service_ids"
            },
            {
              "name": "id",
              "description": "Mapping Rule ID.",
              "dataType": "int",
              "paramType": "path",
              "required": true
            },
            {
              "name": "http_method",
              "description": "HTTP method.",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "pattern",
              "description": "Mapping Rule pattern.",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "delta",
              "description": "Increase the metric by this delta.",
              "dataType": "int",
              "paramType": "query"
            },
            {
              "name": "metric_id",
              "description": "Metric ID.",
              "dataType": "int",
              "paramType": "query",
              "threescale_name": "metric_ids"
            },
            {
              "name": "position",
              "description": "Mapping Rule position",
              "dataType": "int",
              "paramType": "query"
            },
            {
              "name": "last",
              "description": "Last matched Mapping Rule to process",
              "dataType": "bool",
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/services/{service_id}/proxy/mapping_rules/{id}.xml",
      "responseClass": "mapping_rule",
      "operations": [
        {
          "httpMethod": "DELETE",
          "summary": "Proxy Mapping Rule Delete",
          "description": "Deletes a Proxy Mapping Rule. The proxy object needs to be updated after a mapping rule is deleted to apply the change to the APIcast configuration. If deleting multiple mapping rules then only one call to the Proxy Update endpoint is necessary after all desired mapping rules have been deleted.",
          "group": "mapping_rule",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "service_id",
              "description": "ID of the service.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "service_ids"
            },
            {
              "name": "id",
              "description": "Mapping Rule ID.",
              "dataType": "int",
              "paramType": "path",
              "required": true
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/services/{service_id}/proxy.xml",
      "responseClass": "proxy",
      "operations": [
        {
          "httpMethod": "GET",
          "summary": "Proxy Read",
          "description": "Returns the Proxy of a Service.",
          "group": "proxy",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "service_id",
              "description": "ID of the service.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "service_ids"
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/services/{service_id}/proxy.xml",
      "responseClass": "proxy",
      "operations": [
        {
          "httpMethod": "PATCH",
          "summary": "Proxy Update",
          "description": "Changes the Proxy settings. This will create a new APIcast configuration version for the Staging environment with the updated settings.",
          "group": "proxy",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "service_id",
              "description": "ID of the service.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "service_ids"
            },
            {
              "name": "endpoint",
              "description": "Public Base URL for production environment.",
              "dataType": "string",
              "paramType": "query",
              "required": false
            },
            {
              "name": "api_backend",
              "description": "Private Base URL. Caution! Do not use it if the account has API as a Product enabled. It may cause API backend usages to be removed from the Product.",
              "dataType": "string",
              "paramType": "query",
              "required": false
            },
            {
              "name": "credentials_location",
              "description": "Credentials Location. Either headers, query or authorization for the Basic Authorization.",
              "dataType": "string",
              "paramType": "query",
              "required": false
            },
            {
              "name": "auth_app_key",
              "description": "Parameter/Header where App Key is expected.",
              "dataType": "string",
              "paramType": "query",
              "required": false
            },
            {
              "name": "auth_app_id",
              "description": "Parameter/Header where App ID is expected.",
              "dataType": "string",
              "paramType": "query",
              "required": false
            },
            {
              "name": "auth_user_key",
              "description": "Parameter/Header where User Key is expected.",
              "dataType": "string",
              "paramType": "query",
              "required": false
            },
            {
              "name": "error_auth_failed",
              "description": "Error message on failed authentication.",
              "dataType": "string",
              "paramType": "query",
              "required": false
            },
            {
              "name": "error_status_auth_failed",
              "description": "Status code on failed authentication.",
              "dataType": "int",
              "paramType": "query",
              "required": false
            },
            {
              "name": "error_headers_auth_failed",
              "description": "Content-Type header on failed authentication.",
              "dataType": "string",
              "paramType": "query",
              "required": false
            },
            {
              "name": "error_auth_missing",
              "description": "Error message on missing authentication.",
              "dataType": "string",
              "paramType": "query",
              "required": false
            },
            {
              "name": "error_status_auth_missing",
              "description": "Status code on missing authentication.",
              "dataType": "int",
              "paramType": "query",
              "required": false
            },
            {
              "name": "error_headers_auth_missing",
              "description": "Content-Type header on missing authentication.",
              "dataType": "string",
              "paramType": "query",
              "required": false
            },
            {
              "name": "error_no_match",
              "description": "Error message when no mapping rule is matched.",
              "dataType": "string",
              "paramType": "query",
              "required": false
            },
            {
              "name": "error_status_no_match",
              "description": "Status code when no mapping rule is matched.",
              "dataType": "int",
              "paramType": "query",
              "required": false
            },
            {
              "name": "error_headers_no_match",
              "description": "Content-Type header when no mapping rule is matched.",
              "dataType": "string",
              "paramType": "query",
              "required": false
            },
            {
              "name": "error_status_limits_exceeded",
              "description": "Status code when usage limit exceeded.",
              "dataType": "int",
              "paramType": "query",
              "required": false
            },
            {
              "name": "error_headers_limits_exceeded",
              "description": "Content-Type header when usage limit exceeded.",
              "dataType": "string",
              "paramType": "query",
              "required": false
            },
            {
              "name": "error_limits_exceeded",
              "description": "Error message on usage limit exceeded.",
              "dataType": "string",
              "paramType": "query",
              "required": false
            },
            {
              "name": "oidc_issuer_endpoint",
              "description": "Location of your OpenID Provider.",
              "dataType": "string",
              "paramType": "query",
              "required": false
            },
            {
              "name": "oidc_issuer_type",
              "description": "Type of your OpenID Provider.",
              "dataType": "string",
              "paramType": "query",
              "required": false
            },
            {
              "name": "sandbox_endpoint",
              "description": "Sandbox endpoint.",
              "dataType": "string",
              "paramType": "query",
              "required": false
            },
            {
              "name": "jwt_claim_with_client_id",
              "description": "JWT Claim With ClientId Location.",
              "dataType": "string",
              "paramType": "query",
              "required": false
            },
            {
              "name": "jwt_claim_with_client_id_type",
              "description": "JWT Claim With ClientId Type. Either `plain` or `liquid`",
              "dataType": "string",
              "paramType": "query",
              "required": false
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/services/{service_id}/proxy/deploy.xml",
      "responseClass": "proxy",
      "operations": [
        {
          "httpMethod": "POST",
          "summary": "Proxy Deploy",
          "description": "Promotes the APIcast configuration to the Staging Environment (Production Environment in case of Service Mesh).",
          "group": "proxy",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "service_id",
              "description": "ID of the service.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "service_ids"
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/services/{service_id}/proxy/configs/{environment}.json",
      "responseClass": "proxy_config",
      "operations": [
        {
          "httpMethod": "GET",
          "summary": "Proxy Configs List (Service)",
          "description": "Returns the Proxy Configs of a Service",
          "group": "proxy_config",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "service_id",
              "description": "ID of the service.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "service_ids"
            },
            {
              "name": "environment",
              "description": "Gateway environment. Must be 'sandbox' or 'production'",
              "dataType": "string",
              "required": true,
              "paramType": "path",
              "threescale_name": "environment"
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/services/{service_id}/proxy/configs/{environment}/latest.json",
      "responseClass": "proxy_config",
      "operations": [
        {
          "httpMethod": "GET",
          "summary": "Proxy Config Show Latest",
          "description": "Returns the latest Proxy Config.",
          "group": "proxy_config",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "service_id",
              "description": "ID of the service.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "service_ids"
            },
            {
              "name": "environment",
              "description": "Gateway environment. Must be 'sandbox' or 'production'",
              "dataType": "string",
              "required": true,
              "paramType": "path",
              "threescale_name": "environment"
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/services/{service_id}/proxy/configs/{environment}/{version}.json",
      "responseClass": "proxy_config",
      "operations": [
        {
          "httpMethod": "GET",
          "summary": "Proxy Config Show",
          "description": "Returns a Proxy Config.",
          "group": "proxy_config",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "service_id",
              "description": "ID of the service.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "service_ids"
            },
            {
              "name": "environment",
              "description": "Gateway environment. Must be 'sandbox' or 'production'",
              "dataType": "string",
              "required": true,
              "paramType": "path",
              "threescale_name": "environment"
            },
            {
              "name": "version",
              "description": "Version of the Proxy config.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "proxy_config_version"
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/services/{service_id}/proxy/configs/{environment}/{version}/promote.json",
      "responseClass": "proxy_config",
      "operations": [
        {
          "httpMethod": "POST",
          "summary": "Proxy Config Promote",
          "description": "Promotes a Proxy Config from one environment to another environment.",
          "group": "proxy_config",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "service_id",
              "description": "ID of the service.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "service_ids"
            },
            {
              "name": "environment",
              "description": "Gateway environment. Must be 'sandbox' or 'production'",
              "dataType": "string",
              "required": true,
              "paramType": "path",
              "threescale_name": "environment"
            },
            {
              "name": "version",
              "description": "Version of the Proxy config.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "proxy_config_version"
            },
            {
              "name": "to",
              "description": "the name of the destination environment",
              "dataType": "string",
              "paramType": "query",
              "required": true
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/services/{service_id}/proxy/oidc_configuration.xml",
      "responseClass": "oidc_configuration",
      "operations": [
        {
          "httpMethod": "GET",
          "summary": "OIDC Configuration Show",
          "description": "Get the Proxy OIDC configuration.",
          "group": "oidc_configuration",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "service_id",
              "description": "ID of the service.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "service_ids"
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/services/{service_id}/proxy/oidc_configuration.xml",
      "responseClass": "oidc_configuration",
      "operations": [
        {
          "httpMethod": "PATCH",
          "summary": "OIDC Configuration Update",
          "description": "Changes the Proxy OIDC configuration.",
          "group": "oidc_configuration",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "service_id",
              "description": "ID of the service.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "service_ids"
            },
            {
              "name": "standard_flow_enabled",
              "description": "Enable Authorization Code Flow (Standard Flow)",
              "dataType": "boolean",
              "paramType": "query",
              "required": false
            },
            {
              "name": "implicit_flow_enabled",
              "description": "Enable Implicit Flow",
              "dataType": "boolean",
              "paramType": "query",
              "required": false
            },
            {
              "name": "service_accounts_enabled",
              "description": "Enable Service Account Flow (Standard Flow)",
              "dataType": "boolean",
              "paramType": "query",
              "required": false
            },
            {
              "name": "direct_access_grants_enabled",
              "description": "Enable Direct Access Grant Flow",
              "dataType": "boolean",
              "paramType": "query",
              "required": false
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/services/{service_id}/proxy/policies.json",
      "responseClass": "json",
      "operations": [
        {
          "httpMethod": "GET",
          "summary": "Proxy Policies Chain Show",
          "description": "Returns a Proxy Policies Chain.",
          "group": "proxy_policy",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "service_id",
              "description": "ID of the service.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "service_ids"
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/services/{service_id}/proxy/policies.json",
      "responseClass": "json",
      "operations": [
        {
          "httpMethod": "PUT",
          "summary": "Proxy Policies Chain Update",
          "description": "Updates a Proxy Policies Chain.",
          "group": "proxy_policy",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "service_id",
              "description": "ID of the service.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "service_ids"
            },
            {
              "name": "policies_config",
              "description": "Proxy policies chain",
              "dataType": "string",
              "paramType": "query",
              "required": true
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/services.xml",
      "responseClass": "List[services]",
      "operations": [
        {
          "httpMethod": "GET",
          "summary": "Service List",
          "description": "Returns the list of all services.",
          "group": "service",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "page",
              "description": "Page in the paginated list. Defaults to 1.",
              "dataType": "int",
              "paramType": "query",
              "defaultValue": "1"
            },
            {
              "name": "per_page",
              "description": "Number of results per page. Default and max is 500.",
              "dataType": "int",
              "paramType": "query",
              "defaultValue": "500"
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/services.xml",
      "responseClass": "service",
      "operations": [
        {
          "httpMethod": "POST",
          "summary": "Service Create",
          "description": "Creates a new service.",
          "group": "service",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "name",
              "description": "Name of the service to be created.",
              "dataType": "string",
              "required": true,
              "paramType": "query"
            },
            {
              "name": "description",
              "description": "Description of the service to be created.",
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "deployment_option",
              "description": "Deployment option for the gateway: 'hosted' for APIcast hosted, 'self_managed' for APIcast Self-managed, 'service_mesh_istio' for Istio service mesh option",
              "dataType": "string",
              "allowMultiple": false,
              "required": false,
              "paramType": "query"
            },
            {
              "name": "backend_version",
              "description": "Authentication mode: '1' for API key, '2' for App Id / App Key, 'oidc' for OpenID Connect",
              "dataType": "string",
              "allowMultiple": false,
              "required": false,
              "paramType": "query"
            },
            {
              "name": "system_name",
              "description": "System Name of the object to be created. System names cannot be modified after creation, they are used as the key to identify the objects.",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": " ",
              "dataType": "custom",
              "paramType": "query",
              "allowMultiple": true,
              "description": "Extra parameters"
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/services/{id}.xml",
      "responseClass": "service",
      "operations": [
        {
          "httpMethod": "GET",
          "summary": "Service Read",
          "description": "Returns the service by id.",
          "group": "service",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "id",
              "description": "ID of the service.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "service_ids"
            }
          ]
        },
        {
          "httpMethod": "PUT",
          "summary": "Service Update",
          "description": "Update the service.",
          "group": "service",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "id",
              "description": "ID of the service.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "service_ids"
            },
            {
              "name": "name",
              "description": "New name for the service.",
              "dataType": "string",
              "allowMultiple": false,
              "required": false,
              "paramType": "query"
            },
            {
              "name": "description",
              "description": "New description for the service.",
              "dataType": "string",
              "allowMultiple": false,
              "required": false,
              "paramType": "query"
            },
            {
              "name": "support_email",
              "description": "New support email.",
              "dataType": "string",
              "allowMultiple": false,
              "required": false,
              "paramType": "query"
            },
            {
              "name": "deployment_option",
              "description": "Deployment option for the gateway: 'hosted' for APIcast hosted, 'self_managed' for APIcast Self-managed, 'service_mesh_istio' for Istio service mesh option",
              "dataType": "string",
              "allowMultiple": false,
              "required": false,
              "paramType": "query"
            },
            {
              "name": "backend_version",
              "description": "Authentication mode: '1' for API key, '2' for App Id / App Key, 'oidc' for OpenID Connect",
              "dataType": "string",
              "allowMultiple": false,
              "required": false,
              "paramType": "query"
            },
            {
              "name": " ",
              "dataType": "custom",
              "paramType": "query",
              "allowMultiple": true,
              "description": "Extra parameters"
            }
          ]
        },
        {
          "httpMethod": "DELETE",
          "summary": "Service Delete",
          "description": "Delete the service. Deleting a service removes all applications and service subscriptions.",
          "group": "service",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "id",
              "description": "ID of the service.",
              "dataType": "int",
              "required": true,
              "paramType": "path",
              "threescale_name": "service_ids"
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/settings.json",
      "responseClass": "settings",
      "operations": [
        {
          "nickname": "service_metric",
          "httpMethod": "GET",
          "summary": "Settings Read",
          "description": "Returns the general settings of an account.",
          "group": "settings",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/settings.json",
      "responseClass": "settings",
      "operations": [
        {
          "httpMethod": "PUT",
          "summary": "Settings Update",
          "description": "Updates general settings.",
          "group": "settings",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "useraccountarea_enabled",
              "description": "Allow the user to edit their submitted details, change passwords, etc",
              "dataType": "boolean",
              "paramType": "query"
            },
            {
              "name": "hide_service",
              "description": "Used a default service plan",
              "dataType": "boolean",
              "paramType": "query"
            },
            {
              "name": "signups_enabled",
              "description": "Developers are allowed sign up themselves.",
              "dataType": "boolean",
              "paramType": "query"
            },
            {
              "name": "account_approval_required",
              "description": "Approval is required by you before developer accounts are activated.",
              "dataType": "boolean",
              "paramType": "query"
            },
            {
              "name": "strong_passwords_enabled",
              "description": "Require strong passwords from your users: Password must be at least 8 characters long, and contain both upper and lowercase letters, a digit and one special character of -+=><_$#.:;!?@&*()~][}{|. Existing passwords will still work. ",
              "dataType": "boolean",
              "paramType": "query"
            },
            {
              "name": "public_search",
              "description": "Enables public search on Developer Portal",
              "dataType": "boolean",
              "paramType": "query"
            },
            {
              "name": "account_plans_ui_visible",
              "description": "Enables visibility of Account Plans",
              "dataType": "boolean",
              "paramType": "query"
            },
            {
              "name": "change_account_plan_permission",
              "description": "Account Plans changing",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "service_plans_ui_visible",
              "description": "Enables visibility of Service Plans",
              "dataType": "boolean",
              "paramType": "query"
            },
            {
              "name": "change_service_plan_permission",
              "description": "Service Plans changing",
              "dataType": "string",
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/signup.xml",
      "responseClass": "account",
      "operations": [
        {
          "httpMethod": "POST",
          "summary": "Signup Express (Account Create)",
          "description": "This request allows you to reproduce a developer sign-up in a single API call. It will create an Account, an Admin User for the account, and optionally an Application with its keys. If the plan_id is not passed, the default plan will be used instead. You can add additional custom parameters in Fields Definition on your Admin Portal.",
          "group": "signup",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "org_name",
              "description": "Organization Name of the developer account.",
              "dataType": "string",
              "allowMultiple": false,
              "required": true,
              "paramType": "query"
            },
            {
              "name": "username",
              "description": "Username of the admin user (on the new developer account).",
              "dataType": "string",
              "allowMultiple": false,
              "required": true,
              "paramType": "query"
            },
            {
              "name": "email",
              "description": "Email of the admin user.",
              "dataType": "string",
              "allowMultiple": false,
              "required": true,
              "paramType": "query"
            },
            {
              "name": "password",
              "description": "Password of the admin user.",
              "dataType": "string",
              "allowMultiple": false,
              "required": true,
              "paramType": "query"
            },
            {
              "name": "account_plan_id",
              "description": "ID of the account plan (if not assigned default will be used instead).",
              "dataType": "int",
              "required": false,
              "paramType": "query",
              "threescale_name": "account_plan_ids"
            },
            {
              "name": "service_plan_id",
              "description": "ID of the service plan (if not assigned default will be used instead).",
              "dataType": "int",
              "required": false,
              "paramType": "query",
              "threescale_name": "service_plan_ids"
            },
            {
              "name": "application_plan_id",
              "description": "ID of the application plan (if not assigned default will be used instead).",
              "dataType": "int",
              "required": false,
              "paramType": "query",
              "threescale_name": "application_plan_ids"
            },
            {
              "name": "additional_fields",
              "dataType": "custom",
              "paramType": "query",
              "allowMultiple": true,
              "description": "Additional fields have to be defined by name and value (i.e &name=value). You can add as many as you want. Additional fields are the custom fields declared in 'Settings >> Fields Definitions' on your API Admin Portal. Typical examples are 'url', 'country', etc. Please check your Fields Definitions to get the list of all your custom fields."
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/users.xml",
      "responseClass": "List[users]",
      "operations": [
        {
          "httpMethod": "GET",
          "summary": "User List (provider account)",
          "description": "Lists the users of the provider account. You can apply filters by state and/or role.",
          "group": "user_provider_account",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "state",
              "description": "Filter users by State.",
              "dataType": "string",
              "paramType": "query",
              "required": false,
              "defaultValue": "",
              "allowableValues": {
                "values": [
                  "pending",
                  "suspended",
                  "active"
                ],
                "valueType": "LIST"
              }
            },
            {
              "name": "role",
              "description": "Filter users by Role.",
              "dataType": "string",
              "paramType": "query",
              "required": false,
              "defaultValue": "",
              "allowableValues": {
                "values": [
                  "member",
                  "admin"
                ],
                "valueType": "LIST"
              }
            }
          ]
        },
        {
          "httpMethod": "POST",
          "summary": "User Create (provider account)",
          "description": "Creates a new user in the provider account. Do not forget to activate it, otherwise he/she will not be able to sign-in. After creation the default state is pending and the default role is member. The user object can be extended using Fields Definitions in the Admin Portal where you can add/remove fields, for instance token (string), age (int), third name (string optional), etc.",
          "group": "user_provider_account",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "username",
              "description": "Username of the user.",
              "dataType": "string",
              "allowMultiple": false,
              "required": true,
              "paramType": "query"
            },
            {
              "name": "email",
              "description": "Email of the user.",
              "dataType": "string",
              "allowMultiple": false,
              "required": true,
              "paramType": "query"
            },
            {
              "name": "password",
              "description": "Password of the user.",
              "dataType": "string",
              "allowMultiple": false,
              "required": true,
              "paramType": "query"
            },
            {
              "name": "additional_fields",
              "dataType": "custom",
              "paramType": "query",
              "allowMultiple": true,
              "description": "Additional fields have to be defined by name and value (i.e &name=value). Additional fields are the custom fields declared for your tenant, you can find them in 'Settings >> Personal Details' for the account and in 'Settings >> Account >> Users >> Personal Details' for users. Typical examples are 'url', 'country', etc. Please check your Fields Definitions to get the list of all your custom fields."
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/users/{id}.xml",
      "responseClass": "user",
      "operations": [
        {
          "httpMethod": "GET",
          "summary": "User Read (provider account)",
          "description": "Gets the user of the provider account by ID.",
          "group": "user_provider_account",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "id",
              "description": "ID of the user.",
              "dataType": "int",
              "allowMultiple": false,
              "required": true,
              "paramType": "path",
              "threescale_name": "admin_ids"
            }
          ]
        },
        {
          "httpMethod": "PUT",
          "summary": "User Update (provider account)",
          "description": "Modifies the user of the provider account by ID. You can update any field, not only those in the form of the ActiveDocs but also fields that belong to the User object. Remember that you can define custom fields on your Admin Portal.",
          "group": "user_provider_account",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "id",
              "description": "ID of the user.",
              "dataType": "int",
              "allowMultiple": false,
              "required": true,
              "paramType": "path",
              "threescale_name": "admin_ids"
            },
            {
              "name": "username",
              "description": "Username of the user.",
              "dataType": "string",
              "allowMultiple": false,
              "required": false,
              "paramType": "query"
            },
            {
              "name": "email",
              "description": "Email of the user.",
              "dataType": "string",
              "allowMultiple": false,
              "required": false,
              "paramType": "query"
            },
            {
              "name": "password",
              "description": "Password of the user.",
              "dataType": "string",
              "allowMultiple": false,
              "required": false,
              "paramType": "query"
            },
            {
              "name": "additional_fields",
              "dataType": "custom",
              "paramType": "query",
              "allowMultiple": true,
              "description": "Additional fields have to be defined by name and value (i.e &name=value). Additional fields are the custom fields declared for your tenant, you can find them in 'Settings >> Personal Details' for the account and in 'Settings >> Account >> Users >> Personal Details' for users. Typical examples are 'url', 'country', etc. Please check your Fields Definitions to get the list of all your custom fields."
            }
          ]
        },
        {
          "httpMethod": "DELETE",
          "summary": "User Delete (provider account)",
          "description": "Deletes the user of the provider account by ID.",
          "group": "user_provider_account",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "id",
              "description": "ID of the user.",
              "dataType": "int",
              "allowMultiple": false,
              "required": true,
              "paramType": "path",
              "threescale_name": "admin_ids"
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/users/{id}/member.xml",
      "operations": [
        {
          "httpMethod": "PUT",
          "summary": "User Change Role to Member (provider account)",
          "description": "Changes the role of the user of the provider account to member.",
          "group": "user_provider_account",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "id",
              "description": "ID of the user.",
              "dataType": "int",
              "allowMultiple": false,
              "required": true,
              "paramType": "path",
              "threescale_name": "admin_ids"
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/users/{id}/admin.xml",
      "operations": [
        {
          "httpMethod": "PUT",
          "summary": "User Change Role to Admin (provider account)",
          "description": "Changes the role of the provider account to admin (full rights and privileges).",
          "group": "user_provider_account",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "id",
              "description": "ID of the user.",
              "dataType": "int",
              "allowMultiple": false,
              "required": true,
              "paramType": "path",
              "threescale_name": "admin_ids"
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/users/{id}/suspend.xml",
      "responseClass": "user",
      "operations": [
        {
          "httpMethod": "PUT",
          "summary": "User Suspend (provider account)",
          "description": "Changes the state of the user of the provider account to suspended, which removes the user's ability to sign-in. You can also perform this operation with a PUT on /admin/api/users/{id}.xml to change the state parameter.",
          "group": "user_provider_account",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "id",
              "description": "ID of the user.",
              "dataType": "int",
              "allowMultiple": false,
              "required": true,
              "paramType": "path",
              "threescale_name": "admin_ids"
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/users/{id}/unsuspend.xml",
      "responseClass": "user",
      "operations": [
        {
          "httpMethod": "PUT",
          "summary": "User Unsuspend (provider account)",
          "description": "Revokes the suspension of a user of the provider account. You can also perform this operation with a PUT on /admin/api/users/{id}.xml to change the state parameter.",
          "group": "user_provider_account",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "id",
              "description": "ID of the user.",
              "dataType": "int",
              "allowMultiple": false,
              "required": true,
              "paramType": "path",
              "threescale_name": "admin_ids"
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/users/{id}/activate.xml",
      "responseClass": "user",
      "operations": [
        {
          "httpMethod": "PUT",
          "summary": "User Activate (provider account)",
          "description": "Changes the state of the user of the provider account to active (after sign-up). You can also perform this operation with a PUT on /admin/api/users/{id}.xml to change the state parameter.",
          "group": "user_provider_account",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "id",
              "description": "ID of the user.",
              "dataType": "int",
              "allowMultiple": false,
              "required": true,
              "paramType": "path",
              "threescale_name": "admin_ids"
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/webhooks.json",
      "responseClass": "webhook",
      "operations": [
        {
          "httpMethod": "PUT",
          "summary": "WebHooks Update",
          "description": "Updates webhooks.",
          "group": "webhook",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "url",
              "description": "URL that will be notified about all the events",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "active",
              "description": "Activate/Disable WebHooks",
              "dataType": "boolean",
              "paramType": "query"
            },
            {
              "name": "provider_actions",
              "description": "Dashboard actions fire webhooks. If false, only user actions in the portal trigger events.",
              "dataType": "boolean",
              "paramType": "query"
            },
            {
              "name": "account_created_on",
              "dataType": "boolean",
              "paramType": "query"
            },
            {
              "name": "account_updated_on",
              "dataType": "boolean",
              "paramType": "query"
            },
            {
              "name": "account_deleted_on",
              "dataType": "boolean",
              "paramType": "query"
            },
            {
              "name": "user_created_on",
              "dataType": "boolean",
              "paramType": "query"
            },
            {
              "name": "user_updated_on",
              "dataType": "boolean",
              "paramType": "query"
            },
            {
              "name": "user_deleted_on",
              "dataType": "boolean",
              "paramType": "query"
            },
            {
              "name": "application_created_on",
              "dataType": "boolean",
              "paramType": "query"
            },
            {
              "name": "application_updated_on",
              "dataType": "boolean",
              "paramType": "query"
            },
            {
              "name": "application_deleted_on",
              "dataType": "boolean",
              "paramType": "query"
            },
            {
              "name": "account_plan_changed_on",
              "dataType": "boolean",
              "paramType": "query"
            },
            {
              "name": "application_plan_changed_on",
              "dataType": "boolean",
              "paramType": "query"
            },
            {
              "name": "application_user_key_updated_on",
              "dataType": "boolean",
              "paramType": "query"
            },
            {
              "name": "application_key_created_on",
              "dataType": "boolean",
              "paramType": "query"
            },
            {
              "name": "application_key_deleted_on",
              "dataType": "boolean",
              "paramType": "query"
            },
            {
              "name": "application_suspended_on",
              "dataType": "boolean",
              "paramType": "query"
            },
            {
              "name": "application_key_updated_on",
              "dataType": "boolean",
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
      "path": "/admin/api/webhooks/failures.xml",
      "responseClass": "List[webhook_failures]",
      "operations": [
        {
          "httpMethod": "GET",
          "summary": "Webhooks List Failed Deliveries",
          "description": "Lists of webhooks that could not be delivered to your end-point after 5 trials. A webhook is considered delivered if your end-point responds with a 200, otherwise it retries 5 times at 60 second intervals.",
          "group": "webhooks",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            }
          ]
        },
        {
          "httpMethod": "DELETE",
          "summary": "Webhooks Delete Failed Deliveries",
          "description": "Deletes failed delivery records. It is advisible to delete the records past the time of the last webhook failure that was received instead of deleting them all. Between the GET and the DELETE other webhooks failures may have arrived.",
          "group": "webhooks",
          "parameters": [
            {
              "name": "access_token",
              "description": "A personal Access Token",
              "dataType": "string",
              "required": true,
              "paramType": "query",
              "threescale_name": "access_token"
            },
            {
              "name": "time",
              "description": "Only failed webhook deliveries whose time is less than or equal to the passed time are destroyed (if used).",
              "dataType": "time",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    }
  ],
  "basePath": "",
  "swaggerVersion": "0.1a",
  "apiVersion": "1.0"
}
