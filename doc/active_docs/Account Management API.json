{
  "openapi": "3.0.1",
  "info": {
    "title": "Account Management API",
    "description": "API for managing 3scale Admin Portal objects, such as Accounts, Applications, Users, API products, gateway configurations etc.",
    "version": "1.0"
  },
  "servers": [
    {
      "url": "/"
    }
  ],
  "paths": {
    "/admin/api/signup.xml": {
      "post": {
        "summary": "Signup Express (Account Create)",
        "tags": ["Accounts"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "org_name",
            "in": "query",
            "description": "Organization Name of the developer account.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "username",
            "in": "query",
            "description": "Username of the admin user (on the new developer account).",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "email",
            "in": "query",
            "description": "Email of the admin user.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "Password of the admin user.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "account_plan_id",
            "in": "query",
            "description": "ID of the account plan (if not assigned default will be used instead).",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "service_plan_id",
            "in": "query",
            "description": "ID of the service plan (if not assigned default will be used instead).",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "application_plan_id",
            "in": "query",
            "description": "ID of the application plan (if not assigned default will be used instead).",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "additional_fields",
            "in": "query",
            "description": "Additional fields have to be defined by name and value (i.e &name=value). You can add as many as you want. Additional fields are the custom fields declared in 'Settings >> Fields Definitions' on your API Admin Portal. Typical examples are 'url', 'country', etc. Please check your Fields Definitions to get the list of all your custom fields.",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "object"
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      }
    },
    "/admin/api/accounts.xml": {
      "get": {
        "summary": "Account List",
        "tags": ["Accounts"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "state",
            "in": "query",
            "description": "Account state.",
            "schema": {
              "type": "string",
              "enum": [
                "pending",
                "approved",
                "rejected"
              ]
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page in the paginated list. Defaults to 1.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Number of results per page. Default and max is 500.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 500
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      }
    },
    "/admin/api/accounts/{id}.xml": {
      "get": {
        "summary": "Account Read",
        "tags": ["Accounts"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the account.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      },
      "put": {
        "summary": "Account Update",
        "tags": ["Accounts"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the account.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "org_name",
            "in": "query",
            "description": "Organization name of the account.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "monthly_billing_enabled",
            "in": "query",
            "description": "Updates monthly billing status.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "monthly_charging_enabled",
            "in": "query",
            "description": "Updates monthly charging status.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "additional_fields",
            "in": "query",
            "description": "Additional fields have to be defined by name and value (i.e &name=value). You can add as many as you want. Additional fields are the custom fields declared in 'Settings >> Fields Definitions' on your API Admin Portal. Typical examples are 'url', 'country', etc. Please check your Fields Definitions to get the list of all your custom fields.",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "object"
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      },
      "delete": {
        "summary": "Account Delete ",
        "tags": ["Accounts"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the account.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      }
    },
    "/admin/api/accounts/find.xml": {
      "get": {
        "summary": "Account Find",
        "tags": ["Accounts"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "username",
            "in": "query",
            "description": "Username of the account user.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "email",
            "in": "query",
            "description": "Email of the account user.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "description": "ID of the account user.",
            "schema": {
              "type": "ref"
            }
          },
          {
            "name": "buyer_provider_key",
            "in": "query",
            "description": "[Master API] Provider key of the account.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "buyer_service_token",
            "in": "query",
            "description": "[Master API] Service token of the account service.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      }
    },
    "/admin/api/accounts/{account_id}/applications.xml": {
      "get": {
        "summary": "Application List",
        "tags": ["Account Applications"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the account.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      },
      "post": {
        "summary": "Application Create",
        "tags": ["Account Applications"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the account.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "plan_id",
            "in": "query",
            "description": "ID of the application plan.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Name of the application to be created.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "description",
            "in": "query",
            "description": "Description of the application to be created.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "user_key",
            "in": "query",
            "description": "User Key (API Key) of the application to be created.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "application_id",
            "in": "query",
            "description": "App ID or Client ID (for OAuth and OpenID Connect authentication modes) of the application to be created.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "application_key",
            "in": "query",
            "description": "App Key(s) or Client Secret (for OAuth and OpenID Connect authentication modes) of the application to be created.",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "redirect_url",
            "in": "query",
            "description": "Redirect URL for the OAuth request.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "first_traffic_at",
            "in": "query",
            "description": "Timestamp of the first call made by the application.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "first_daily_traffic_at",
            "in": "query",
            "description": "Timestamp of the first call on the last day when traffic was registered for the application ('Traffic On').",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "additional_fields",
            "in": "query",
            "description": "Additional fields have to be defined by name and value (i.e &name=value). You can add as many as you want. Additional fields are the custom fields declared in 'Settings >> Fields Definitions' on your API Admin Portal. Typical examples are 'url', 'country', etc. Please check your Fields Definitions to get the list of all your custom fields.",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "object"
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      }
    },
    "/admin/api/accounts/{account_id}/applications/{id}.xml": {
      "get": {
        "summary": "Application Read",
        "tags": ["Account Applications"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the account.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the application.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      },
      "put": {
        "summary": "Application Update",
        "tags": ["Account Applications"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the account.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the application.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Name of the application.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "description",
            "in": "query",
            "description": "Description of the application.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "redirect_url",
            "in": "query",
            "description": "Redirect URL for the OAuth request.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "first_traffic_at",
            "in": "query",
            "description": "Timestamp of the first call made by the application.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "first_daily_traffic_at",
            "in": "query",
            "description": "Timestamp of the first call on the last day when traffic was registered for the application ('Traffic On').",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "additional_fields",
            "in": "query",
            "description": "Additional fields have to be defined by name and value (i.e &name=value). You can add as many as you want. Additional fields are the custom fields declared in 'Settings >> Fields Definitions' on your API Admin Portal. Typical examples are 'url', 'country', etc. Please check your Fields Definitions to get the list of all your custom fields.",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "object"
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      },
      "delete": {
        "summary": "Application Delete",
        "tags": ["Account Applications"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the account.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the application.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      }
    },
    "/admin/api/accounts/{account_id}/applications/{id}/accept.xml": {
      "put": {
        "summary": "Application Accept",
        "tags": ["Account Applications"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the account.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the application.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      }
    },
    "/admin/api/accounts/{account_id}/applications/{id}/change_plan.xml": {
      "put": {
        "summary": "Application Change Plan",
        "tags": ["Account Applications"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the account.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the application.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "plan_id",
            "in": "query",
            "description": "ID of the new application plan.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      }
    },
    "/admin/api/accounts/{account_id}/applications/{id}/customize_plan.xml": {
      "put": {
        "summary": "Application Create Plan Customization",
        "tags": ["Account Applications"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the account.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the application.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      }
    },
    "/admin/api/accounts/{account_id}/applications/{id}/decustomize_plan.xml": {
      "put": {
        "summary": "Application Delete Plan Customization",
        "tags": ["Account Applications"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the account.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the application.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      }
    },
    "/admin/api/accounts/{account_id}/applications/{id}/resume.xml": {
      "put": {
        "summary": "Application Resume",
        "tags": ["Account Applications"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the account.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the application.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      }
    },
    "/admin/api/accounts/{account_id}/applications/{id}/suspend.xml": {
      "put": {
        "summary": "Application Suspend",
        "tags": ["Account Applications"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the account.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the application.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      }
    },
    "/admin/api/accounts/{account_id}/applications/{application_id}/keys.xml": {
      "get": {
        "summary": "Application Key List",
        "tags": ["Account Applications"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the account.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "application_id",
            "in": "path",
            "description": "ID of the application.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      },
      "post": {
        "summary": "Application Key Create",
        "tags": ["Account Applications"],
        "operationId": "key_create",
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the account.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "application_id",
            "in": "path",
            "description": "ID of the application.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "key",
            "in": "query",
            "description": "app_key to be added",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      }
    },
    "/admin/api/accounts/{account_id}/applications/{application_id}/keys/{key}.xml": {
      "delete": {
        "summary": "Application Key Delete",
        "tags": ["Account Applications"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the account.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "application_id",
            "in": "path",
            "description": "ID of the application.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "key",
            "in": "path",
            "description": "app_key to be deleted.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      }
    },
    "/admin/api/accounts/{account_id}/applications/{application_id}/referrer_filters.xml": {
      "get": {
        "summary": "Application Referrer Filter List",
        "tags": ["Account Applications"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the account.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "application_id",
            "in": "path",
            "description": "ID of the application.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      },
      "post": {
        "summary": "Application Referrer Filter Create",
        "tags": ["Account Applications"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the account.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "application_id",
            "in": "path",
            "description": "ID of the application.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "referrer_filter",
            "in": "query",
            "description": "Referrer filter to be created.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      }
    },
    "/admin/api/accounts/{account_id}/applications/{application_id}/referrer_filters/{id}.xml": {
      "delete": {
        "summary": "Application Referrer Filter Delete",
        "tags": ["Account Applications"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the account.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "application_id",
            "in": "path",
            "description": "ID of the application.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of referrer filter to be deleted.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      }
    },
    "/admin/api/accounts/{account_id}/messages.xml": {
      "post": {
        "summary": "Account Message",
        "tags": ["Accounts"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the account.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "body",
            "in": "query",
            "description": "Text to send",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subject",
            "in": "query",
            "description": "Subject of the message",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      }
    },
    "/admin/api/accounts/{account_id}/plan.xml": {
      "get": {
        "summary": "Account Fetch Account Plan",
        "tags": ["Accounts"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the account.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      }
    },
    "/admin/api/accounts/{account_id}/service_contracts.xml": {
      "get": {
        "summary": "Service Subscription List",
        "tags": ["Accounts"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the account.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      }
    },
    "/admin/api/accounts/{account_id}/service_contracts/{id}.xml": {
      "delete": {
        "summary": "Service Subscription Delete",
        "tags": ["Accounts"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the account.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the service contract.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      }
    },
    "/admin/api/accounts/{id}/approve.xml": {
      "put": {
        "summary": "Account Approve",
        "tags": ["Accounts"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the account.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      }
    },
    "/admin/api/accounts/{id}/change_plan.xml": {
      "put": {
        "summary": "Account Change Plan",
        "tags": ["Accounts"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the account.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "plan_id",
            "in": "query",
            "description": "ID of the target account plan",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      }
    },
    "/admin/api/accounts/{id}/credit_card.xml": {
      "put": {
        "summary": "Account Set Credit Card",
        "tags": ["Accounts"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the account.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "credit_card_token",
            "in": "query",
            "description": "Token used by the payment gateway to identify the buyer, customer profile ID (Authorize.net), customer ID (Braintree and Stripe), customer alias (Ogone-Ingenico). Some payment gateways may store more than one card under the same buyer reference and/or require an additional identifier for recurring payment. If you are using Braintree, there is no need for additional identifier -- the first credit card available will always be charged. For Authorize.net, see `credit_card_authorize_net_payment_profile_token`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "credit_card_authorize_net_payment_profile_token",
            "in": "query",
            "description": "Additional reference provided by the payment gateway to identify a specific card under the same buyer reference. For Authorize.net, you MUST fill with the 'Payment profile token'",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "credit_card_expiration_year",
            "in": "query",
            "description": "Year of expiration of credit card. Two digit number",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "credit_card_expiration_month",
            "in": "query",
            "description": "Month of expiration of credit card. Two digit number",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "billing_address_name",
            "in": "query",
            "description": "Name of the person/company to bill",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "billing_address_address",
            "in": "query",
            "description": "Address associated to the credit card",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "billing_address_city",
            "in": "query",
            "description": "Billing address city",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "billing_address_country",
            "in": "query",
            "description": "Billing address country",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "billing_address_state",
            "in": "query",
            "description": "Billing address state",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "billing_address_phone",
            "in": "query",
            "description": "Billing address phone",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "billing_address_zip",
            "in": "query",
            "description": "Billing address ZIP Code",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "credit_card_partial_number",
            "in": "query",
            "description": "Last four digits on the credit card",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      },
      "delete": {
        "summary": "Account Delete Credit Card",
        "tags": ["Accounts"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the account.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      }
    },
    "/admin/api/accounts/{id}/make_pending.xml": {
      "put": {
        "summary": "Account Reset to Pending",
        "tags": ["Accounts"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the account.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      }
    },
    "/admin/api/accounts/{id}/reject.xml": {
      "put": {
        "summary": "Account Reject",
        "tags": ["Accounts"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the account.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      }
    },
    "/admin/api/accounts/{account_id}/users.xml": {
      "get": {
        "summary": "User List",
        "tags": ["Users"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the account.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "state",
            "in": "query",
            "description": "Filter users by State.",
            "schema": {
              "type": "string",
              "enum": [
                "pending",
                "suspended",
                "active"
              ]
            }
          },
          {
            "name": "role",
            "in": "query",
            "description": "Filter users by Role.",
            "schema": {
              "type": "string",
              "enum": [
                "member",
                "admin"
              ]
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      },
      "post": {
        "summary": "User Create",
        "tags": ["Users"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the account.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "username",
            "in": "query",
            "description": "Username of the user.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "email",
            "in": "query",
            "description": "Email of the user.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "Password of the user.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "additional_fields",
            "in": "query",
            "description": "Additional fields have to be defined by name and value (i.e &name=value). You can add as many as you want. Additional fields are the custom fields declared in 'Settings >> Fields Definitions' on your API Admin Portal. Typical examples are 'url', 'country', etc. Please check your Fields Definitions to get the list of all your custom fields.",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "object"
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      }
    },
    "/admin/api/accounts/{account_id}/users/{id}.xml": {
      "get": {
        "summary": "User Read",
        "tags": ["Users"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the account.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the user.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      },
      "put": {
        "summary": "User Update",
        "tags": ["Users"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the account.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the user.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "username",
            "in": "query",
            "description": "Username of the user.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "email",
            "in": "query",
            "description": "Email of the user.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "Password of the user.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "additional_fields",
            "in": "query",
            "description": "Additional fields have to be defined by name and value (i.e &name=value). You can add as many as you want. Additional fields are the custom fields declared in 'Settings >> Fields Definitions' on your API Admin Portal. Typical examples are 'url', 'country', etc. Please check your Fields Definitions to get the list of all your custom fields.",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "object"
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      },
      "delete": {
        "summary": "User Delete",
        "tags": ["Users"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the account.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the user.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      }
    },
    "/admin/api/accounts/{account_id}/users/{id}/activate.xml": {
      "put": {
        "summary": "User Activate",
        "tags": ["Users"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the account.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the user.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      }
    },
    "/admin/api/accounts/{account_id}/users/{id}/admin.xml": {
      "put": {
        "summary": "User change Role to Admin",
        "tags": ["Users"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the account.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the user.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      }
    },
    "/admin/api/accounts/{account_id}/users/{id}/member.xml": {
      "put": {
        "summary": "User Change Role to Member",
        "tags": ["Users"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the account.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the user.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      }
    },
    "/admin/api/accounts/{account_id}/users/{id}/suspend.xml": {
      "put": {
        "summary": "User Suspend",
        "tags": ["Users"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the account.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the user.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      }
    },
    "/admin/api/accounts/{account_id}/users/{id}/unsuspend.xml": {
      "put": {
        "summary": "User Unsuspend",
        "tags": ["Users"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the account.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the user.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      }
    },
    "/admin/api/users.xml": {
      "get": {
        "summary": "User List (provider account)",
        "tags": ["Users"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "state",
            "in": "query",
            "description": "Filter users by State.",
            "schema": {
              "type": "string",
              "enum": [
                "pending",
                "suspended",
                "active"
              ]
            }
          },
          {
            "name": "role",
            "in": "query",
            "description": "Filter users by Role.",
            "schema": {
              "type": "string",
              "enum": [
                "member",
                "admin"
              ]
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      },
      "post": {
        "summary": "User Create (provider account)",
        "tags": ["Users"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "username",
            "in": "query",
            "description": "Username of the user.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "email",
            "in": "query",
            "description": "Email of the user.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "Password of the user.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "additional_fields",
            "in": "query",
            "description": "Additional fields have to be defined by name and value (i.e &name=value). Additional fields are the custom fields declared for your tenant, you can find them in 'Settings >> Personal Details' for the account and in 'Settings >> Account >> Users >> Personal Details' for users. Typical examples are 'url', 'country', etc. Please check your Fields Definitions to get the list of all your custom fields.",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "object"
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      }
    },
    "/admin/api/users/{id}.xml": {
      "get": {
        "summary": "User Read (provider account)",
        "tags": ["Provider Users"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the user.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      },
      "put": {
        "summary": "User Update (provider account)",
        "tags": ["Provider Users"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the user.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "username",
            "in": "query",
            "description": "Username of the user.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "email",
            "in": "query",
            "description": "Email of the user.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "Password of the user.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "additional_fields",
            "in": "query",
            "description": "Additional fields have to be defined by name and value (i.e &name=value). Additional fields are the custom fields declared for your tenant, you can find them in 'Settings >> Personal Details' for the account and in 'Settings >> Account >> Users >> Personal Details' for users. Typical examples are 'url', 'country', etc. Please check your Fields Definitions to get the list of all your custom fields.",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "object"
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      },
      "delete": {
        "summary": "User Delete (provider account)",
        "tags": ["Provider Users"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the user.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      }
    },
    "/admin/api/users/{id}/activate.xml": {
      "put": {
        "summary": "User Activate (provider account)",
        "tags": ["Users"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the user.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      }
    },
    "/admin/api/users/{id}/admin.xml": {
      "put": {
        "summary": "User Change Role to Admin (provider account)",
        "tags": ["Users"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the user.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      }
    },
    "/admin/api/users/{id}/member.xml": {
      "put": {
        "summary": "User Change Role to Member (provider account)",
        "tags": ["Users"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the user.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      }
    },
    "/admin/api/users/{id}/permissions.xml": {
      "get": {
        "summary": "User Permissions Read",
        "tags": ["Users"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the user.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      },
      "put": {
        "summary": "User Permissions Update",
        "tags": ["Users"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the user.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "allowed_service_ids",
            "in": "query",
            "description": "IDs of the services that need to be enabled, URL-encoded array. To disable all services, set the value to '[]'. To enable all services, add parameter 'allowed_service_ids[]' with no value to the 'curl' command (can't be done in ActiveDocs)",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "object"
              }
            }
          },
          {
            "name": "allowed_sections",
            "in": "query",
            "description": "The list of sections in the admin portal that the user can access, URL-encoded array. Possible values: 'portal' (Developer Portal), 'finance' (Billing), 'settings', 'partners' (Accounts -- Applications), 'monitoring' (Analytics), 'plans' (Integration & Application Plans), 'policy_registry'. To disable all sections, set the value to '[]'.",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "object"
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      }
    },
    "/admin/api/users/{id}/suspend.xml": {
      "put": {
        "summary": "User Suspend (provider account)",
        "tags": ["Users"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the user.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      }
    },
    "/admin/api/users/{id}/unsuspend.xml": {
      "put": {
        "summary": "User Unsuspend (provider account)",
        "tags": ["Users"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the user.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      }
    },
    "/admin/api/users/{user_id}/access_tokens.json": {
      "post": {
        "summary": "Access Token Create",
        "tags": ["Access Tokens"],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "ID of the user.",
            "required": true,
            "schema": {
              "type": "ref"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Name of the access token.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "permission",
            "in": "query",
            "description": "Permission of the access token. It must be either 'ro' (read only) or 'rw' (read and write).",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scopes",
            "in": "query",
            "description": "Scope of the access token. URL-encoded array containing one or more of the possible values. The possible values are, for a master user [\"account_management\", \"stats\"], and for a tenant user [\"finance\", \"account_management\", \"stats\"]",
            "required": true,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "object"
              }
            }
          },
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      }
    },
    "/admin/api/account_plans.xml": {
      "get": {
        "summary": "Account Plan List",
        "tags": ["Account Plans"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      },
      "post": {
        "summary": "Account Plan Create",
        "tags": ["Account Plans"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Name of the account plan.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "approval_required",
            "in": "query",
            "description": "Set the 'Accounts require approval?' to 'true' or 'false'",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "system_name",
            "in": "query",
            "description": "System Name of the object to be created. System names cannot be modified after creation, they are used as the key to identify the objects.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "state_event",
            "in": "query",
            "description": "State event of the account plan. It can be 'publish' or 'hide'",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      }
    },
    "/admin/api/account_plans/{account_plan_id}/features.xml": {
      "get": {
        "summary": "Account Plan Features List",
        "tags": ["Account Plans"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "account_plan_id",
            "in": "path",
            "description": "ID of the account plan.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      }
    },
    "/admin/api/account_plans/{account_plan_id}/features/{id}.xml": {
      "post": {
        "summary": "Account Plan Features Create",
        "tags": ["Account Plans"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "account_plan_id",
            "in": "path",
            "description": "ID of the account plan.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the feature.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      },
      "delete": {
        "summary": "Account Plan Features Delete",
        "tags": ["Account Plans"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "account_plan_id",
            "in": "path",
            "description": "ID of the account plan.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the feature.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      }
    },
    "/admin/api/account_plans/{id}.xml": {
      "get": {
        "summary": "Account Plan Read",
        "tags": ["Account Plans"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the account plan.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      },
      "put": {
        "summary": "Account Plan Update",
        "tags": ["Account Plans"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the account plan.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Name of the account plan.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "approval_required",
            "in": "query",
            "description": "Set the 'Accounts require approval?' to 'true' or 'false'",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "state_event",
            "in": "query",
            "description": "State event of the account plan. It can be 'publish' or 'hide'",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      },
      "delete": {
        "summary": "Account Plan Delete",
        "tags": ["Account Plans"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the account plan.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      }
    },
    "/admin/api/account_plans/{id}/default.xml": {
      "put": {
        "summary": "Account Plan set to Default",
        "tags": ["Account Plans"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the account plan.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      }
    },
    "/admin/api/active_docs.json": {
      "get": {
        "summary": "ActiveDocs Spec List",
        "tags": ["Active Docs"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      },
      "post": {
        "summary": "ActiveDocs Spec Create",
        "tags": ["Active Docs"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Name of the ActiveDocs spec",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "system_name",
            "in": "query",
            "description": "System Name of the ActiveDocs spec. Only ASCII letters, numbers, dashes and underscores are allowed. If blank, 'system_name' will be generated from the 'name' parameter",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "service_id",
            "in": "query",
            "description": "Service ID of the ActiveDocs spec",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "body",
            "in": "query",
            "description": "ActiveDocs specification in JSON format (based on Swagger)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "description",
            "in": "query",
            "description": "Description of the ActiveDocs spec",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "published",
            "in": "query",
            "description": "Set to 'true' to publish the spec on the developer portal, or 'false' to hide it. The default value is 'false'",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "skip_swagger_validations",
            "in": "query",
            "description": "Set to 'true' to skip validation of the Swagger specification, or 'false' to validate the spec. The default value is 'false'",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      }
    },
    "/admin/api/active_docs/{id}.json": {
      "get": {
        "summary": "ActiveDocs Spec Read",
        "tags": ["Active Docs"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the ActiveDocs spec",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      },
      "put": {
        "summary": "ActiveDocs Spec Update",
        "tags": ["Active Docs"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the ActiveDocs spec",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Name of the ActiveDocs spec",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "service_id",
            "in": "query",
            "description": "Service ID of the ActiveDocs spec",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "body",
            "in": "query",
            "description": "ActiveDocs specification in JSON format (based on Swagger)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "description",
            "in": "query",
            "description": "Description of the ActiveDocs spec",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "published",
            "in": "query",
            "description": "Set to 'true' to publish the spec on the developer portal, or 'false' to hide it",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "skip_swagger_validations",
            "in": "query",
            "description": "Set to 'true' to skip validation of the Swagger specification, or 'false' to validate the spec",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      },
      "delete": {
        "summary": "ActiveDocs Spec Delete",
        "tags": ["Active Docs"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the ActiveDocs spec",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      }
    },
    "/admin/api/application_plans.xml": {
      "get": {
        "summary": "Application Plan List (all services)",
        "tags": ["Application Plans"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      }
    },
    "/admin/api/application_plans/{application_plan_id}/features.xml": {
      "get": {
        "summary": "Application Plan Feature List",
        "tags": ["Application Plans"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "application_plan_id",
            "in": "path",
            "description": "ID of the application plan.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      },
      "post": {
        "summary": "Application Plan Feature Create",
        "tags": ["Application Plans"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "application_plan_id",
            "in": "path",
            "description": "ID of the application plan.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "feature_id",
            "in": "query",
            "description": "ID of the feature.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      }
    },
    "/admin/api/application_plans/{application_plan_id}/features/{id}.xml": {
      "delete": {
        "summary": "Application Plan Feature Delete",
        "tags": ["Application Plans"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "application_plan_id",
            "in": "path",
            "description": "ID of the application plan.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the feature.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      }
    },
    "/admin/api/application_plans/{application_plan_id}/limits.xml": {
      "get": {
        "summary": "Limits List per Application Plan",
        "tags": ["Application Plans"],
        "operationId": "plan_limits",
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page in the paginated list. Defaults to 1.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Number of results per page. Default and max is 50.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "application_plan_id",
            "in": "path",
            "description": "ID of the application plan.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      }
    },
    "/admin/api/application_plans/{application_plan_id}/metrics/{metric_id}/limits.xml": {
      "get": {
        "summary": "Limit List per Metric",
        "tags": ["Application Plans"],
        "operationId": "limits",
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "application_plan_id",
            "in": "path",
            "description": "ID of the application plan.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "metric_id",
            "in": "path",
            "description": "ID of the metric.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      },
      "post": {
        "summary": "Limit Create",
        "tags": ["Application Plans"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "application_plan_id",
            "in": "path",
            "description": "ID of the application plan.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "metric_id",
            "in": "path",
            "description": "ID of the metric.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "period",
            "in": "query",
            "description": "Period of the limit.",
            "required": true,
            "schema": {
              "type": "string",
              "default": "minute",
              "enum": [
                "eternity",
                "year",
                "month",
                "week",
                "day",
                "hour",
                "minute"
              ]
            }
          },
          {
            "name": "value",
            "in": "query",
            "description": "Value of the limit.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      }
    },
    "/admin/api/application_plans/{application_plan_id}/metrics/{metric_id}/limits/{id}.xml": {
      "get": {
        "summary": "Limit Read",
        "tags": ["Application Plans"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "application_plan_id",
            "in": "path",
            "description": "ID of the application plan.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "metric_id",
            "in": "path",
            "description": "ID of the metric.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the limit.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      },
      "put": {
        "summary": "Limit Update",
        "tags": ["Application Plans"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "application_plan_id",
            "in": "path",
            "description": "ID of the application plan.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "metric_id",
            "in": "path",
            "description": "ID of the metric.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the limit.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "period",
            "in": "query",
            "description": "Period of the limit.",
            "required": true,
            "schema": {
              "type": "string",
              "default": "minute",
              "enum": [
                "eternity",
                "year",
                "month",
                "week",
                "day",
                "hour",
                "minute"
              ]
            }
          },
          {
            "name": "value",
            "in": "query",
            "description": "Value of the limit.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      },
      "delete": {
        "summary": "Limit Delete",
        "tags": ["Application Plans"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "application_plan_id",
            "in": "path",
            "description": "ID of the application plan.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "metric_id",
            "in": "path",
            "description": "ID of the metric.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the limit.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      }
    },
    "/admin/api/application_plans/{application_plan_id}/metrics/{metric_id}/pricing_rules.xml": {
      "get": {
        "summary": "Pricing Rules List per Metric",
        "tags": ["Application Plans"],
        "operationId": "metric_pricing_rules",
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "application_plan_id",
            "in": "path",
            "description": "ID of the application plan.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "metric_id",
            "in": "path",
            "description": "ID of the metric.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      },
      "post": {
        "summary": "Pricing Rule Create",
        "tags": ["Application Plans"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "application_plan_id",
            "in": "path",
            "description": "ID of the application plan.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "metric_id",
            "in": "path",
            "description": "ID of the metric.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "min",
            "in": "query",
            "description": "From (min) hit",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "max",
            "in": "query",
            "description": "To (max) hit",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "cost_per_unit",
            "in": "query",
            "description": "Cost per unit",
            "schema": {
              "type": "ref"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      }
    },
    "/admin/api/application_plans/{application_plan_id}/metrics/{metric_id}/pricing_rules/{id}.json": {
      "delete": {
        "summary": "Pricing Rule Delete",
        "tags": ["Application Plans"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "application_plan_id",
            "in": "path",
            "description": "ID of the application plan.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "metric_id",
            "in": "path",
            "description": "ID of the metric.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the pricing rule.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      }
    },
    "/admin/api/application_plans/{application_plan_id}/pricing_rules.xml": {
      "get": {
        "summary": "Pricing Rules List per Application Plan",
        "tags": ["Application Plans"],
        "operationId": "pricing_rules",
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "application_plan_id",
            "in": "path",
            "description": "ID of the application plan.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      }
    },
    "/admin/api/services/{service_id}/application_plans.xml": {
      "get": {
        "summary": "Application Plan List",
        "tags": ["Application Plans"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "service_id",
            "in": "path",
            "description": "ID of the service.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      },
      "post": {
        "summary": "Application Plan Create",
        "tags": ["Application Plans"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "service_id",
            "in": "path",
            "description": "ID of the service.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Name of the application plan.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "approval_required",
            "in": "query",
            "description": "Set the 'Applications require approval?' to 'true' or 'false'",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "cost_per_month",
            "in": "query",
            "description": "Cost per month",
            "schema": {
              "type": "ref"
            }
          },
          {
            "name": "setup_fee",
            "in": "query",
            "description": "Setup fee",
            "schema": {
              "type": "ref"
            }
          },
          {
            "name": "trial_period_days",
            "in": "query",
            "description": "Trial period days",
            "schema": {
              "type": "ref"
            }
          },
          {
            "name": "system_name",
            "in": "query",
            "description": "System Name of the object to be created. System names cannot be modified after creation, they are used as the key to identify the objects.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "state_event",
            "in": "query",
            "description": "State event of the application plan. It can be 'publish' or 'hide'",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      }
    },
    "/admin/api/services/{service_id}/application_plans/{id}.xml": {
      "get": {
        "summary": "Application Plan Read",
        "tags": ["Application Plans"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "service_id",
            "in": "path",
            "description": "ID of the service.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the application plan.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      },
      "put": {
        "summary": "Application Plan Update",
        "tags": ["Application Plans"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "service_id",
            "in": "path",
            "description": "ID of the service.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the application plan.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Name of the application plan.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "approval_required",
            "in": "query",
            "description": "Set the 'Applications require approval?' to 'true' or 'false'",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "cost_per_month",
            "in": "query",
            "description": "Cost per month",
            "schema": {
              "type": "ref"
            }
          },
          {
            "name": "setup_fee",
            "in": "query",
            "description": "Setup fee",
            "schema": {
              "type": "ref"
            }
          },
          {
            "name": "trial_period_days",
            "in": "query",
            "description": "Trial period days",
            "schema": {
              "type": "ref"
            }
          },
          {
            "name": "state_event",
            "in": "query",
            "description": "State event of the application plan. It can be 'publish' or 'hide'",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      },
      "delete": {
        "summary": "Application Plan Delete",
        "tags": ["Application Plans"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "service_id",
            "in": "path",
            "description": "ID of the service.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the application plan.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      }
    },
    "/admin/api/services/{service_id}/application_plans/{id}/default.xml": {
      "put": {
        "summary": "Application Plan Set to Default",
        "tags": ["Application Plans"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "service_id",
            "in": "path",
            "description": "ID of the service.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the application plan.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      }
    },
    "/admin/api/applications.xml": {
      "get": {
        "summary": "Application List (all services)",
        "tags": ["Service Applications"],
        "operationId": "applications",
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page in the paginated list. Defaults to 1.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Number of results per page. Default and max is 500.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 500
            }
          },
          {
            "name": "active_since",
            "in": "query",
            "description": "Filter date",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "inactive_since",
            "in": "query",
            "description": "Filter date",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "service_id",
            "in": "query",
            "description": "Filter by service",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "plan_id",
            "in": "query",
            "description": "Filter by plan",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "plan_type",
            "in": "query",
            "description": "Filter by plan type",
            "schema": {
              "type": "string",
              "enum": [
                "free",
                "paid"
              ]
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      }
    },
    "/admin/api/applications/find.xml": {
      "get": {
        "summary": "Application Find",
        "tags": ["Service Applications"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "application_id",
            "in": "query",
            "description": "ID of the application.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "user_key",
            "in": "query",
            "description": "user_key of the application (for user_key authentication mode).",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app_id",
            "in": "query",
            "description": "app_id of the application (for app_id/app_key and oauth authentication modes).",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "service_id",
            "in": "query",
            "description": "Filter by service",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      }
    },
    "/admin/api/account/authentication_providers.xml": {
      "get": {
        "summary": "Authentication Providers Admin Portal List",
        "tags": ["Admin Portal Authentication Providers"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      },
      "post": {
        "summary": "Authentication Provider Admin Portal Create",
        "tags": ["Admin Portal Authentication Providers"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "kind",
            "in": "query",
            "description": "The kind of authentication provider which can be either 'auth0' or 'keycloak'. Use 'keycloak' for Red Hat Single Sign-On.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Name of the authentication provider.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "system_name",
            "in": "query",
            "description": "System Name of the authentication provider.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "client_id",
            "in": "query",
            "description": "Client ID of the authentication provider.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "client_secret",
            "in": "query",
            "description": "Client Secret of the authentication provider.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "site",
            "in": "query",
            "description": "Site o Realm of the authentication provider.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skip_ssl_certificate_verification",
            "in": "query",
            "description": "Skip SSL certificate verification. False by default.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "published",
            "in": "query",
            "description": "Published authentication provider. False by default",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      }
    },
    "/admin/api/account/authentication_providers/{id}.xml": {
      "get": {
        "summary": "Authentication Provider Admin Portal Read",
        "tags": ["Admin Portal Authentication Providers"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the authentication provider.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      },
      "put": {
        "summary": "Authentication Provider Admin Portal Update",
        "tags": ["Admin Portal Authentication Providers"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the authentication provider.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "client_id",
            "in": "query",
            "description": "Client ID of the authentication provider.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "client_secret",
            "in": "query",
            "description": "Client Secret of the authentication provider.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "site",
            "in": "query",
            "description": "Site o Realm of the authentication provider.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skip_ssl_certificate_verification",
            "in": "query",
            "description": "Skip SSL certificate verification. False by default.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "published",
            "in": "query",
            "description": "Published authentication provider. False by default",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      }
    },
    "/admin/api/authentication_providers.xml": {
      "get": {
        "summary": "Authentication Providers Developer Portal List",
        "tags": ["Developer Portal Authentication Providers"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      },
      "post": {
        "summary": "Authentication Provider Developer Portal Create",
        "tags": ["Developer Portal Authentication Providers"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "kind",
            "in": "query",
            "description": "The kind of authentication provider which can be either 'github', 'auth0', 'keycloak' or a custom one. Use 'keycloak' for Red Hat Single Sign-On.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Name of the authentication provider.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "system_name",
            "in": "query",
            "description": "System Name of the authentication provider.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "client_id",
            "in": "query",
            "description": "Client ID of the authentication provider.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "client_secret",
            "in": "query",
            "description": "Client Secret of the authentication provider.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "site",
            "in": "query",
            "description": "Site o Realm of the authentication provider.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token_url",
            "in": "query",
            "description": "Token URL of the authentication provider.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "user_info_url",
            "in": "query",
            "description": "User info URL of the authentication provider.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorize_url",
            "in": "query",
            "description": "Authorize URL of the authentication provider.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "identifier_key",
            "in": "query",
            "description": "Identifier key. 'id' by default.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "username_key",
            "in": "query",
            "description": "Username key. 'login' by default.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "trust_email",
            "in": "query",
            "description": "Trust emails automatically. False by default",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "published",
            "in": "query",
            "description": "Published authentication provider. False by default",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "branding_state_event",
            "in": "query",
            "description": "Branding state event of the authentication provider. Only available for Github. It can be either 'brand_as_threescale' (the default one) or 'custom_brand'",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skip_ssl_certificate_verification",
            "in": "query",
            "description": "Skip SSL certificate verification. False by default.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "automatically_approve_accounts",
            "in": "query",
            "description": "Automatically approve accounts. False by default.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      }
    },
    "/admin/api/authentication_providers/{id}.xml": {
      "get": {
        "summary": "Authentication Provider Read",
        "tags": ["Developer Portal Authentication Providers"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the authentication provider.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      },
      "put": {
        "summary": "Authentication Provider Developer Portal Update",
        "tags": ["Developer Portal Authentication Providers"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the authentication provider.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "client_id",
            "in": "query",
            "description": "Client ID of the authentication provider.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "client_secret",
            "in": "query",
            "description": "Client Secret of the authentication provider.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "site",
            "in": "query",
            "description": "Site o Realm of the authentication provider.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "published",
            "in": "query",
            "description": "Published authentication provider. False by default",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "skip_ssl_certificate_verification",
            "in": "query",
            "description": "Skip SSL certificate verification. False by default.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "automatically_approve_accounts",
            "in": "query",
            "description": "Automatically approve accounts. False by default.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      }
    },
    "/admin/api/backend_apis.json": {
      "get": {
        "summary": "Backend List",
        "tags": ["Backend APIs"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page in the paginated list. Defaults to 1.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Number of results per page. Default and max is 500.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 500
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      },
      "post": {
        "summary": "Backend Create",
        "tags": ["Backend APIs"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Name of the Backend",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "system_name",
            "in": "query",
            "description": "System Name of the object to be created. System names cannot be modified after creation, they are used as the key to identify the objects.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "description",
            "in": "query",
            "description": "Description of the Backend",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "private_endpoint",
            "in": "query",
            "description": "Private Base URL (your API)",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      }
    },
    "/admin/api/backend_apis/{id}.json": {
      "get": {
        "summary": "Backend Read",
        "tags": ["Backend APIs"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Backend.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      },
      "put": {
        "summary": "Backend Update",
        "tags": ["Backend APIs"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Backend.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Name of the Backend",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "description",
            "in": "query",
            "description": "Description of the Backend",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "private_endpoint",
            "in": "query",
            "description": "Private Base URL (your API)",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      },
      "delete": {
        "summary": "Backend Delete",
        "tags": ["Backend APIs"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Backend.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      }
    },
    "/admin/api/backend_apis/{backend_api_id}/mapping_rules.json": {
      "get": {
        "summary": "Backend Mapping Rules List",
        "tags": ["Backend APIs"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "backend_api_id",
            "in": "path",
            "description": "ID of the Backend.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page in the paginated list. Defaults to 1.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Number of results per page. Default and max is 500.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 500
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      },
      "post": {
        "summary": "Backend Mapping Rule Create",
        "tags": ["Backend APIs"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "backend_api_id",
            "in": "path",
            "description": "ID of the Backend.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "http_method",
            "in": "query",
            "description": "HTTP method.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pattern",
            "in": "query",
            "description": "Mapping Rule pattern.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "delta",
            "in": "query",
            "description": "Increase the metric by this delta.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "metric_id",
            "in": "query",
            "description": "Metric ID.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "position",
            "in": "query",
            "description": "Mapping Rule position",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "last",
            "in": "query",
            "description": "Last matched Mapping Rule to process",
            "schema": {
              "type": "ref"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      }
    },
    "/admin/api/backend_apis/{backend_api_id}/mapping_rules/{id}.json": {
      "get": {
        "summary": "Backend Mapping Rules Read",
        "tags": ["Backend APIs"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "backend_api_id",
            "in": "path",
            "description": "ID of the Backend.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Mapping Rule ID.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      },
      "put": {
        "summary": "Backend Mapping Rule Update",
        "tags": ["Backend APIs"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "backend_api_id",
            "in": "path",
            "description": "ID of the Backend.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Mapping Rule ID.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "http_method",
            "in": "query",
            "description": "HTTP method.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pattern",
            "in": "query",
            "description": "Mapping Rule pattern.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "delta",
            "in": "query",
            "description": "Increase the metric by this delta.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "metric_id",
            "in": "query",
            "description": "Metric ID.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "position",
            "in": "query",
            "description": "Mapping Rule position",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "last",
            "in": "query",
            "description": "Last matched Mapping Rule to process",
            "schema": {
              "type": "ref"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      },
      "delete": {
        "summary": "Backend Mapping Rule Delete",
        "tags": ["Backend APIs"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "backend_api_id",
            "in": "path",
            "description": "ID of the Backend.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Mapping Rule ID.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      }
    },
    "/admin/api/backend_apis/{backend_api_id}/metrics.json": {
      "get": {
        "summary": "Backend Metric List",
        "tags": ["Backend APIs"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "backend_api_id",
            "in": "path",
            "description": "ID of the Backend.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page in the paginated list. Defaults to 1.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Number of results per page. Default and max is 500.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 500
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      },
      "post": {
        "summary": "Backend Metric Create",
        "tags": ["Backend APIs"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "backend_api_id",
            "in": "path",
            "description": "ID of the Backend.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "friendly_name",
            "in": "query",
            "description": "Descriptive Name of the metric.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "system_name",
            "in": "query",
            "description": "System Name of the metric. If blank a system_name will be generated for you from the friendly_name parameter",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "unit",
            "in": "query",
            "description": "Measure unit of the metric.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "description",
            "in": "query",
            "description": "Description of the metric.",
            "schema": {
              "type": "ref"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      }
    },
    "/admin/api/backend_apis/{backend_api_id}/metrics/{id}.json": {
      "get": {
        "summary": "Backend Metric Read",
        "tags": ["Backend APIs"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "backend_api_id",
            "in": "path",
            "description": "ID of the Backend.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the metric.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      },
      "put": {
        "summary": "Backend Metric Update",
        "tags": ["Backend APIs"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "backend_api_id",
            "in": "path",
            "description": "ID of the Backend.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the metric.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "friendly_name",
            "in": "query",
            "description": "Name of the metric.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "unit",
            "in": "query",
            "description": "Measure unit of the metric.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "description",
            "in": "query",
            "description": "Description of the metric.",
            "schema": {
              "type": "ref"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      },
      "delete": {
        "summary": "Backend Metric Delete",
        "tags": ["Backend APIs"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "backend_api_id",
            "in": "path",
            "description": "ID of the Backend.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the metric.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      }
    },
    "/admin/api/backend_apis/{backend_api_id}/metrics/{metric_id}/methods.json": {
      "get": {
        "summary": "Backend Method List",
        "tags": ["Backend APIs"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "backend_api_id",
            "in": "path",
            "description": "ID of the Backend.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "metric_id",
            "in": "path",
            "description": "ID of the metric.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page in the paginated list. Defaults to 1.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Number of results per page. Default and max is 500.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 500
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      },
      "post": {
        "summary": "Backend Method Create",
        "tags": ["Backend APIs"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "backend_api_id",
            "in": "path",
            "description": "ID of the Backend.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "metric_id",
            "in": "path",
            "description": "ID of the metric.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "friendly_name",
            "in": "query",
            "description": "Descriptive Name of the metric.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "system_name",
            "in": "query",
            "description": "System Name of the metric. If blank a system_name will be generated for you from the friendly_name parameter",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "unit",
            "in": "query",
            "description": "Measure unit of the metric.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "description",
            "in": "query",
            "description": "Description of the metric.",
            "schema": {
              "type": "ref"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      }
    },
    "/admin/api/backend_apis/{backend_api_id}/metrics/{metric_id}/methods/{id}.json": {
      "get": {
        "summary": "Backend Method Read",
        "tags": ["Backend APIs"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "backend_api_id",
            "in": "path",
            "description": "ID of the Backend.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "metric_id",
            "in": "path",
            "description": "ID of the metric.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the method.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      },
      "put": {
        "summary": "Backend Method Update",
        "tags": ["Backend APIs"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "backend_api_id",
            "in": "path",
            "description": "ID of the Backend.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "metric_id",
            "in": "path",
            "description": "ID of the metric.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the method.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "friendly_name",
            "in": "query",
            "description": "Name of the method.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "unit",
            "in": "query",
            "description": "Measure unit of the method.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "description",
            "in": "query",
            "description": "Description of the method.",
            "schema": {
              "type": "ref"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      },
      "delete": {
        "summary": "Backend Method Delete",
        "tags": ["Backend APIs"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "backend_api_id",
            "in": "path",
            "description": "ID of the Backend.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "metric_id",
            "in": "path",
            "description": "ID of the metric.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the method.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      }
    },
    "/admin/api/services/{service_id}/backend_usages.json": {
      "get": {
        "summary": "Backend Usage List",
        "tags": ["Backends"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "service_id",
            "in": "path",
            "description": "ID of the service.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      },
      "post": {
        "summary": "Backend Usage Create",
        "tags": ["Backends"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "service_id",
            "in": "path",
            "description": "ID of the service.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "backend_api_id",
            "in": "query",
            "description": "Backend to be added to the Service (Product).",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "path",
            "in": "query",
            "description": "Path of the Backend for this product.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      }
    },
    "/admin/api/services/{service_id}/backend_usages/{id}.json": {
      "get": {
        "summary": "Backend Usage Read",
        "tags": ["Backends"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "service_id",
            "in": "path",
            "description": "ID of the service.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Backend Usage.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      },
      "put": {
        "summary": "Backend Usage Update",
        "tags": ["Backends"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "service_id",
            "in": "path",
            "description": "ID of the service.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Backend Usage.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "path",
            "in": "query",
            "description": "Path of the Backend for this product.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      },
      "delete": {
        "summary": "Backend Usage Delete",
        "tags": ["Backends"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "service_id",
            "in": "path",
            "description": "ID of the service.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Backend Usage.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      }
    },
    "/admin/api/features.xml": {
      "get": {
        "summary": "Account Features List",
        "tags": ["Account Features"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      },
      "post": {
        "summary": "Account Feature Create",
        "tags": ["Account Features"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Name of the feature.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "system_name",
            "in": "query",
            "description": "System Name of the object to be created. System names cannot be modified after creation, they are used as the key to identify the objects.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      }
    },
    "/admin/api/features/{id}.xml": {
      "get": {
        "summary": "Account Feature Read",
        "tags": ["Account Features"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the feature.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      },
      "put": {
        "summary": "Account Feature Update",
        "tags": ["Account Features"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the feature.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Name of the feature.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      },
      "delete": {
        "summary": "Account Feature Delete",
        "tags": ["Account Features"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the feature.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      }
    },
    "/admin/api/fields_definitions.json": {
      "get": {
        "summary": "Fields Definitions List",
        "tags": ["Fields Definitions"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      },
      "post": {
        "summary": "Fields Definition Create",
        "tags": ["Fields Definitions"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "target",
            "in": "query",
            "description": "Target entity of fields definition.",
            "required": true,
            "schema": {
              "type": "string",
              "default": "account",
              "enum": [
                "Account",
                "User",
                "Cinstance"
              ]
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Name of the fields definition to be created.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "label",
            "in": "query",
            "description": "The field title your developers will see.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "required",
            "in": "query",
            "description": "If 'true' the field will be required for developers.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "hidden",
            "in": "query",
            "description": "If 'true' the developers won't be able to see this field.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "read_only",
            "in": "query",
            "description": "If 'true' the developers won't be able to change this field.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "choices",
            "in": "query",
            "description": "The list of predefined options for this field, URL-encoded array.",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "object"
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      }
    },
    "/admin/api/fields_definitions/{id}.json": {
      "get": {
        "summary": "Fields Definition Read",
        "tags": ["Fields Definitions"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the fields definition.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      },
      "put": {
        "summary": "Fields Definition Update",
        "tags": ["Fields Definitions"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the fields definition.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "target",
            "in": "query",
            "description": "Target entity of fields definition.",
            "required": true,
            "schema": {
              "type": "string",
              "default": "account",
              "enum": [
                "Account",
                "User",
                "Cinstance"
              ]
            }
          },
          {
            "name": "label",
            "in": "query",
            "description": "The field title your developers will see.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "required",
            "in": "query",
            "description": "If 'true' the field will be required for developers.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "hidden",
            "in": "query",
            "description": "If 'true' the developers won't be able to see this field.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "read_only",
            "in": "query",
            "description": "If 'true' the developers won't be able to change this field.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "position",
            "in": "query",
            "description": "Position of the fields definition.",
            "schema": {
              "type": "ref"
            }
          },
          {
            "name": "choices",
            "in": "query",
            "description": "The list of predefined options for this field, URL-encoded array.",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "object"
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      },
      "delete": {
        "summary": "Fields Definition Delete",
        "tags": ["Fields Definitions"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the fields definition.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      }
    },
    "/admin/api/objects/status.json": {
      "get": {
        "summary": "Object deletion status for objects that are deleted asynchronously",
        "tags": ["Object Deletion Status"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "object_type",
            "in": "query",
            "description": "Object type has to be service, account, proxy or backend_api.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "object_id",
            "in": "query",
            "description": "Object ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      }
    },
    "/admin/api/personal/access_tokens.json": {
      "get": {
        "summary": "Personal Access Token List",
        "tags": ["Access Tokens"],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "Part of the name of the access token.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      },
      "post": {
        "summary": "Personal Access Token Create",
        "tags": ["Access Tokens"],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "Name of the access token.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "permission",
            "in": "query",
            "description": "Permission of the access token. It must be either 'ro' (read only) or 'rw' (read and write).",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scopes",
            "in": "query",
            "description": "Scope of the access token. URL-encoded array containing one or more of the possible values. The possible values are, for a master user [\"account_management\", \"stats\", \"policy_registry\"], and for a tenant user [\"finance\", \"account_management\", \"stats\", \"policy_registry\"]",
            "required": true,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "object"
              }
            }
          },
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      }
    },
    "/admin/api/personal/access_tokens/{id}.json": {
      "get": {
        "summary": "Personal Access Token Read",
        "tags": ["Access Tokens"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID or value of the access token.",
            "required": true,
            "schema": {
              "type": "ref"
            }
          },
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      },
      "delete": {
        "summary": "Personal Access Token Delete",
        "tags": ["Access Tokens"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID or value of the access token.",
            "required": true,
            "schema": {
              "type": "ref"
            }
          },
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      }
    },
    "/admin/api/policies.json": {
      "get": {
        "summary": "APIcast Policy Registry",
        "tags": ["APIcast Policies"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      }
    },
    "/admin/api/provider.xml": {
      "get": {
        "summary": "Provider Account Read",
        "tags": ["Provider Account"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      },
      "put": {
        "summary": "Provider Account Update",
        "tags": ["Provider Account"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "from_email",
            "in": "query",
            "description": "New outgoing email.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "support_email",
            "in": "query",
            "description": "New support email.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "finance_support_email",
            "in": "query",
            "description": "New finance support email.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "site_access_code",
            "in": "query",
            "description": "Developer Portal Access Code.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      }
    },
    "/admin/api/service_plans.xml": {
      "get": {
        "summary": "Service Plan List (all services)",
        "tags": ["Service Plans"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      }
    },
    "/admin/api/service_plans/{service_plan_id}/features.xml": {
      "get": {
        "summary": "Service Plan Feature List",
        "tags": ["Service Plans"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "service_plan_id",
            "in": "path",
            "description": "ID of the service plan.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      },
      "post": {
        "summary": "Service Plan Feature Add",
        "tags": ["Service Plans"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "service_plan_id",
            "in": "path",
            "description": "ID of the service plan.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "feature_id",
            "in": "query",
            "description": "ID of the feature.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      }
    },
    "/admin/api/service_plans/{service_plan_id}/features/{id}.xml": {
      "delete": {
        "summary": "Service Plan Features Delete",
        "tags": ["Service Plans"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "service_plan_id",
            "in": "path",
            "description": "ID of the service plan.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the feature.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      }
    },
    "/admin/api/services.xml": {
      "get": {
        "summary": "Service List",
        "tags": ["Services"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page in the paginated list. Defaults to 1.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Number of results per page. Default and max is 500.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 500
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      },
      "post": {
        "summary": "Service Create",
        "tags": ["Services"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Name of the service to be created.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "description",
            "in": "query",
            "description": "Description of the service to be created.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "deployment_option",
            "in": "query",
            "description": "Deployment option for the gateway: 'hosted' for APIcast hosted, 'self_managed' for APIcast Self-managed, 'service_mesh_istio' for Istio service mesh option",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "backend_version",
            "in": "query",
            "description": "Authentication mode: '1' for API key, '2' for App Id / App Key, 'oidc' for OpenID Connect",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "system_name",
            "in": "query",
            "description": "System Name of the object to be created. System names cannot be modified after creation, they are used as the key to identify the objects.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": " ",
            "in": "query",
            "description": "Extra parameters",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "object"
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      }
    },
    "/admin/api/services/{id}.xml": {
      "get": {
        "summary": "Service Read",
        "tags": ["Services"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the service.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      },
      "put": {
        "summary": "Service Update",
        "tags": ["Services"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the service.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "New name for the service.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "description",
            "in": "query",
            "description": "New description for the service.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "support_email",
            "in": "query",
            "description": "New support email.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "deployment_option",
            "in": "query",
            "description": "Deployment option for the gateway: 'hosted' for APIcast hosted, 'self_managed' for APIcast Self-managed, 'service_mesh_istio' for Istio service mesh option",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "backend_version",
            "in": "query",
            "description": "Authentication mode: '1' for API key, '2' for App Id / App Key, 'oidc' for OpenID Connect",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": " ",
            "in": "query",
            "description": "Extra parameters",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "object"
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      },
      "delete": {
        "summary": "Service Delete",
        "tags": ["Services"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the service.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      }
    },
    "/admin/api/services/{id}/service_plans.xml": {
      "get": {
        "summary": "Service Plan List",
        "tags": ["Service Plans"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the service.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      },
      "post": {
        "summary": "Service Plan Create",
        "tags": ["Service Plans"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the service.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Name of the service plan.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "approval_required",
            "in": "query",
            "description": "Set the 'Service subscriptions require approval?' to 'true' or 'false'",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "system_name",
            "in": "query",
            "description": "System Name of the object to be created. System names cannot be modified after creation, they are used as the key to identify the objects.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "state_event",
            "in": "query",
            "description": "State event of the service plan. It can be 'publish' or 'hide'",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      }
    },
    "/admin/api/services/{service_id}/metrics.xml": {
      "get": {
        "summary": "Service Metric List",
        "tags": ["Services"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "service_id",
            "in": "path",
            "description": "ID of the service.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      },
      "post": {
        "summary": "Service Metric Create",
        "tags": ["Services"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "service_id",
            "in": "path",
            "description": "ID of the service.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "friendly_name",
            "in": "query",
            "description": "Descriptive Name of the metric.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "system_name",
            "in": "query",
            "description": "System Name of the metric. This is the name used to report API requests with the Service Management API. If blank a system_name will be generated for you from the friendly_name parameter",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "DEPRECATED: Please use system_name parameter",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "unit",
            "in": "query",
            "description": "Measure unit of the metric.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "description",
            "in": "query",
            "description": "Description of the metric.",
            "schema": {
              "type": "ref"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      }
    },
    "/admin/api/services/{service_id}/metrics/{id}.xml": {
      "get": {
        "summary": "Service Metric Read",
        "tags": ["Services"],
        "operationId": "service_metric",
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "service_id",
            "in": "path",
            "description": "ID of the service.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the metric.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      },
      "put": {
        "summary": "Service Metric Update",
        "tags": ["Services"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "service_id",
            "in": "path",
            "description": "ID of the service.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the metric.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "friendly_name",
            "in": "query",
            "description": "Name of the metric.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "unit",
            "in": "query",
            "description": "Measure unit of the metric.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "description",
            "in": "query",
            "description": "Description of the metric.",
            "schema": {
              "type": "ref"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      },
      "delete": {
        "summary": "Service Metric Delete",
        "tags": ["Services"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "service_id",
            "in": "path",
            "description": "ID of the service.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the metric.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      }
    },
    "/admin/api/services/{service_id}/metrics/{metric_id}/methods.xml": {
      "get": {
        "summary": "Service Method List",
        "tags": ["Services"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "service_id",
            "in": "path",
            "description": "ID of the service.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "metric_id",
            "in": "path",
            "description": "ID of the metric.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      },
      "post": {
        "summary": "Service Method Create",
        "tags": ["Services"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "service_id",
            "in": "path",
            "description": "ID of the service.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "metric_id",
            "in": "path",
            "description": "ID of the metric.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "friendly_name",
            "in": "query",
            "description": "Name of the method.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "system_name",
            "in": "query",
            "description": "System Name of the metric. This is the name used to report API requests with the Service Management API. If blank, a system_name will be generated for you from the friendly_name parameter",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "unit",
            "in": "query",
            "description": "Measure unit of the method.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "description",
            "in": "query",
            "description": "Description of the method.",
            "schema": {
              "type": "ref"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      }
    },
    "/admin/api/services/{service_id}/metrics/{metric_id}/methods/{id}.xml": {
      "get": {
        "summary": "Service Method Read",
        "tags": ["Services"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "service_id",
            "in": "path",
            "description": "ID of the service.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "metric_id",
            "in": "path",
            "description": "ID of the metric.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the method.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      },
      "put": {
        "summary": "Service Method Update",
        "tags": ["Services"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "service_id",
            "in": "path",
            "description": "ID of the service.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "metric_id",
            "in": "path",
            "description": "ID of the metric.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the method.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "friendly_name",
            "in": "query",
            "description": "Name of the method.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "unit",
            "in": "query",
            "description": "Measure unit of the method.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "description",
            "in": "query",
            "description": "Description of the method.",
            "schema": {
              "type": "ref"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      },
      "delete": {
        "summary": "Service Method Delete",
        "tags": ["Services"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "service_id",
            "in": "path",
            "description": "ID of the service.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "metric_id",
            "in": "path",
            "description": "ID of the metric.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the method.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      }
    },
    "/admin/api/account/proxy_configs/{environment}.json": {
      "get": {
        "summary": "Proxy Configs List (Provider)",
        "tags": ["Proxy Configs for Provider"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "environment",
            "in": "path",
            "description": "Gateway environment. Must be 'sandbox' or 'production'",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "host",
            "in": "query",
            "description": "Filter by host",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "query",
            "description": "Filter by version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      }
    },
    "/admin/api/services/{service_id}/proxy.xml": {
      "get": {
        "summary": "Proxy Read",
        "tags": ["Gateway"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "service_id",
            "in": "path",
            "description": "ID of the service.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      },
      "patch": {
        "summary": "Proxy Update",
        "tags": ["Gateway"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "service_id",
            "in": "path",
            "description": "ID of the service.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "endpoint",
            "in": "query",
            "description": "Public Base URL for production environment.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api_backend",
            "in": "query",
            "description": "Private Base URL. Caution! Do not use it if the account has API as a Product enabled. It may cause API backend usages to be removed from the Product.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "credentials_location",
            "in": "query",
            "description": "Credentials Location. Either headers, query or authorization for the Basic Authorization.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "auth_app_key",
            "in": "query",
            "description": "Parameter/Header where App Key is expected.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "auth_app_id",
            "in": "query",
            "description": "Parameter/Header where App ID is expected.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "auth_user_key",
            "in": "query",
            "description": "Parameter/Header where User Key is expected.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "error_auth_failed",
            "in": "query",
            "description": "Error message on failed authentication.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "error_status_auth_failed",
            "in": "query",
            "description": "Status code on failed authentication.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "error_headers_auth_failed",
            "in": "query",
            "description": "Content-Type header on failed authentication.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "error_auth_missing",
            "in": "query",
            "description": "Error message on missing authentication.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "error_status_auth_missing",
            "in": "query",
            "description": "Status code on missing authentication.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "error_headers_auth_missing",
            "in": "query",
            "description": "Content-Type header on missing authentication.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "error_no_match",
            "in": "query",
            "description": "Error message when no mapping rule is matched.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "error_status_no_match",
            "in": "query",
            "description": "Status code when no mapping rule is matched.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "error_headers_no_match",
            "in": "query",
            "description": "Content-Type header when no mapping rule is matched.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "error_status_limits_exceeded",
            "in": "query",
            "description": "Status code when usage limit exceeded.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "error_headers_limits_exceeded",
            "in": "query",
            "description": "Content-Type header when usage limit exceeded.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "error_limits_exceeded",
            "in": "query",
            "description": "Error message on usage limit exceeded.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "oidc_issuer_endpoint",
            "in": "query",
            "description": "Location of your OpenID Provider.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "oidc_issuer_type",
            "in": "query",
            "description": "Type of your OpenID Provider.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sandbox_endpoint",
            "in": "query",
            "description": "Sandbox endpoint.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "jwt_claim_with_client_id",
            "in": "query",
            "description": "JWT Claim With ClientId Location.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "jwt_claim_with_client_id_type",
            "in": "query",
            "description": "JWT Claim With ClientId Type. Either `plain` or `liquid`",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      }
    },
    "/admin/api/services/{service_id}/proxy/deploy.xml": {
      "post": {
        "summary": "Proxy Deploy",
        "tags": ["Gateway"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "service_id",
            "in": "path",
            "description": "ID of the service.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      }
    },
    "/admin/api/services/{service_id}/proxy/mapping_rules.xml": {
      "get": {
        "summary": "Proxy Mapping Rules List",
        "tags": ["Gateway"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "service_id",
            "in": "path",
            "description": "ID of the service.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      },
      "post": {
        "summary": "Proxy Mapping Rule Create",
        "tags": ["Gateway"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "service_id",
            "in": "path",
            "description": "ID of the service.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "http_method",
            "in": "query",
            "description": "HTTP method.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pattern",
            "in": "query",
            "description": "Mapping Rule pattern.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "delta",
            "in": "query",
            "description": "Increase the metric by this delta.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "metric_id",
            "in": "query",
            "description": "Metric ID.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "position",
            "in": "query",
            "description": "Mapping Rule position",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "last",
            "in": "query",
            "description": "Last matched Mapping Rule to process",
            "schema": {
              "type": "ref"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      }
    },
    "/admin/api/services/{service_id}/proxy/mapping_rules/{id}.xml": {
      "get": {
        "summary": "Proxy Mapping Rules Show",
        "tags": ["Gateway"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "service_id",
            "in": "path",
            "description": "ID of the service.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Mapping Rule ID.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      },
      "delete": {
        "summary": "Proxy Mapping Rule Delete",
        "tags": ["Gateway"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "service_id",
            "in": "path",
            "description": "ID of the service.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Mapping Rule ID.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      },
      "patch": {
        "summary": "Proxy Mapping Rule Update",
        "tags": ["Gateway"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "service_id",
            "in": "path",
            "description": "ID of the service.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Mapping Rule ID.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "http_method",
            "in": "query",
            "description": "HTTP method.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pattern",
            "in": "query",
            "description": "Mapping Rule pattern.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "delta",
            "in": "query",
            "description": "Increase the metric by this delta.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "metric_id",
            "in": "query",
            "description": "Metric ID.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "position",
            "in": "query",
            "description": "Mapping Rule position",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "last",
            "in": "query",
            "description": "Last matched Mapping Rule to process",
            "schema": {
              "type": "ref"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      }
    },
    "/admin/api/services/{service_id}/proxy/oidc_configuration.xml": {
      "get": {
        "summary": "OIDC Configuration Show",
        "tags": ["Gateway"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "service_id",
            "in": "path",
            "description": "ID of the service.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      },
      "patch": {
        "summary": "OIDC Configuration Update",
        "tags": ["Gateway"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "service_id",
            "in": "path",
            "description": "ID of the service.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "standard_flow_enabled",
            "in": "query",
            "description": "Enable Authorization Code Flow (Standard Flow)",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "implicit_flow_enabled",
            "in": "query",
            "description": "Enable Implicit Flow",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "service_accounts_enabled",
            "in": "query",
            "description": "Enable Service Account Flow (Standard Flow)",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "direct_access_grants_enabled",
            "in": "query",
            "description": "Enable Direct Access Grant Flow",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      }
    },
    "/admin/api/services/{service_id}/proxy/configs/{environment}.json": {
      "get": {
        "summary": "Proxy Configs List (Service)",
        "tags": ["Gateway"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "service_id",
            "in": "path",
            "description": "ID of the service.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "environment",
            "in": "path",
            "description": "Gateway environment. Must be 'sandbox' or 'production'",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      }
    },
    "/admin/api/services/{service_id}/proxy/configs/{environment}/latest.json": {
      "get": {
        "summary": "Proxy Config Show Latest",
        "tags": ["Gateway"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "service_id",
            "in": "path",
            "description": "ID of the service.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "environment",
            "in": "path",
            "description": "Gateway environment. Must be 'sandbox' or 'production'",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      }
    },
    "/admin/api/services/{service_id}/proxy/configs/{environment}/{version}.json": {
      "get": {
        "summary": "Proxy Config Show",
        "tags": ["Gateway"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "service_id",
            "in": "path",
            "description": "ID of the service.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "environment",
            "in": "path",
            "description": "Gateway environment. Must be 'sandbox' or 'production'",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "Version of the Proxy config.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      }
    },
    "/admin/api/services/{service_id}/proxy/configs/{environment}/{version}/promote.json": {
      "post": {
        "summary": "Proxy Config Promote",
        "tags": ["Gateway"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "service_id",
            "in": "path",
            "description": "ID of the service.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "environment",
            "in": "path",
            "description": "Gateway environment. Must be 'sandbox' or 'production'",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "Version of the Proxy config.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "the name of the destination environment",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      }
    },
    "/admin/api/services/{service_id}/proxy/policies.json": {
      "get": {
        "summary": "Proxy Policies Chain Show",
        "tags": ["Gateway"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "service_id",
            "in": "path",
            "description": "ID of the service.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      },
      "put": {
        "summary": "Proxy Policies Chain Update",
        "tags": ["Gateway"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "service_id",
            "in": "path",
            "description": "ID of the service.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "policies_config",
            "in": "query",
            "description": "Proxy policies chain",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      }
    },
    "/admin/api/services/{service_id}/service_plans/{id}.xml": {
      "get": {
        "summary": "Service Plan Read",
        "tags": ["Service Plans"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "service_id",
            "in": "path",
            "description": "ID of the service.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the service plan.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      },
      "put": {
        "summary": "Service Plan Update",
        "tags": ["Service Plans"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "service_id",
            "in": "path",
            "description": "ID of the service.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the service plan.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Name of the service plan.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "approval_required",
            "in": "query",
            "description": "Set the 'Service subscriptions require approval?' to 'true' or 'false'",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "state_event",
            "in": "query",
            "description": "State event of the service plan. It can be 'publish' or 'hide'",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      },
      "delete": {
        "summary": "Service Plan Delete",
        "tags": ["Service Plans"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "service_id",
            "in": "path",
            "description": "ID of the service.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the service plan.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      }
    },
    "/admin/api/services/{service_id}/service_plans/{id}/default.xml": {
      "put": {
        "summary": "Service Plan Set to Default",
        "tags": ["Service Plans"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "service_id",
            "in": "path",
            "description": "ID of the service.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the service plan.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      }
    },
    "/admin/api/services/{service_id}/features.xml": {
      "get": {
        "summary": "Service Feature List",
        "tags": ["Service Features"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "service_id",
            "in": "path",
            "description": "ID of the service.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      },
      "post": {
        "summary": "Service Feature Create",
        "tags": ["Service Features"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "service_id",
            "in": "path",
            "description": "ID of the service.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Name of the feature.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "system_name",
            "in": "query",
            "description": "System Name of the object to be created. System names cannot be modified after creation, they are used as the key to identify the objects.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "description",
            "in": "query",
            "description": "Description of the feature.",
            "schema": {
              "type": "ref"
            }
          },
          {
            "name": "scope",
            "in": "query",
            "description": "Type of plan that the feature will be available for.",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "enum": [
                "ApplicationPlan",
                "ServicePlan"
              ]
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      }
    },
    "/admin/api/services/{service_id}/features/{id}.xml": {
      "get": {
        "summary": "Service Feature Read",
        "tags": ["Service Features"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "service_id",
            "in": "path",
            "description": "ID of the service.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the feature.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      },
      "put": {
        "summary": "Service Feature Update",
        "tags": ["Service Features"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "service_id",
            "in": "path",
            "description": "ID of the service.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the feature.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Name of the feature.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "description",
            "in": "query",
            "description": "Description of the feature.",
            "schema": {
              "type": "ref"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      },
      "delete": {
        "summary": "Service Feature Delete",
        "tags": ["Service Features"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "service_id",
            "in": "path",
            "description": "ID of the service.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the feature.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      }
    },
    "/admin/api/settings.json": {
      "get": {
        "summary": "Settings Read",
        "tags": ["Settings"],
        "operationId": "service_metric",
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      },
      "put": {
        "summary": "Settings Update",
        "tags": ["Settings"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useraccountarea_enabled",
            "in": "query",
            "description": "Allow the user to edit their submitted details, change passwords, etc",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "hide_service",
            "in": "query",
            "description": "Used a default service plan",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "signups_enabled",
            "in": "query",
            "description": "Developers are allowed sign up themselves.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "account_approval_required",
            "in": "query",
            "description": "Approval is required by you before developer accounts are activated.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "strong_passwords_enabled",
            "in": "query",
            "description": "Require strong passwords from your users: Password must be at least 8 characters long, and contain both upper and lowercase letters, a digit and one special character of -+=><_$#.:;!?@&*()~][}{|. Existing passwords will still work. ",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "public_search",
            "in": "query",
            "description": "Enables public search on Developer Portal",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "account_plans_ui_visible",
            "in": "query",
            "description": "Enables visibility of Account Plans",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "change_account_plan_permission",
            "in": "query",
            "description": "Account Plans changing",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "service_plans_ui_visible",
            "in": "query",
            "description": "Enables visibility of Service Plans",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "change_service_plan_permission",
            "in": "query",
            "description": "Service Plans changing",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      }
    },
    "/admin/api/webhooks.json": {
      "put": {
        "summary": "WebHooks Update",
        "tags": ["Webhooks"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "url",
            "in": "query",
            "description": "URL that will be notified about all the events",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "active",
            "in": "query",
            "description": "Activate/Disable WebHooks",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "provider_actions",
            "in": "query",
            "description": "Dashboard actions fire webhooks. If false, only user actions in the portal trigger events.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "account_created_on",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "account_updated_on",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "account_deleted_on",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "user_created_on",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "user_updated_on",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "user_deleted_on",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "application_created_on",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "application_updated_on",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "application_deleted_on",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "account_plan_changed_on",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "application_plan_changed_on",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "application_user_key_updated_on",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "application_key_created_on",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "application_key_deleted_on",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "application_suspended_on",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "application_key_updated_on",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      }
    },
    "/admin/api/webhooks/failures.xml": {
      "get": {
        "summary": "Webhooks List Failed Deliveries",
        "tags": ["Webhooks"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      },
      "delete": {
        "summary": "Webhooks Delete Failed Deliveries",
        "tags": ["Webhooks"],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "A personal Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "time",
            "in": "query",
            "description": "Only failed webhook deliveries whose time is less than or equal to the passed time are destroyed (if used).",
            "schema": {
              "type": "ref"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success",
            "content": {}
          }
        }
      }
    }
  },
  "components": {}
}