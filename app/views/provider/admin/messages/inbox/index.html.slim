- content_for :page_header_title, 'Inbox'

- if @messages.blank?
  div class="pf-c-empty-state"
    div class="pf-c-empty-state__content"
      i class="fas fa-inbox pf-c-empty-state__icon" aria-hidden="true"
      h1 class="pf-c-title pf-m-lg"
        = t('.empty_state.title')
      div class="pf-c-empty-state__body"
        = t('.empty_state.body')

- else
  = render 'provider/admin/messages/bulk_operations', scope: :received_messages, messages: @messages

  table class="pf-c-table pf-m-grid-lg" role="grid" aria-label="Messages table" id="messages"
    thead
      tr role="row"
        td role="columnheader" scope="col" class="select pf-c-table__check"
          label
            = bulk_select_all
        th role="columnheader" scope="col" Subject
        th role="columnheader" scope="col" From
        th role="columnheader" scope="col" Date Sent
        th role="columnheader" scope="col" class="pf-c-table__action pf-m-fit-content"
          = link_to 'Compose Message', new_provider_admin_messages_outbox_path, class: "action new"
    tbody role="rowgroup"
      - @messages.each do |message|
        tr role="row" class=message.state id="message_#{message.id}"
          td class="pf-c-table__check select" role="cell" id=message.id
            label
              = bulk_select_one message
          td role="cell" data-label="Subject" = link_to message_subject(message), provider_admin_messages_inbox_path(message)
          td role="cell" data-label="From" = message_sender(message)
          td role="cell" data-label="Date Sent" = message.created_at.to_s(:long)
          td role="cell" class="pf-c-table__action"
            div class="pf-c-overflow-menu"
              div class="pf-c-overflow-menu__content"
                div class="pf-c-overflow-menu__group pf-m-button-group"
                  div class="pf-c-overflow-menu__item"
                    = delete_button_for provider_admin_messages_inbox_path(message), class: 'action'

  = will_paginate(@messages)
  = link_to_export_widget_for('Messages') if can?(:export, :data)
