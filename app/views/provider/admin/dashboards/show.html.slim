- content_for :stylesheets do
  = stylesheet_link_tag 'vendor/c3'

= content_for :javascripts do
  = render_js_module_loader
  = javascript_pack_tag 'dashboard'

.Dashboard
  div.Dashboard-widgets
    // account level
    - if can?(:manage, :partners)
      section.DashboardSection.DashboardSection--audience class=('DashboardSection--wide' unless can?(:manage, :plans))
        header.DashboardSection-header
          h1.DashboardSection-title Audience
          = render 'developers_navigation', buyers: current_account.buyers,
                                            pending_buyers: current_account.buyers.pending,
                                            account_plans: current_account.account_plans.not_custom,
                                            forum_topics: current_account.forum.recent_topics,
                                            unread_messages_presenter: @unread_messages_presenter

        // Account Level Widgets
        = dashboard_widget :new_accounts
        = dashboard_widget :potential_upgrades if can?(:manage, :plans)
    section.DashboardSection.DashboardSection--services class=('DashboardSection--wide' unless can?(:manage, :plans))
      - if current_user.accessible_services?
        header.DashboardSection-header.DashboardSection-header--extended
          = render 'services_filter'
          = render 'services_navigation', api_docs: current_account.api_docs_services,
                                          applications: current_account.provided_cinstances,
                                          alerts: current_account.buyer_alerts.unread


        // API Service Level
        = render collection: @services,
                 partial: 'provider/admin/dashboards/service',
                 cache: ->(service) { [ 'v1', 'dashboard', current_user, current_account, service, 'service' ] },
                 cache_options: { expires_in: 1.hour }

      = render 'shared/service_access'

  div.Dashboard-events
    section.DashboardStream
      = raw(@messages_presenter.render)

javascript:
  System.import('dashboard/toggle').then(function (m) {
    m.default()
  });
