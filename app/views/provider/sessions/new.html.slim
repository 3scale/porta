= javascript_pack_tag 'LoginPage'
- authentication_providers = (@authentication_providers || []).map { |ap| {authorizeURL: ap.authorize_url, humanKind: ap.human_kind} }
- flash_messages = (flash || []).map { |f| {type: f[0], message: f[1]}}
div#pf-login-page-container data-login-props={redirectUrl: (session[:return_to].nil? ? "null" : (request.protocol + request.host_with_port + session[:return_to])),
  enforceSSO: false,
  authenticationProviders: authentication_providers,
  flashMessages: flash_messages,
  show3scaleLoginForm: @presenter.show_username_password_related_content?,
  providerSessionsPath: provider_sessions_path,
  providerLoginPath: provider_login_path,
  providerPasswordPath: provider_password_path,
  providerAdminDashboardPath: provider_admin_dashboard_path,
  session: {username: params[:username]} }.to_json

#old-login-page-wrapper
  .box#old-login-page
    - if @authentication_providers.any?
      - @authentication_providers.each do |auth|
        = link_to auth.authorize_url, class: "authorizeLink" do
          span> class="fa-stack fa-lg"
            i class="fa fa-cloud fa-stack-2x fa-flip-horizontal"
            i class="fa fa-key fa-stack-1x fa-inverse fa-flip-vertical fa-flip-horizontal"
          ' &nbsp;
          ' Authenticate through
          ==> icon(auth.kind)
          = auth.human_kind
      - if @presenter.show_username_password_related_content?
        div.authorizeLink.authorizeLink-alt
          ' or sign in with your 3scale credentials:
    - if @presenter.show_username_password_related_content?
      div style=("display:#{params[:request_password_reset] ? 'none' : 'block'}")
        = semantic_form_for @session, html: { method: :post }, url:provider_sessions_path do |f|
          = f.inputs do
            = f.input :username, label: 'Email or Username', input_html: { value: params[:username], name: 'username', tabindex: 1, autofocus: (params[:username] ? false : true) }
            = f.input :password, input_html: { name: 'password', tabindex: 2, autofocus: (params[:username] ? true : false) }
            = f.hidden_field :remember_me, value: 'true'
          = f.buttons do
            li.forgot
              = link_to 'Forgot password?', provider_login_path(request_password_reset: true), class: 'toggle-panel', data: { panel:  'request_password_reset_panel' }

            li.commit
              = submit_tag 'Sign in', class: 'important-button'
