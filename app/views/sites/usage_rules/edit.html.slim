- content_for :title, "Usage Rules"
- content_for :page_header_title, "Usage Rules"

div class="pf-c-card"
  div class="pf-c-card__body"
    = semantic_form_for settings, url: admin_site_usage_rules_path, html: { class: "pf-c-form pf-m-limit-width" } do |form|
      section class="pf-c-form__section" role="group" aria-labelledby="settings-section-user-account"
        h2 class="pf-c-form__section-title" id="settings-section-user-account" aria-hidden="true" User account management zone
        div class="pf-c-form__group"
          div class="pf-c-form__group-control"
            = render 'settings_check', setting: 'useraccountarea_enabled', checked: settings.useraccountarea_enabled

      - if current_account.master? && !ThreeScale.config.onpremises
        section class="pf-c-form__section" role="group" aria-labelledby="settings-section-hide-service"
          h2 class="pf-c-form__section-title" id="settings-section-hide-service" aria-hidden="true" Hide services
          div class="pf-c-form__group"
            div class="pf-c-form__group-control"
              = render 'settings_check', setting: 'hide_service', checked: settings.hide_service

      section class="pf-c-form__section" role="group" aria-labelledby="settings-section-signup"
        h2 class="pf-c-form__section-title" id="settings-section-signup" aria-hidden="true" Signup
        div class="pf-c-form__group"
          div class="pf-c-form__group-control"
            = render 'settings_check', setting: 'signups_enabled', checked: settings.signups_enabled
        - if settings.authentication_strategy.cas?
          div class="pf-c-form__group"
            div class="pf-c-form__group-control"
              = render 'settings_check', setting: 'cas_server_url', checked: settings.cas_server_url != '0'
        - if settings.approval_required_editable? || settings.approval_required_disabled?
          div class="pf-c-form__group"
            div class="pf-c-form__group-control"
              = render 'settings_check', setting: 'account_approval_required',
                                         checked: settings.account_approval_required,
                                         disabled: settings.approval_required_disabled?,
                                         hint: account_approval_required_hint(current_account)

      section class="pf-c-form__section" role="group" aria-labelledby="settings-section-users"
        h2 class="pf-c-form__section-title" id="settings-section-users" aria-hidden="true" Users
        div class="pf-c-form__group"
          div class="pf-c-form__group-control"
            = render 'settings_check', setting: 'strong_passwords_enabled',
                                       checked: settings.strong_passwords_enabled,
                                       hint: t("formtastic.hints.settings.strong_passwords_enabled", strong_password_definition: strong_password_definition)

      section class="pf-c-form__section" role="group" aria-labelledby="settings-section-search"
        h2 class="pf-c-form__section-title" id="settings-section-search" aria-hidden="true" Search
        div class="pf-c-form__group"
          div class="pf-c-form__group-control"
            = render 'settings_check', setting: 'public_search', checked: settings.public_search

      - if can?(:see, :account_plans)
        - visible = settings.account_plans_ui_visible
        section class="pf-c-form__section" role="group" aria-labelledby="settings-section-account-plans"
          h2 class="pf-c-form__section-title" id="settings-section-account-plans" aria-hidden="true" Account plans
          div class="pf-c-form__group"
            div class="pf-c-form__group-control"
              = render 'settings_check', setting: 'account_plans_ui_visible', checked: visible
          div class="pf-c-form__group use-account-plans #{'hidden' unless visible}" role="radiogroup" aria-labelledby="account-plan-radio-group"
            div class="pf-c-form__group-label" id="account-plan-radio-group"
              label class="pf-c-form__label"
                span class="pf-c-form__label-text" Account Plans Changing
            = render 'shared/plan_change_settings', permission: 'change_account_plan_permission', settings: settings

      - if can?(:see, :service_plans)
        - visible = settings.service_plans_ui_visible
        section class="pf-c-form__section" role="group" aria-labelledby="settings-section-service-plans"
          h2 class="pf-c-form__section-title" id="settings-section-service-plans" aria-hidden="true" Service plans
          div class="pf-c-form__group"
            div class="pf-c-form__group-control"
              = render 'settings_check', setting: 'service_plans_ui_visible', checked: visible
          div class="pf-c-form__group use-service-plans #{'hidden' unless visible}" role="radiogroup" aria-labelledby="service-plan-radio-group"
            div class="pf-c-form__group-label" id="service-plan-radio-group"
              label class="pf-c-form__label"
                span class="pf-c-form__label-text" Service Plan Changing
            = render 'shared/plan_change_settings', permission: 'change_service_plan_permission', settings: settings

      div class="pf-c-form__group pf-m-action"
        div class="pf-c-form__actions"
          button class="pf-c-button pf-m-primary" type="submit" Update Settings

javascript:
  document.addEventListener('DOMContentLoaded', () => {
    [
      ['settings_account_plans_ui_visible', '.pf-c-form__group.use-account-plans'],
      ['settings_service_plans_ui_visible', '.pf-c-form__group.use-service-plans']
    ].forEach(([inputId, targetSelector]) => {
      const input = document.getElementById(inputId)
      const target = document.querySelector(targetSelector)
      input.addEventListener('change', (e) => {
        target.classList.toggle('hidden', !e.target.checked)
      })
    })
  })
