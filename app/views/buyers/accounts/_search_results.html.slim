- account_plans_size = @account_plans.size
- create_account_path = current_account.master? ? new_provider_admin_account_path : new_admin_buyers_account_path

div class="pf-c-card"
  table class="data pf-c-table pf-m-grid-lg" role="grid" id="buyer_accounts" aria-label="Accounts table"
    thead
      tr role="row"
        td role="columnheader" scope="col" class="select pf-c-table__check"
          label
            = bulk_select_all
        = th_sortable('org_name', 'Group/Org.')
        th role="columnheader" scope="col"
          | Admin
        = th_sortable('created_at', 'Signup Date')
        - if account_plans_size > 1
          = th_sortable('plans.name', 'Plan')
        - if can?(:see, :multiple_applications)
          th role="columnheader" scope="col"
            | Apps
        = th_sortable('state', 'State')
        th role="columnheader" scope="col" class="actions pf-m-width-15 pf-c-table__action"
          - if can?(:create, Account)
            = link_to 'Create', create_account_path, title: 'Create new account', class: 'action add'

      tr role="row" class="search"
        = search_form do |s|
          th role="columnheader" scope="col" colspan="3"
            = s.text_field :query, value: search_query_value,
                                   size: 20,
                                   class: :query,
                                   placeholder: 'Search for Group/Org., User login, First name, Last name, email, user_key, app_id or Application Name.'
          - if account_plans_size > 1
            th role="columnheader" scope="col"
              = s.collection_select :plan_id, @account_plans,
                                              :id, :name,
                                              { include_blank: true },
                                              { class: :account_plans }

          - if can?(:see, :multiple_applications)
            th role="columnheader" scope="col"
          th role="columnheader" scope="col"
            = s.select :state, account_states_for_select,
                               { include_blank: true, selected: @search.state },
                               { class: :state }
          th role="columnheader" scope="col"
            = s.button 'Search', name: nil, class: "pf-c-button pf-m-primary"

    tbody role="rowgroup"
      - accounts.each do |account|
        tr role="row" id=dom_id(account)
          td class="pf-c-table__check" role="cell" class="select" id=account.id
            label
              = bulk_select_one account
          td role="cell" data-label="Group/Org."
            = link_to account.org_name, admin_buyers_account_path(account)
          td role="cell" data-label="Admin"
            = account.admin_user_display_name
          td role="cell" data-label="Signup Date"
            = account.created_at.strftime("%e %b, %Y")
          - if account_plans_size > 1
            td role="cell" data-label="Plan" class="plan"
              = h account.bought_account_plan.try(:name)
          - if can?(:see, :multiple_applications)
            td role="cell" data-label="Apps"
              = link_to current_user.accessible_cinstances.bought_by(account).count, admin_buyers_account_applications_path(account)
          td role="cell" data-label="State" class="state"
            = account_states_info(account)
          td role="cell" class="pf-c-table__action actions operations"
            ul.Actions
              - if account.admin_user.try!(:pending?) || true
                li.Actions-item
                  = link_to_activate_buyer_user(account.admins.first)
              - elsif account.pending?
                li.Actions-item
                  = action_link_to 'approve', approve_admin_buyers_account_path(account),
                                              method: :post
              - elsif can? :impersonate, account
                li.Actions-item
                  = link_to "Act as", admin_buyers_account_impersonation_path(account),
                                      method: :post,
                                      target: '_blank',
                                      title: 'Impersonate impersonation_admin user on this provider side',
                                      class: 'action bolt'

      = no_search_results(can?(:see, :multiple_applications) ? 9 : 8) if accounts.empty?

= will_paginate accounts
= link_to_export_widget_for('Accounts')
