- content_for :title, 'Charging & Gateway'
- content_for :page_header_title, 'Charging & Gateway'

- if @current_gateway&.deprecated?
  - content_for :page_header_alert do
    br
    = pf_inline_alert t('.deprecation_warning', gateway: @current_gateway.type.capitalize), variant: :warning

div class="pf-l-flex pf-m-column"
  div class="pf-l-flex__item"
    div class="pf-c-card"
      div class="pf-c-card__title" Billing mode
      div class="pf-c-card__body"
        = semantic_form_for @billing_strategy, url: admin_finance_billing_strategy_path,
                                               method: :put,
                                               html: { class: 'pf-c-form pf-m-limit-width' } do |form|
          div class="pf-c-content"
            = t(".#{@billing_strategy.name}_description_html")

          - new_mode = @billing_strategy.is_a?(Finance::PostpaidBillingStrategy) ? 'prepaid' : 'postpaid'
          = hidden_field_tag 'type', new_mode
          = form.actions do
            button class="pf-c-button pf-m-danger" type="submit" data={ confirm: t('.switch_confirm', mode: new_mode) }
              = t('.switch_button', mode: new_mode.upcase)

  div class="pf-l-flex__item"
    div class="pf-c-card"
      div class="pf-c-card__title" Billing settings
      div class="pf-c-card__body"
        = semantic_form_for @billing_strategy.becomes(Finance::BillingStrategy),
                            url: admin_finance_settings_path,
                            html: { class: 'pf-c-form pf-m-limit-width' } do |form|
          = form.input :charging_enabled, as: :patternfly_checkbox
          = form.input :currency, as: :patternfly_select,
                                  collection: Finance::BillingStrategy::CURRENCIES,
                                  include_blank: false

          = form.semantic_fields_for :account do |account|
            = account.input :invoice_footnote, as: :patternfly_textarea, input_html: { rows: 2 }
            = account.input :vat_zero_text, as: :patternfly_textarea, input_html: { rows: 2 }

          = form.input :numbering_period, as: :patternfly_select,
                                          collection: [['Monthly (YYYY-MM-XXXXXXXX)', 'monthly'], ['Yearly (YYYY-XXXXXXXX)', 'yearly']],
                                          include_blank: false

          = form.actions do
            button class="pf-c-button pf-m-primary" type="submit" Save

  - if can?(:manage, :finance) && @account.billing_strategy.try(:needs_credit_card?)
    div class="pf-l-flex__item"
      div class="pf-c-card"
        div class="pf-c-card__title" Credit card gateway
        div class="pf-c-card__body"
          = semantic_form_for @account, url: admin_account_payment_gateway_path,
                                        html: { id: 'payment-gateway-form', class: 'pf-c-form pf-m-limit-width' } do |form|
            = form.input :payment_gateway_type, as: :patternfly_select,
                                                collection: @payment_gateways.map { |gateway| [gateway.display_name, gateway.type] },
                                                include_blank: 'Choose one'

            = form.fields_for :payment_gateway_options do |fields|
              - @payment_gateways.each do |payment_gateway|
                - if payment_gateway.fields.present?
                  - is_current = payment_gateway.type == @account.payment_gateway_type
                  section class="pf-c-form__section payment_gateway_options #{is_current ? '' : 'hidden'}" id="payment_gateway_#{payment_gateway.type}" role="group"
                    - payment_gateway.fields.each do |name, label|
                      - if payment_gateway.boolean_field_keys.include?(name)
                        = fields.input name, as: :patternfly_checkbox,
                                            label: label,
                                            id: ['account', 'payment', payment_gateway.type, name].join('_'),
                                            input_html: { checked: is_current && @account.payment_gateway_options[name].present? }
                      - else
                        = fields.input name, as: :patternfly_input,
                                            label: label,
                                            input_html: { value: is_current ? @account.payment_gateway_options[name] : nil }
                    - if payment_gateway.deprecated
                      = pf_inline_alert t('.deprecation_warning', gateway: payment_gateway.type.capitalize), variant: :warning

            = form.actions do
              button class="pf-c-button pf-m-primary" type="submit" Save

    javascript:
      document.addEventListener('DOMContentLoaded', () => {
        const form = document.forms['payment-gateway-form']
        const gatewaySelect = form.querySelector('#account_payment_gateway_type')
        const gatewaySections = form.querySelectorAll('.payment_gateway_options')

        gatewaySelect.addEventListener('change', event => {
          const selectedGatewayId = `payment_gateway_${event.target.value}`
          gatewaySections.forEach(div => div.classList.toggle('hidden', div.id !== selectedGatewayId))
        })

        // TODO: Don't use confirm as it can be blocked by browser. Create custom modal.
        form.addEventListener('submit', (event) => {
          const newGatewaySelected = gatewaySelect.value !== "#{ @account.payment_gateway_type }"

          if (newGatewaySelected) {
            if (!confirm("#{ raw t('.save_gateway_confirm_1') }")) {
              event.preventDefault()
              return
            }

            if (!confirm("#{ raw t('.save_gateway_confirm_2') }")) {
              event.preventDefault()
              return
            }
          }

          return
        })
      })
