// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should render itself 1`] = `
<ChangePassword
  errors={Array []}
  lostPasswordToken="foo"
  url="foo/bar"
>
  <LoginPage
    backgroundImgAlt="Red Hat 3scale API Management"
    backgroundImgSrc=""
    brandImgAlt="Red Hat 3scale API Management"
    brandImgSrc=""
    footer={null}
    loginTitle="Change Password"
  >
    <Login
      className=""
      footer={null}
      header={
        <LoginHeader
          headerBrand={
            <React.Fragment>
              <Brand
                alt="Red Hat 3scale API Management"
                src=""
              />
            </React.Fragment>
          }
        />
      }
    >
      <div
        className="pf-c-login"
      >
        <div
          className="pf-c-login__container"
        >
          <LoginHeader
            headerBrand={
              <React.Fragment>
                <Brand
                  alt="Red Hat 3scale API Management"
                  src=""
                />
              </React.Fragment>
            }
          >
            <header
              className="pf-c-login__header"
            >
              <Brand
                alt="Red Hat 3scale API Management"
                src=""
              >
                <img
                  alt="Red Hat 3scale API Management"
                  className="pf-c-brand"
                  src=""
                />
              </Brand>
            </header>
          </LoginHeader>
          <main
            className="pf-c-login__main"
          >
            <LoginMainHeader
              title="Change Password"
            >
              <header
                className="pf-c-login__main-header"
              >
                <Title
                  headingLevel="h2"
                  size="3xl"
                >
                  <h2
                    className="pf-c-title pf-m-3xl"
                  >
                    Change Password
                  </h2>
                </Title>
              </header>
            </LoginMainHeader>
            <LoginMainBody>
              <div
                className="pf-c-login__main-body"
              >
                <FlashMessages
                  flashMessages={Array []}
                >
                  <div />
                </FlashMessages>
                <Form
                  acceptCharset="UTF-8"
                  action="foo/bar"
                  id="edit_user_2"
                  method="post"
                  noValidate={true}
                  onChange={[Function]}
                >
                  <form
                    acceptCharset="UTF-8"
                    action="foo/bar"
                    className="pf-c-form"
                    id="edit_user_2"
                    method="post"
                    noValidate={true}
                    onChange={[Function]}
                  >
                    <input
                      name="_method"
                      type="hidden"
                      value="put"
                    />
                    <HiddenInputs>
                      <input
                        name="utf8"
                        type="hidden"
                        value="âœ“"
                      />
                      <CSRFToken>
                        <input
                          type="hidden"
                        />
                      </CSRFToken>
                    </HiddenInputs>
                    <PasswordField
                      inputProps={
                        Object {
                          "autoFocus": "autoFocus",
                          "errorMessage": undefined,
                          "fieldId": "user_password",
                          "isRequired": true,
                          "isValid": true,
                          "label": "Password",
                          "name": "user[password]",
                          "onBlur": [Function],
                          "onChange": [Function],
                          "value": "",
                        }
                      }
                    >
                      <FormGroup
                        helperTextInvalid="Password is mandatory"
                        inputProps={
                          Object {
                            "autoFocus": "autoFocus",
                            "errorMessage": undefined,
                            "fieldId": "user_password",
                            "isRequired": true,
                            "isValid": true,
                            "label": "Password",
                            "name": "user[password]",
                            "onBlur": [Function],
                            "onChange": [Function],
                            "value": "",
                          }
                        }
                        type="password"
                      >
                        <FormGroup
                          fieldId="user_password"
                          helperTextInvalid="Password is mandatory"
                          isRequired={true}
                          isValid={true}
                          label="Password"
                        >
                          <div
                            className="pf-c-form__group"
                          >
                            <label
                              className="pf-c-form__label"
                              htmlFor="user_password"
                            >
                              <span
                                className="pf-c-form__label-text"
                              >
                                Password
                              </span>
                              <span
                                aria-hidden="true"
                                className="pf-c-form__label-required"
                              >
                                *
                              </span>
                            </label>
                            <ForwardRef
                              autoFocus="autoFocus"
                              id="user_password"
                              isRequired={true}
                              isValid={true}
                              name="user[password]"
                              onBlur={[Function]}
                              onChange={[Function]}
                              type="password"
                              value=""
                            >
                              <TextInputBase
                                aria-label={null}
                                autoFocus="autoFocus"
                                className=""
                                id="user_password"
                                innerRef={null}
                                isDisabled={false}
                                isReadOnly={false}
                                isRequired={true}
                                isValid={true}
                                name="user[password]"
                                onBlur={[Function]}
                                onChange={[Function]}
                                type="password"
                                validated="default"
                                value=""
                              >
                                <input
                                  aria-invalid={false}
                                  aria-label={null}
                                  autoFocus="autoFocus"
                                  className="pf-c-form-control"
                                  disabled={false}
                                  id="user_password"
                                  name="user[password]"
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  readOnly={false}
                                  required={true}
                                  type="password"
                                  value=""
                                />
                              </TextInputBase>
                            </ForwardRef>
                          </div>
                        </FormGroup>
                      </FormGroup>
                    </PasswordField>
                    <PasswordConfirmationField
                      inputProps={
                        Object {
                          "errorMessage": undefined,
                          "fieldId": "user_password_confirmation",
                          "isRequired": true,
                          "isValid": true,
                          "label": "Password confirmation",
                          "name": "user[password_confirmation]",
                          "onBlur": [Function],
                          "onChange": [Function],
                          "value": "",
                        }
                      }
                    >
                      <FormGroup
                        helperTextInvalid="Password confirmation is mandatory"
                        inputProps={
                          Object {
                            "errorMessage": undefined,
                            "fieldId": "user_password_confirmation",
                            "isRequired": true,
                            "isValid": true,
                            "label": "Password confirmation",
                            "name": "user[password_confirmation]",
                            "onBlur": [Function],
                            "onChange": [Function],
                            "value": "",
                          }
                        }
                        type="password"
                      >
                        <FormGroup
                          fieldId="user_password_confirmation"
                          helperTextInvalid="Password confirmation is mandatory"
                          isRequired={true}
                          isValid={true}
                          label="Password confirmation"
                        >
                          <div
                            className="pf-c-form__group"
                          >
                            <label
                              className="pf-c-form__label"
                              htmlFor="user_password_confirmation"
                            >
                              <span
                                className="pf-c-form__label-text"
                              >
                                Password confirmation
                              </span>
                              <span
                                aria-hidden="true"
                                className="pf-c-form__label-required"
                              >
                                *
                              </span>
                            </label>
                            <ForwardRef
                              id="user_password_confirmation"
                              isRequired={true}
                              isValid={true}
                              name="user[password_confirmation]"
                              onBlur={[Function]}
                              onChange={[Function]}
                              type="password"
                              value=""
                            >
                              <TextInputBase
                                aria-label={null}
                                className=""
                                id="user_password_confirmation"
                                innerRef={null}
                                isDisabled={false}
                                isReadOnly={false}
                                isRequired={true}
                                isValid={true}
                                name="user[password_confirmation]"
                                onBlur={[Function]}
                                onChange={[Function]}
                                type="password"
                                validated="default"
                                value=""
                              >
                                <input
                                  aria-invalid={false}
                                  aria-label={null}
                                  className="pf-c-form-control"
                                  disabled={false}
                                  id="user_password_confirmation"
                                  name="user[password_confirmation]"
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  readOnly={false}
                                  required={true}
                                  type="password"
                                  value=""
                                />
                              </TextInputBase>
                            </ForwardRef>
                          </div>
                        </FormGroup>
                      </FormGroup>
                    </PasswordConfirmationField>
                    <input
                      id="password_reset_token"
                      name="password_reset_token"
                      type="hidden"
                      value="foo"
                    />
                    <ActionGroup>
                      <div
                        className="pf-c-form__group pf-m-action"
                      >
                        <div
                          className="pf-c-form__actions"
                        >
                          <Component
                            className="pf-c-button pf-m-primary pf-m-block"
                            isDisabled={true}
                            name="commit"
                            type="submit"
                          >
                            <ComponentWithOuia
                              component={[Function]}
                              componentProps={
                                Object {
                                  "children": "Change Password",
                                  "className": "pf-c-button pf-m-primary pf-m-block",
                                  "isDisabled": true,
                                  "name": "commit",
                                  "type": "submit",
                                }
                              }
                              consumerContext={null}
                            >
                              <Button
                                className="pf-c-button pf-m-primary pf-m-block"
                                isDisabled={true}
                                name="commit"
                                ouiaContext={
                                  Object {
                                    "isOuia": false,
                                    "ouiaId": null,
                                  }
                                }
                                type="submit"
                              >
                                <button
                                  aria-disabled={null}
                                  aria-label={null}
                                  className="pf-c-button pf-m-primary pf-c-button pf-m-primary pf-m-block"
                                  disabled={true}
                                  name="commit"
                                  tabIndex={null}
                                  type="submit"
                                >
                                  Change Password
                                </button>
                              </Button>
                            </ComponentWithOuia>
                          </Component>
                        </div>
                      </div>
                    </ActionGroup>
                  </form>
                </Form>
              </div>
            </LoginMainBody>
          </main>
        </div>
      </div>
    </Login>
  </LoginPage>
</ChangePassword>
`;

exports[`should render with server side errors when present 1`] = `
<ChangePassword
  errors={
    Array [
      Object {
        "message": "Ooops!",
        "type": "error",
      },
    ]
  }
  lostPasswordToken="foo"
  url="foo/bar"
>
  <LoginPage
    backgroundImgAlt="Red Hat 3scale API Management"
    backgroundImgSrc=""
    brandImgAlt="Red Hat 3scale API Management"
    brandImgSrc=""
    footer={null}
    loginTitle="Change Password"
  >
    <Login
      className=""
      footer={null}
      header={
        <LoginHeader
          headerBrand={
            <React.Fragment>
              <Brand
                alt="Red Hat 3scale API Management"
                src=""
              />
            </React.Fragment>
          }
        />
      }
    >
      <div
        className="pf-c-login"
      >
        <div
          className="pf-c-login__container"
        >
          <LoginHeader
            headerBrand={
              <React.Fragment>
                <Brand
                  alt="Red Hat 3scale API Management"
                  src=""
                />
              </React.Fragment>
            }
          >
            <header
              className="pf-c-login__header"
            >
              <Brand
                alt="Red Hat 3scale API Management"
                src=""
              >
                <img
                  alt="Red Hat 3scale API Management"
                  className="pf-c-brand"
                  src=""
                />
              </Brand>
            </header>
          </LoginHeader>
          <main
            className="pf-c-login__main"
          >
            <LoginMainHeader
              title="Change Password"
            >
              <header
                className="pf-c-login__main-header"
              >
                <Title
                  headingLevel="h2"
                  size="3xl"
                >
                  <h2
                    className="pf-c-title pf-m-3xl"
                  >
                    Change Password
                  </h2>
                </Title>
              </header>
            </LoginMainHeader>
            <LoginMainBody>
              <div
                className="pf-c-login__main-body"
              >
                <FlashMessages
                  flashMessages={
                    Array [
                      Object {
                        "message": "Ooops!",
                        "type": "error",
                      },
                    ]
                  }
                >
                  <div>
                    <p
                      className="pf-c-form__helper-text pf-m-error"
                      key="Ooops!"
                    >
                      <ExclamationCircleIcon
                        color="currentColor"
                        noVerticalAlign={false}
                        size="sm"
                        title={null}
                      >
                        <svg
                          aria-hidden={true}
                          aria-labelledby={null}
                          fill="currentColor"
                          height="1em"
                          role="img"
                          style={
                            Object {
                              "verticalAlign": "-0.125em",
                            }
                          }
                          viewBox="0 0 512 512"
                          width="1em"
                        >
                          <path
                            d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zm-248 50c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z"
                            transform=""
                          />
                        </svg>
                      </ExclamationCircleIcon>
                       Ooops!
                    </p>
                  </div>
                </FlashMessages>
                <Form
                  acceptCharset="UTF-8"
                  action="foo/bar"
                  id="edit_user_2"
                  method="post"
                  noValidate={true}
                  onChange={[Function]}
                >
                  <form
                    acceptCharset="UTF-8"
                    action="foo/bar"
                    className="pf-c-form"
                    id="edit_user_2"
                    method="post"
                    noValidate={true}
                    onChange={[Function]}
                  >
                    <input
                      name="_method"
                      type="hidden"
                      value="put"
                    />
                    <HiddenInputs>
                      <input
                        name="utf8"
                        type="hidden"
                        value="âœ“"
                      />
                      <CSRFToken>
                        <input
                          type="hidden"
                        />
                      </CSRFToken>
                    </HiddenInputs>
                    <PasswordField
                      inputProps={
                        Object {
                          "autoFocus": "autoFocus",
                          "errorMessage": undefined,
                          "fieldId": "user_password",
                          "isRequired": true,
                          "isValid": true,
                          "label": "Password",
                          "name": "user[password]",
                          "onBlur": [Function],
                          "onChange": [Function],
                          "value": "",
                        }
                      }
                    >
                      <FormGroup
                        helperTextInvalid="Password is mandatory"
                        inputProps={
                          Object {
                            "autoFocus": "autoFocus",
                            "errorMessage": undefined,
                            "fieldId": "user_password",
                            "isRequired": true,
                            "isValid": true,
                            "label": "Password",
                            "name": "user[password]",
                            "onBlur": [Function],
                            "onChange": [Function],
                            "value": "",
                          }
                        }
                        type="password"
                      >
                        <FormGroup
                          fieldId="user_password"
                          helperTextInvalid="Password is mandatory"
                          isRequired={true}
                          isValid={true}
                          label="Password"
                        >
                          <div
                            className="pf-c-form__group"
                          >
                            <label
                              className="pf-c-form__label"
                              htmlFor="user_password"
                            >
                              <span
                                className="pf-c-form__label-text"
                              >
                                Password
                              </span>
                              <span
                                aria-hidden="true"
                                className="pf-c-form__label-required"
                              >
                                *
                              </span>
                            </label>
                            <ForwardRef
                              autoFocus="autoFocus"
                              id="user_password"
                              isRequired={true}
                              isValid={true}
                              name="user[password]"
                              onBlur={[Function]}
                              onChange={[Function]}
                              type="password"
                              value=""
                            >
                              <TextInputBase
                                aria-label={null}
                                autoFocus="autoFocus"
                                className=""
                                id="user_password"
                                innerRef={null}
                                isDisabled={false}
                                isReadOnly={false}
                                isRequired={true}
                                isValid={true}
                                name="user[password]"
                                onBlur={[Function]}
                                onChange={[Function]}
                                type="password"
                                validated="default"
                                value=""
                              >
                                <input
                                  aria-invalid={false}
                                  aria-label={null}
                                  autoFocus="autoFocus"
                                  className="pf-c-form-control"
                                  disabled={false}
                                  id="user_password"
                                  name="user[password]"
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  readOnly={false}
                                  required={true}
                                  type="password"
                                  value=""
                                />
                              </TextInputBase>
                            </ForwardRef>
                          </div>
                        </FormGroup>
                      </FormGroup>
                    </PasswordField>
                    <PasswordConfirmationField
                      inputProps={
                        Object {
                          "errorMessage": undefined,
                          "fieldId": "user_password_confirmation",
                          "isRequired": true,
                          "isValid": true,
                          "label": "Password confirmation",
                          "name": "user[password_confirmation]",
                          "onBlur": [Function],
                          "onChange": [Function],
                          "value": "",
                        }
                      }
                    >
                      <FormGroup
                        helperTextInvalid="Password confirmation is mandatory"
                        inputProps={
                          Object {
                            "errorMessage": undefined,
                            "fieldId": "user_password_confirmation",
                            "isRequired": true,
                            "isValid": true,
                            "label": "Password confirmation",
                            "name": "user[password_confirmation]",
                            "onBlur": [Function],
                            "onChange": [Function],
                            "value": "",
                          }
                        }
                        type="password"
                      >
                        <FormGroup
                          fieldId="user_password_confirmation"
                          helperTextInvalid="Password confirmation is mandatory"
                          isRequired={true}
                          isValid={true}
                          label="Password confirmation"
                        >
                          <div
                            className="pf-c-form__group"
                          >
                            <label
                              className="pf-c-form__label"
                              htmlFor="user_password_confirmation"
                            >
                              <span
                                className="pf-c-form__label-text"
                              >
                                Password confirmation
                              </span>
                              <span
                                aria-hidden="true"
                                className="pf-c-form__label-required"
                              >
                                *
                              </span>
                            </label>
                            <ForwardRef
                              id="user_password_confirmation"
                              isRequired={true}
                              isValid={true}
                              name="user[password_confirmation]"
                              onBlur={[Function]}
                              onChange={[Function]}
                              type="password"
                              value=""
                            >
                              <TextInputBase
                                aria-label={null}
                                className=""
                                id="user_password_confirmation"
                                innerRef={null}
                                isDisabled={false}
                                isReadOnly={false}
                                isRequired={true}
                                isValid={true}
                                name="user[password_confirmation]"
                                onBlur={[Function]}
                                onChange={[Function]}
                                type="password"
                                validated="default"
                                value=""
                              >
                                <input
                                  aria-invalid={false}
                                  aria-label={null}
                                  className="pf-c-form-control"
                                  disabled={false}
                                  id="user_password_confirmation"
                                  name="user[password_confirmation]"
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  readOnly={false}
                                  required={true}
                                  type="password"
                                  value=""
                                />
                              </TextInputBase>
                            </ForwardRef>
                          </div>
                        </FormGroup>
                      </FormGroup>
                    </PasswordConfirmationField>
                    <input
                      id="password_reset_token"
                      name="password_reset_token"
                      type="hidden"
                      value="foo"
                    />
                    <ActionGroup>
                      <div
                        className="pf-c-form__group pf-m-action"
                      >
                        <div
                          className="pf-c-form__actions"
                        >
                          <Component
                            className="pf-c-button pf-m-primary pf-m-block"
                            isDisabled={true}
                            name="commit"
                            type="submit"
                          >
                            <ComponentWithOuia
                              component={[Function]}
                              componentProps={
                                Object {
                                  "children": "Change Password",
                                  "className": "pf-c-button pf-m-primary pf-m-block",
                                  "isDisabled": true,
                                  "name": "commit",
                                  "type": "submit",
                                }
                              }
                              consumerContext={null}
                            >
                              <Button
                                className="pf-c-button pf-m-primary pf-m-block"
                                isDisabled={true}
                                name="commit"
                                ouiaContext={
                                  Object {
                                    "isOuia": false,
                                    "ouiaId": null,
                                  }
                                }
                                type="submit"
                              >
                                <button
                                  aria-disabled={null}
                                  aria-label={null}
                                  className="pf-c-button pf-m-primary pf-c-button pf-m-primary pf-m-block"
                                  disabled={true}
                                  name="commit"
                                  tabIndex={null}
                                  type="submit"
                                >
                                  Change Password
                                </button>
                              </Button>
                            </ComponentWithOuia>
                          </Component>
                        </div>
                      </div>
                    </ActionGroup>
                  </form>
                </Form>
              </div>
            </LoginMainBody>
          </main>
        </div>
      </div>
    </Login>
  </LoginPage>
</ChangePassword>
`;
