// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should render correctly 1`] = `
<SelectGroup
  catalog={
    Object {
      "massive_attack": "Massive Attack",
      "nick_cave": "Nick Cave",
      "tame_impala": "Tame Impala",
      "the_libertines": "The Libertines",
    }
  }
  hint="Pick your favourite"
  label="Jukebox"
  name="jukebox"
  value="nick_cave"
>
  <FormGroup
    fieldId="service_proxy_attributes_jukebox_select"
    helperText="Pick your favourite"
    label="Jukebox"
  >
    <div
      className="pf-c-form__group"
    >
      <label
        className="pf-c-form__label"
        htmlFor="service_proxy_attributes_jukebox_select"
      >
        <span
          className="pf-c-form__label-text"
        >
          Jukebox
        </span>
      </label>
      <input
        name="service[proxy_attributes][jukebox]"
        type="hidden"
        value="nick_cave"
      />
      <Component
        id="service_proxy_attributes_jukebox_select"
        isExpanded={false}
        onSelect={[Function]}
        onToggle={[Function]}
        selections="Nick Cave"
      >
        <ComponentWithOuia
          component={[Function]}
          componentProps={
            Object {
              "children": Array [
                <SelectOption
                  className=""
                  component="button"
                  index={0}
                  isChecked={false}
                  isDisabled={false}
                  isFocused={false}
                  isNoResultsOption={false}
                  isPlaceholder={false}
                  isSelected={false}
                  keyHandler={[Function]}
                  onClick={[Function]}
                  sendRef={[Function]}
                  value={
                    Object {
                      "key": "the_libertines",
                      "toString": [Function],
                    }
                  }
                />,
                <SelectOption
                  className=""
                  component="button"
                  index={0}
                  isChecked={false}
                  isDisabled={false}
                  isFocused={false}
                  isNoResultsOption={false}
                  isPlaceholder={false}
                  isSelected={false}
                  keyHandler={[Function]}
                  onClick={[Function]}
                  sendRef={[Function]}
                  value={
                    Object {
                      "key": "tame_impala",
                      "toString": [Function],
                    }
                  }
                />,
                <SelectOption
                  className=""
                  component="button"
                  index={0}
                  isChecked={false}
                  isDisabled={false}
                  isFocused={false}
                  isNoResultsOption={false}
                  isPlaceholder={false}
                  isSelected={false}
                  keyHandler={[Function]}
                  onClick={[Function]}
                  sendRef={[Function]}
                  value={
                    Object {
                      "key": "massive_attack",
                      "toString": [Function],
                    }
                  }
                />,
                <SelectOption
                  className=""
                  component="button"
                  index={0}
                  isChecked={false}
                  isDisabled={false}
                  isFocused={false}
                  isNoResultsOption={false}
                  isPlaceholder={false}
                  isSelected={false}
                  keyHandler={[Function]}
                  onClick={[Function]}
                  sendRef={[Function]}
                  value={
                    Object {
                      "key": "nick_cave",
                      "toString": [Function],
                    }
                  }
                />,
              ],
              "id": "service_proxy_attributes_jukebox_select",
              "isExpanded": false,
              "onSelect": [Function],
              "onToggle": [Function],
              "selections": "Nick Cave",
            }
          }
          consumerContext={null}
        >
          <Select
            aria-label=""
            ariaLabelClear="Clear all"
            ariaLabelRemove="Remove"
            ariaLabelToggle="Options menu"
            ariaLabelTypeAhead=""
            ariaLabelledBy=""
            className=""
            createText="Create"
            customBadgeText={null}
            customContent={null}
            direction="down"
            hasInlineFilter={false}
            id="service_proxy_attributes_jukebox_select"
            inlineFilterPlaceholderText={null}
            isCreatable={false}
            isDisabled={false}
            isExpanded={false}
            isGrouped={false}
            isPlain={false}
            noResultsFoundText="No results found"
            onClear={[Function]}
            onCreateOption={[Function]}
            onFilter={null}
            onSelect={[Function]}
            onToggle={[Function]}
            ouiaContext={
              Object {
                "isOuia": false,
                "ouiaId": null,
              }
            }
            placeholderText=""
            selections="Nick Cave"
            toggleIcon={null}
            toggleId={null}
            variant="single"
            width=""
          >
            <div
              className="pf-c-select"
              style={
                Object {
                  "width": "",
                }
              }
            >
              <SelectToggle
                ariaLabelToggle="Options menu"
                ariaLabelledBy=" pf-toggle-id-0"
                className=""
                handleTypeaheadKeys={[Function]}
                hasClearButton={false}
                id="pf-toggle-id-0"
                isActive={false}
                isDisabled={false}
                isExpanded={false}
                isFocused={false}
                isHovered={false}
                isPlain={false}
                onClose={[Function]}
                onEnter={[Function]}
                onToggle={[Function]}
                parentRef={
                  Object {
                    "current": <div
                      class="pf-c-select"
                    >
                      <button
                        aria-expanded="false"
                        aria-haspopup="listbox"
                        aria-labelledby=" pf-toggle-id-0"
                        class="pf-c-select__toggle"
                        id="pf-toggle-id-0"
                        type="button"
                      >
                        <div
                          class="pf-c-select__toggle-wrapper"
                        >
                          <span
                            class="pf-c-select__toggle-text"
                          >
                            Nick Cave
                          </span>
                        </div>
                        <svg
                          aria-hidden="true"
                          class="pf-c-select__toggle-arrow"
                          fill="currentColor"
                          height="1em"
                          role="img"
                          style="vertical-align: -0.125em;"
                          viewBox="0 0 320 512"
                          width="1em"
                        >
                          <path
                            d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                            transform=""
                          />
                        </svg>
                      </button>
                    </div>,
                  }
                }
                type="button"
                variant="single"
              >
                <button
                  aria-expanded={false}
                  aria-haspopup="listbox"
                  aria-labelledby=" pf-toggle-id-0"
                  className="pf-c-select__toggle"
                  disabled={false}
                  id="pf-toggle-id-0"
                  onClick={[Function]}
                  onKeyDown={[Function]}
                  type="button"
                >
                  <div
                    className="pf-c-select__toggle-wrapper"
                  >
                    <span
                      className="pf-c-select__toggle-text"
                    >
                      Nick Cave
                    </span>
                  </div>
                  <CaretDownIcon
                    className="pf-c-select__toggle-arrow"
                    color="currentColor"
                    noVerticalAlign={false}
                    size="sm"
                    title={null}
                  >
                    <svg
                      aria-hidden={true}
                      aria-labelledby={null}
                      className="pf-c-select__toggle-arrow"
                      fill="currentColor"
                      height="1em"
                      role="img"
                      style={
                        Object {
                          "verticalAlign": "-0.125em",
                        }
                      }
                      viewBox="0 0 320 512"
                      width="1em"
                    >
                      <path
                        d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                        transform=""
                      />
                    </svg>
                  </CaretDownIcon>
                </button>
              </SelectToggle>
            </div>
          </Select>
        </ComponentWithOuia>
      </Component>
      <div
        aria-live="polite"
        className="pf-c-form__helper-text"
        id="service_proxy_attributes_jukebox_select-helper"
      >
        Pick your favourite
      </div>
    </div>
  </FormGroup>
</SelectGroup>
`;
